{"version":3,"file":"static/js/731.991f43dc.chunk.js","mappings":"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","sources":["components/Status.jsx","pages/LivePage.jsx"],"sourcesContent":["import { Box } from \"@chakra-ui/layout\";\r\n\r\nconst StatusIndicator = ({ status, isConnected }) => (\r\n  <Box\r\n    p={2}\r\n    borderRadius=\"4px\"\r\n    bg={isConnected ? \"green.500\" : \"red.500\"}\r\n    color=\"white\"\r\n  >\r\n    {status}\r\n  </Box>\r\n);\r\n\r\nexport default StatusIndicator;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { FaPlay, FaStop } from \"react-icons/fa\";\r\n// import Janus from \"janus-gateway-js\";\r\nimport \"../App.css\";\r\nimport \"webrtc-adapter\";\r\nimport StatusIndicator from \"../components/Status\";\r\nimport { Box, Flex, Heading, Text, Spinner } from \"@chakra-ui/react\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport Janus from \"janus-gateway\";\r\n\r\nconst JanusRtmpStreamer = () => {\r\n  const janusRef = useRef(null);\r\n  const [rtmpPlugin, setRtmpPlugin] = useState(null);\r\n  const [streaming, setStreaming] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const localVideoRef = useRef(null);\r\n  const localStreamRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    initializeJanus();\r\n\r\n    return () => {\r\n      cleanUp();\r\n    };\r\n  }, []);\r\n\r\n  const initializeJanus = () => {\r\n    Janus.init({\r\n      debug: \"all\",\r\n      callback: () => {\r\n        const janus = new Janus({\r\n          server: \"wss://test.worldsamma.org/ws\",\r\n          success: () => {\r\n            console.log(\"Janus Gateway initialized!\");\r\n            attachPlugin(janus);\r\n          },\r\n          error: (err) => {\r\n            console.error(\"Error initializing Janus Gateway:\", err);\r\n          },\r\n        });\r\n        janusRef.current = janus;\r\n      },\r\n    });\r\n  };\r\n\r\n  const attachPlugin = (janus) => {\r\n    janus.attach({\r\n      plugin: \"janus.plugin.streaming\",\r\n      success: (plugin) => {\r\n        console.log(\"Streaming plugin attached!\", plugin);\r\n        setRtmpPlugin(plugin);\r\n        setConnected(true);\r\n        attachStream(plugin);\r\n      },\r\n      error: (err) => {\r\n        console.error(\"Error attaching plugin:\", err);\r\n      },\r\n    });\r\n  };\r\n\r\n  const attachStream = async (plugin) => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      });\r\n      localVideoRef.current.srcObject = stream;\r\n      localStreamRef.current = stream;\r\n\r\n      plugin.createOffer({\r\n        media: { video: true, audio: true },\r\n        stream,\r\n        success: (jsep) => {\r\n          console.log(\"Generated JSEP:\", jsep);\r\n          plugin.send({\r\n            message: { request: \"configure\", audio: true, video: true },\r\n            jsep,\r\n          });\r\n        },\r\n        error: (error) => {\r\n          console.error(\"Error creating WebRTC offer:\", error);\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error accessing user media:\", error);\r\n    }\r\n  };\r\n\r\n  const startStreaming = () => {\r\n    if (!rtmpPlugin) {\r\n      console.error(\"RTMP plugin not attached.\");\r\n      return;\r\n    }\r\n    const rtmpUrl = \"rtmp://nginx:1935/stream\";\r\n\r\n    rtmpPlugin.send({\r\n      message: { request: \"publish\", rtmp_url: rtmpUrl },\r\n      success: () => {\r\n        console.log(\"Publishing to RTMP successfully!\");\r\n        setStreaming(true);\r\n      },\r\n      error: (err) => {\r\n        console.error(\"Error publishing to RTMP:\", err);\r\n      },\r\n    });\r\n  };\r\n\r\n  const stopStreaming = () => {\r\n    if (rtmpPlugin) {\r\n      rtmpPlugin.hangup();\r\n      setStreaming(false);\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.getTracks().forEach((track) => track.stop());\r\n      }\r\n    }\r\n  };\r\n\r\n  const cleanUp = () => {\r\n    if (janusRef.current) {\r\n      janusRef.current.destroy();\r\n      console.log(\"Janus destroyed successfully\");\r\n    }\r\n    if (localStreamRef.current) {\r\n      localStreamRef.current.getTracks().forEach((track) => track.stop());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      width=\"100%\"\r\n      fontFamily=\"Arial, sans-serif\"\r\n      color=\"gray.800\"\r\n    >\r\n      <Box\r\n        position=\"relative\"\r\n        width=\"80%\"\r\n        maxWidth=\"720px\"\r\n        mb={5}\r\n        bg=\"black\"\r\n        borderRadius=\"8px\"\r\n        overflow=\"hidden\"\r\n      >\r\n        <video\r\n          ref={localVideoRef}\r\n          autoPlay\r\n          muted\r\n          width=\"100%\"\r\n          className=\"video-feed\"\r\n        />\r\n\r\n        {!connected && (\r\n          <Box\r\n            position=\"absolute\"\r\n            top={0}\r\n            left={0}\r\n            right={0}\r\n            bottom={0}\r\n            bg=\"rgba(0, 0, 0, 0.7)\"\r\n            color=\"white\"\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            fontSize=\"1.5rem\"\r\n          >\r\n            <Spinner size=\"lg\" />\r\n            <Text ml={2}>Connecting...</Text>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n\r\n      <Box textAlign=\"center\" width=\"100%\" maxWidth=\"500px\">\r\n        <Heading as=\"h2\" size=\"lg\" mb={3}>\r\n          Live Stream Control\r\n        </Heading>\r\n\r\n        <Flex justifyContent=\"space-around\" mb={3}>\r\n          <StatusIndicator\r\n            status={connected ? \"Connected\" : \"Disconnected\"}\r\n            isConnected={connected}\r\n          />\r\n          <StatusIndicator\r\n            status={streaming ? \"Live\" : \"Idle\"}\r\n            isConnected={streaming}\r\n          />\r\n        </Flex>\r\n\r\n        <Flex justifyContent=\"center\" gap={3}>\r\n          <Button\r\n            leftIcon={<FaPlay />}\r\n            onClick={startStreaming}\r\n            isDisabled={streaming || !connected}\r\n            colorScheme=\"green\"\r\n            size=\"lg\"\r\n            fontSize={\"md\"}\r\n          >\r\n            Start Streaming\r\n          </Button>\r\n\r\n          <Button\r\n            leftIcon={<FaStop />}\r\n            onClick={stopStreaming}\r\n            isDisabled={!streaming}\r\n            colorScheme=\"red\"\r\n            size=\"lg\"\r\n            fontSize={\"md\"}\r\n          >\r\n            Stop Streaming\r\n          </Button>\r\n        </Flex>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default JanusRtmpStreamer;\r\n"],"names":["_ref","status","isConnected","_jsx","Box","p","borderRadius","bg","color","children","janusRef","useRef","_useState","useState","_useState2","_slicedToArray","rtmpPlugin","setRtmpPlugin","_useState3","_useState4","streaming","setStreaming","_useState5","_useState6","connected","setConnected","localVideoRef","localStreamRef","useEffect","initializeJanus","cleanUp","Janus","init","debug","callback","janus","server","success","console","log","attachPlugin","error","err","current","attach","plugin","attachStream","_asyncToGenerator","_regeneratorRuntime","mark","_callee","stream","wrap","_context","prev","next","navigator","mediaDevices","getUserMedia","video","audio","sent","srcObject","createOffer","media","jsep","send","message","request","t0","stop","_x","apply","arguments","destroy","getTracks","forEach","track","_jsxs","display","flexDirection","alignItems","width","fontFamily","position","maxWidth","mb","overflow","ref","autoPlay","muted","className","top","left","right","bottom","justifyContent","fontSize","Spinner","size","Text","ml","textAlign","Heading","as","Flex","StatusIndicator","gap","Button","leftIcon","FaPlay","onClick","rtmp_url","isDisabled","colorScheme","FaStop","hangup"],"sourceRoot":""}