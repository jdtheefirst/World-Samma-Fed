{"version":3,"file":"static/js/713.5384fe33.chunk.js","mappings":"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","sources":["miscellenious/Requests.js","miscellenious/upperNav.js","pages/Courses.js"],"sourcesContent":["import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  Button,\r\n  Text,\r\n  Box,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RiTeamLine } from \"react-icons/ri\";\r\n\r\nconst Requests = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [clubRequests, setClubRequests] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { user } = ChatState();\r\n  const navigate = useNavigate();\r\n\r\n  const fetchClubRequests = useCallback(async () => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/github/something/${user._id}`,\r\n        config\r\n      );\r\n      setClubRequests(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching club requests:\", error);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchClubRequests();\r\n    }\r\n  }, [user, fetchClubRequests]);\r\n  const declineRequest = async (clubId) => {\r\n    if (!user || !clubId) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/decline/request/${clubId}/${user._id}`,\r\n        config\r\n      );\r\n      setClubRequests(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(\"Error fetching club requests/decline:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        backgroundColor={\"white\"}\r\n        _hover={{ backgroundColor: \"transparent\" }}\r\n        onClick={onOpen}\r\n        border={\"none\"}\r\n      >\r\n        <RiTeamLine fontSize={\"20px\"} border={\"none\"}/>\r\n        {clubRequests && clubRequests.length > 0 && (\r\n          <Text\r\n            position=\"absolute\"\r\n            bottom=\"70%\"\r\n            right=\"70%\"\r\n            transform=\"translate(50%, 0)\"\r\n            bg=\"red.500\"\r\n            borderRadius=\"50%\"\r\n            width=\"2px\"\r\n            height=\"2px\"\r\n            p={1.5}\r\n          ></Text>\r\n        )}\r\n        <Text />\r\n      </Button>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalOverlay\r\n      bg=\"blackAlpha.300\"\r\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n    />\r\n        <ModalContent>\r\n          <ModalHeader textAlign={\"center\"}>Clubs Requests</ModalHeader>\r\n          <ModalCloseButton border={\"none\"} />\r\n          <ModalBody\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            flexDir={\"column\"}\r\n            maxH={\"300px\"}\r\n          >\r\n            {clubRequests && clubRequests.length > 0 ? (\r\n              clubRequests.map((club, index) => (\r\n                <Box\r\n                  display={\"flex\"}\r\n                  justifyContent={\"space-between\"}\r\n                  alignItems={\"center\"}\r\n                  width={\"100%\"}\r\n                  key={index}\r\n                >\r\n                  <Button\r\n                    key={club._id}\r\n                    justifyContent={\"space-between\"}\r\n                    onClick={() => navigate(`/showclub/${club._id}`)}\r\n                    border={\"none\"}\r\n                  >\r\n                    {index + 1}. Club Name: {club.name}\r\n                  </Button>\r\n                  <Button\r\n                    background={\"#f05e56\"}\r\n                    onClick={() => declineRequest(club._id)}\r\n                    border={\"none\"}\r\n                  >\r\n                    {loading ? <Spinner size={\"small\"} /> : `Decline`}\r\n                  </Button>\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <>\r\n                <Text>All club requests have been replied to.</Text>\r\n              </>\r\n            )}\r\n          </ModalBody>\r\n\r\n          <ModalFooter fontSize={\"small\"} textDecor={\"underline\"}>\r\n            These requests were made by club coaches.\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default Requests;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Badge,\r\n  Image,\r\n  useBreakpointValue,\r\n  IconButton,\r\n  CloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { TiThMenuOutline } from \"react-icons/ti\";\r\nimport { BellIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport Requests from \"./Requests\";\r\nimport React from \"react\";\r\nimport logo7 from \"../final.jpeg\";\r\n\r\nfunction UpperNav() {\r\n  const { user, notification, setNotification } = ChatState();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const navigate = useNavigate();\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    setNotification([]);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const displayValue = useBreakpointValue({ base: \"none\", md: \"flex\" });\r\n\r\n  const textVisibility = useBreakpointValue({\r\n    base: \"hidden\",\r\n    md: \"visible\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p={3}\r\n        paddingBottom={2}\r\n        boxShadow=\"2xl\"\r\n        zIndex={10}\r\n        top={0}\r\n        position={\"fixed\"}\r\n      >\r\n        <Image src={logo7} height={12}/>\r\n        <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n          <Button\r\n            backgroundColor={\"transparent\"}\r\n            border={\"none\"}\r\n            display={displayValue}\r\n            visibility={textVisibility}\r\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\r\n            onClick={() => {\r\n              navigate(\"/dashboard\");\r\n            }}\r\n          >\r\n            My Programs\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            display={{ base: \"none\", md: \"flex\" }}\r\n            border={\"none\"}\r\n            onClick={onOpen}\r\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\r\n          >\r\n            <Text\r\n              px={4}\r\n              userSelect={\"none\"}\r\n            >\r\n              Discover\r\n            </Text>\r\n          </Button>\r\n          <Requests />\r\n        </Box>\r\n\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1} position=\"relative\" border={\"none\"}>\r\n              <BellIcon fontSize=\"2xl\" p={0} m={0} />\r\n              {notification.length > 0 && (\r\n                <Badge\r\n                  variant=\"subtle\"\r\n                  position=\"absolute\"\r\n                  top=\"-3px\"\r\n                  right=\"-3px\"\r\n                  backgroundColor={\"red\"}\r\n                  zIndex={1}\r\n                  borderRadius={\"50%\"}\r\n                  color=\"white\"\r\n                >\r\n                  {notification.length}\r\n                </Badge>\r\n              )}\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                >\r\n                  {`New Message from ${\r\n                    notif.sender ? notif.sender.name : \"Coach\"\r\n                  } ADM: ${notif.sender ? notif.sender.admission : \" \"}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton\r\n              as={Button}\r\n              bg=\"white\"\r\n              border={\"none\"}\r\n              _hover={{ backgroundColor: \"transparent\" }}\r\n              onClick={onOpen}\r\n            >\r\n              {displayValue === \"flex\" ? (\r\n                <Avatar\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={user?.name}\r\n                  src={user?.pic}\r\n                />\r\n              ) : (\r\n                <IconButton\r\n                  backgroundColor={\"transparent\"}\r\n                  border={\"none\"}\r\n                  icon={\r\n                    <TiThMenuOutline />\r\n                  }\r\n                />\r\n              )}\r\n            </MenuButton>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n      <DrawerOverlay\r\n      bg=\"blackAlpha.300\"\r\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n    />\r\n        <DrawerContent>\r\n          <DrawerHeader\r\n            borderBottomWidth=\"1px\"\r\n            display={\"flex\"}\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            Dashboard\r\n            <CloseButton onClick={onClose} border={\"none\"} />\r\n          </DrawerHeader>\r\n          <DrawerBody\r\n            display={\"flex\"}\r\n            flexDir={\"column\"}\r\n            justifyContent={\"space-between\"}\r\n            width={\"100%\"}\r\n          >\r\n            <Box\r\n              padding={3}\r\n              display={\"flex\"}\r\n              justifyContent={\"space-around\"}\r\n              flexDir={\"column\"}\r\n            >\r\n              <Button\r\n                display={\"flex\"}\r\n                justifyContent={\"left\"}\r\n                alignItems={\"center\"}\r\n                border={\"none\"}\r\n                background={\"white\"}\r\n                m={1}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={() => navigate(\"/profile\")}\r\n              >\r\n                <Avatar\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={user?.name}\r\n                  src={user?.pic}\r\n                />\r\n                <Text p={2} m={1}>\r\n                  Profile\r\n                </Text>\r\n              </Button>\r\n              <Button\r\n                justifyContent={\"left\"}\r\n                border={\"none\"}\r\n                background={\"white\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={() => {\r\n                  navigate(\"/dashboard\");\r\n                  onClose();\r\n                }}\r\n              >\r\n                My Programs\r\n              </Button>\r\n              <Button\r\n                justifyContent={\"start\"}\r\n                background={\"white\"}\r\n                border={\"none\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={() => {\r\n                  navigate(\"/clubs\");\r\n                  onClose();\r\n                }}\r\n              >\r\n                Clubs\r\n              </Button>\r\n              <Button\r\n                justifyContent={\"left\"}\r\n                background={\"white\"}\r\n                border={\"none\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                isDisabled={!user?.provinces}\r\n                onClick={() => {\r\n                  navigate(\"/province\");\r\n                  onClose();\r\n                }}\r\n              >\r\n                Provincial level\r\n              </Button>\r\n              <Button\r\n                background={\"white\"}\r\n                justifyContent={\"left\"}\r\n                border={\"none\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={() => {\r\n                  navigate(\"/national\");\r\n                  onClose();\r\n                }}\r\n              >\r\n                National level\r\n              </Button>\r\n              <Button\r\n                background={\"white\"}\r\n                justifyContent={\"left\"}\r\n                border={\"none\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={()=> {\r\n                  navigate(\"/championships\")\r\n                }}\r\n              >\r\n                International Championship\r\n              </Button>\r\n            </Box>\r\n            <Button border={\"none\"} onClick={logoutHandler}>Log out</Button>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpperNav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Text, Button, useToast, Spinner } from \"@chakra-ui/react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport UpperNav from \"../miscellenious/upperNav\";\r\nimport axios from \"axios\";\r\n\r\nconst CourseDetails = ({ courses, user }) => {\r\n  const { id } = useParams();\r\n  const courseId = parseInt(id, 10);\r\n  const course = courses.find((course) => course.id === courseId);\r\n  const [currentLessonIndex, setCurrentLessonIndex] = useState(0);\r\n  const [translatedText, setTranslatedText] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n\r\n  const goToNextLesson = () => {\r\n    setTranslatedText(\"\");\r\n    if (currentLessonIndex < course.lessons.length - 1) {\r\n      setCurrentLessonIndex((prevIndex) => prevIndex + 1);\r\n    }\r\n    if (currentLessonIndex + 1 === course.lessons.length) {\r\n      navigate(`/courses/${id}/submit/${course.title}`);\r\n    }\r\n  };\r\n  const currentLesson = course.lessons[currentLessonIndex];\r\n\r\n  const goToPreviousLesson = () => {\r\n    setTranslatedText(\"\");\r\n\r\n    if (currentLessonIndex > 0) {\r\n      setCurrentLessonIndex((prevIndex) => prevIndex - 1);\r\n    }\r\n  };\r\n\r\n  const translateText = async (text) => {\r\n    if (!user || !text) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/translate?text=${text}&target=${user.language}`,\r\n        config\r\n      );\r\n\r\n      setTranslatedText(data);\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n  // useEffect(() => {\r\n  //   if (\r\n  //     user &&\r\n  //     user.belt &&\r\n  //     user.belt.trim() + \" Belt\" !== course.title.trim()\r\n  //   ) {\r\n  //     navigate(\"/dashboard\");\r\n  //   }\r\n  // }, [user, course, navigate]);\r\n\r\n  return (\r\n    <Box backgroundColor={\"white\"}\r\n     width={\"100%\"} display={\"flex\"} flexDir={\"column\"} alignItems={\"center\"} justifyContent={\"start\"} >\r\n      <UpperNav />\r\n      <Text fontSize=\"24px\" fontWeight=\"bold\" mb={4} mt={20}>\r\n        {course.title}\r\n      </Text>\r\n      <Box\r\n        display={\"flex\"}\r\n        flexDir={\"column\"}\r\n        justifyContent={\"center\"}\r\n        alignItems={\"center\"}\r\n        background={\"white\"}\r\n      >\r\n        <Box mb={4}>\r\n          <Text fontSize=\"large\" fontWeight=\"medium\">\r\n            {currentLesson.title}/{course.lessons.length}\r\n            <Text fontSize={\"small\"}>\r\n              {\" \"}\r\n              *Optimize Your Viewing: Switch to Fullscreen\r\n            </Text>\r\n          </Text>\r\n          <iframe\r\n            title={`Lesson ${currentLesson.id}`}\r\n            width=\"100%\"\r\n            height=\"315\"\r\n            src={currentLesson.video}\r\n            allowFullScreen\r\n            style={{ maxWidth: \"800px\", margin: \"0 auto\" }}\r\n          ></iframe>\r\n          <Text mt={2} textAlign={\"center\"} p={2} width={\"100%\"}>\r\n            <Button\r\n              background=\"transparent\"\r\n              _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n              color={\"purple\"}\r\n              onClick={() => translateText(currentLesson.notes)}\r\n              textDecoration={\"underline\"}\r\n            >\r\n              Translate{loading && <Spinner size={\"sm\"} />}\r\n            </Button>\r\n            {translatedText ? translatedText : currentLesson.notes}\r\n          </Text>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems={\"center\"}\r\n          justifyContent=\"space-evenly\"\r\n          width={\"100%\"}\r\n        >\r\n          <Button\r\n            onClick={goToPreviousLesson}\r\n            disabled={currentLessonIndex === 0}\r\n            borderRadius={20}\r\n          >\r\n            Previous Lesson\r\n          </Button>\r\n          <Button\r\n            onClick={goToNextLesson}\r\n            disabled={currentLessonIndex === course.lessons.length - 1}\r\n            borderRadius={20}\r\n          >\r\n            Next Lesson\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CourseDetails;\r\n"],"names":["_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_useState","useState","_useState2","_slicedToArray","clubRequests","setClubRequests","_useState3","_useState4","loading","setLoading","user","ChatState","navigate","useNavigate","fetchClubRequests","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$get","data","wrap","_context","prev","next","abrupt","headers","Authorization","concat","token","axios","get","_id","sent","t0","console","error","stop","useEffect","declineRequest","_ref2","_callee2","clubId","_yield$axios$get2","_context2","_x","apply","arguments","_jsxs","_Fragment","children","Button","backgroundColor","_hover","onClick","border","_jsx","RiTeamLine","fontSize","length","Text","position","bottom","right","transform","bg","borderRadius","width","height","p","Modal","ModalOverlay","backdropFilter","ModalContent","ModalHeader","textAlign","ModalCloseButton","ModalBody","display","justifyContent","alignItems","flexDir","maxH","map","club","index","Box","name","background","Spinner","size","ModalFooter","textDecor","_ChatState","notification","setNotification","displayValue","useBreakpointValue","base","md","textVisibility","w","paddingBottom","boxShadow","zIndex","top","Image","src","logo7","visibility","color","variant","px","userSelect","Requests","Menu","MenuButton","BellIcon","m","Badge","MenuList","pl","notif","MenuItem","filter","n","sender","admission","as","Avatar","cursor","pic","IconButton","icon","TiThMenuOutline","Drawer","placement","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","CloseButton","DrawerBody","padding","isDisabled","provinces","localStorage","removeItem","_ref","courses","id","useParams","courseId","parseInt","course","find","currentLessonIndex","setCurrentLessonIndex","translatedText","setTranslatedText","_useState5","_useState6","toast","useToast","currentLesson","lessons","translateText","text","language","title","description","response","message","status","duration","isClosable","UpperNav","fontWeight","mb","mt","video","allowFullScreen","style","maxWidth","margin","notes","textDecoration","prevIndex","disabled"],"sourceRoot":""}