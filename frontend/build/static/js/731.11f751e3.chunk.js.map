{"version":3,"file":"static/js/731.11f751e3.chunk.js","mappings":"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","sources":["components/Status.jsx","pages/LivePage.jsx"],"sourcesContent":["import { Box } from \"@chakra-ui/layout\";\r\n\r\nconst StatusIndicator = ({ status, isConnected }) => (\r\n  <Box\r\n    p={2}\r\n    borderRadius=\"4px\"\r\n    bg={isConnected ? \"green.500\" : \"red.500\"}\r\n    color=\"white\"\r\n  >\r\n    {status}\r\n  </Box>\r\n);\r\n\r\nexport default StatusIndicator;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { FaPlay, FaStop } from \"react-icons/fa\";\r\nimport Janus from \"janus-gateway-js\";\r\nimport \"../App.css\";\r\nimport \"webrtc-adapter\";\r\nimport StatusIndicator from \"../components/Status\";\r\nimport { Box, Flex, Heading, Text, Spinner } from \"@chakra-ui/react\";\r\nimport { Button } from \"@chakra-ui/button\";\r\n\r\nconst JanusRtmpStreamer = () => {\r\n  const janusRef = useRef(null);\r\n  const [rtmpPlugin, setRtmpPlugin] = useState(null);\r\n  const [streaming, setStreaming] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const localVideoRef = useRef(null);\r\n  const localStreamRef = useRef(null);\r\n  const wsRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    initializeJanus();\r\n\r\n    return () => {\r\n      cleanUp();\r\n    };\r\n  }, []);\r\n\r\n  const initializeJanus = async () => {\r\n    try {\r\n      const janusClient = new Janus.Client(\"/ws/\", {\r\n        keepalive: true,\r\n      });\r\n      janusRef.current = janusClient;\r\n\r\n      const connection = await janusClient.createConnection(\"connection-id\");\r\n      const session = await connection.createSession();\r\n      const plugin = await session.attachPlugin(\"janus.plugin.streaming\");\r\n\r\n      if (!plugin) {\r\n        throw new Error(\"Failed to attach streaming plugin\");\r\n      }\r\n\r\n      console.log(\"Streaming plugin attached!\");\r\n      setRtmpPlugin(plugin);\r\n      setConnected(true);\r\n\r\n      // Proceed with further setup if necessary, e.g., offering media\r\n      await attachStream(plugin);\r\n\r\n      janusRef.current = janusInstance;\r\n    } catch (error) {\r\n      console.error(\"Error initializing Janus:\", error);\r\n    }\r\n  };\r\n\r\n  const attachStream = async (plugin) => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      });\r\n\r\n      localVideoRef.current.srcObject = stream;\r\n      localStreamRef.current = stream;\r\n\r\n      plugin.send({\r\n        message: { request: \"configure\", audio: true, video: true },\r\n      });\r\n\r\n      plugin.createOffer({\r\n        media: { video: true, audio: true },\r\n        stream,\r\n        success: (jsep) => {\r\n          console.log(\"Generated JSEP:\", jsep);\r\n          plugin.send({ message: { request: \"start\" }, jsep });\r\n        },\r\n        error: (error) => {\r\n          console.error(\"Error creating WebRTC offer:\", error);\r\n          alert(\"An error occurred during streaming setup. Please try again.\");\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error accessing user media:\", error);\r\n    }\r\n  };\r\n\r\n  const startStreaming = () => {\r\n    if (!rtmpPlugin) {\r\n      console.error(\"RTMP plugin not attached.\");\r\n      return;\r\n    }\r\n\r\n    const rtmpUrl = \"rtmp://nginx:1935/stream\";\r\n\r\n    rtmpPlugin.send({\r\n      message: { request: \"publish\", rtmp_url: rtmpUrl },\r\n      success: () => {\r\n        console.log(\"Publishing to RTMP successfully!\");\r\n        setStreaming(true);\r\n      },\r\n      error: (error) => console.error(\"Error publishing to RTMP:\", error),\r\n    });\r\n  };\r\n\r\n  const stopStreaming = () => {\r\n    if (rtmpPlugin) {\r\n      rtmpPlugin.hangup();\r\n      setStreaming(false);\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.getTracks().forEach((track) => track.stop());\r\n      }\r\n    }\r\n  };\r\n\r\n  const cleanUp = () => {\r\n    // Make sure janusRef.current is the Janus client instance\r\n    if (janusRef.current && typeof janusRef.current.destroy === \"function\") {\r\n      janusRef.current.destroy(); // Clean up Janus instance\r\n      console.log(\"Janus destroyed successfully\");\r\n    } else {\r\n      console.error(\"Janus instance not found or destroy method missing\");\r\n    }\r\n    // Close WebSocket connection if present\r\n    if (wsRef.current) {\r\n      wsRef.current.close();\r\n      console.log(\"WebSocket connection closed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      width=\"100%\"\r\n      fontFamily=\"Arial, sans-serif\"\r\n      color=\"gray.800\"\r\n    >\r\n      <Box\r\n        position=\"relative\"\r\n        width=\"80%\"\r\n        maxWidth=\"720px\"\r\n        mb={5}\r\n        bg=\"black\"\r\n        borderRadius=\"8px\"\r\n        overflow=\"hidden\"\r\n      >\r\n        <video\r\n          ref={localVideoRef}\r\n          autoPlay\r\n          muted\r\n          width=\"100%\"\r\n          className=\"video-feed\"\r\n        />\r\n\r\n        {!connected && (\r\n          <Box\r\n            position=\"absolute\"\r\n            top={0}\r\n            left={0}\r\n            right={0}\r\n            bottom={0}\r\n            bg=\"rgba(0, 0, 0, 0.7)\"\r\n            color=\"white\"\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            fontSize=\"1.5rem\"\r\n          >\r\n            <Spinner size=\"lg\" />\r\n            <Text ml={2}>Connecting...</Text>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n\r\n      <Box textAlign=\"center\" width=\"100%\" maxWidth=\"500px\">\r\n        <Heading as=\"h2\" size=\"lg\" mb={3}>\r\n          Live Stream Control\r\n        </Heading>\r\n\r\n        <Flex justifyContent=\"space-around\" mb={3}>\r\n          <StatusIndicator\r\n            status={connected ? \"Connected\" : \"Disconnected\"}\r\n            isConnected={connected}\r\n          />\r\n          <StatusIndicator\r\n            status={streaming ? \"Live\" : \"Idle\"}\r\n            isConnected={streaming}\r\n          />\r\n        </Flex>\r\n\r\n        <Flex justifyContent=\"center\" gap={3}>\r\n          <Button\r\n            leftIcon={<FaPlay />}\r\n            onClick={startStreaming}\r\n            isDisabled={streaming || !connected}\r\n            colorScheme=\"green\"\r\n            size=\"lg\"\r\n            fontSize={\"md\"}\r\n          >\r\n            Start Streaming\r\n          </Button>\r\n\r\n          <Button\r\n            leftIcon={<FaStop />}\r\n            onClick={stopStreaming}\r\n            isDisabled={!streaming}\r\n            colorScheme=\"red\"\r\n            size=\"lg\"\r\n            fontSize={\"md\"}\r\n          >\r\n            Stop Streaming\r\n          </Button>\r\n        </Flex>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default JanusRtmpStreamer;\r\n"],"names":["_ref","status","isConnected","_jsx","Box","p","borderRadius","bg","color","children","janusRef","useRef","_useState","useState","_useState2","_slicedToArray","rtmpPlugin","setRtmpPlugin","_useState3","_useState4","streaming","setStreaming","_useState5","_useState6","connected","setConnected","localVideoRef","localStreamRef","wsRef","useEffect","initializeJanus","cleanUp","_asyncToGenerator","_regeneratorRuntime","mark","_callee","janusClient","connection","session","plugin","wrap","_context","prev","next","Janus","keepalive","current","createConnection","sent","createSession","attachPlugin","Error","console","log","attachStream","janusInstance","t0","error","stop","apply","arguments","_ref2","_callee2","stream","_context2","navigator","mediaDevices","getUserMedia","video","audio","srcObject","send","message","request","createOffer","media","success","jsep","alert","_x","destroy","close","_jsxs","display","flexDirection","alignItems","width","fontFamily","position","maxWidth","mb","overflow","ref","autoPlay","muted","className","top","left","right","bottom","justifyContent","fontSize","Spinner","size","Text","ml","textAlign","Heading","as","Flex","StatusIndicator","gap","Button","leftIcon","FaPlay","onClick","rtmp_url","isDisabled","colorScheme","FaStop","hangup","getTracks","forEach","track"],"sourceRoot":""}