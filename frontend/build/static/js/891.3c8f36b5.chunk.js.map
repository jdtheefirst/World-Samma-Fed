{"version":3,"file":"static/js/891.3c8f36b5.chunk.js","mappings":"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","sources":["pages/Submit.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Input,\r\n  VStack,\r\n  Image,\r\n  useToast,\r\n  Box,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport UpperNav from \"../miscellenious/upperNav\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst SubmissionPage = ({ user }) => {\r\n  const [video, setVideo] = useState(null);\r\n  const [passportPhoto, setPassportPhoto] = useState(null);\r\n  const [videoLoading, setVideoLoading] = useState(false);\r\n  const [photoLoading, setPhotoLoading] = useState(false);\r\n  const [saveVideo, setSaveVideo] = useState(\"\");\r\n  const [savePhoto, setSavePhoto] = useState(\"\");\r\n  const toast = useToast();\r\n  const { title } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const handleVideoChange = (event) => {\r\n    setVideo(event.target.files[0]);\r\n  };\r\n\r\n  const handlePhotoChange = (event) => {\r\n    setPassportPhoto(event.target.files[0]);\r\n  };\r\n  const submitHandler = useCallback(async () => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/submit/${user._id}`,\r\n        {\r\n          savePhoto,\r\n          saveVideo,\r\n        },\r\n        config\r\n      );\r\n      navigate(\"/dashboard\");\r\n      toast({\r\n        title: \"Submission successful!\",\r\n        description: \"Wait for your results under 24hrs\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({\r\n        title: \"Error occurred trying to send your work!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  }, [toast, navigate, user, savePhoto, savePhoto]);\r\n\r\n  useEffect(() => {\r\n    if (savePhoto && saveVideo) {\r\n      submitHandler();\r\n    }\r\n  }, [savePhoto, saveVideo]);\r\n\r\n  const submitDetails = () => {\r\n    if (!video) {\r\n      toast({\r\n        title: \"Your recorded video please.\",\r\n        description: \"No file selected.\",\r\n        status: \"info\",\r\n        duration: 5000,\r\n      });\r\n      return;\r\n    }\r\n    if (!passportPhoto) {\r\n      toast({\r\n        title: \"Your passport photo please.\",\r\n        description: \"No file selected.\",\r\n        status: \"info\",\r\n        duration: 5000,\r\n      });\r\n      return;\r\n    }\r\n    if (video) {\r\n      setVideoLoading(true);\r\n\r\n      let data = new FormData();\r\n      data.append(\"file\", video);\r\n      data.append(\"upload_preset\", \"worldsamma\");\r\n\r\n      fetch(\"https://api.cloudinary.com/v1_1/dsdlgmgwi/video/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setSaveVideo(data.url);\r\n          setVideoLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setVideoLoading(false);\r\n          toast({\r\n            title: \"Error Occurred uploading your video.\",\r\n            description: \"Please try again later.\",\r\n            duration: 5000,\r\n            status: \"error\",\r\n          });\r\n        });\r\n    }\r\n    if (passportPhoto) {\r\n      setPhotoLoading(true);\r\n\r\n      let data = new FormData();\r\n      data.append(\"file\", passportPhoto);\r\n      data.append(\"upload_preset\", \"worldsamma\");\r\n\r\n      fetch(\"https://api.cloudinary.com/v1_1/dsdlgmgwi/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setSavePhoto(data.url);\r\n          setPhotoLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setPhotoLoading(false);\r\n          toast({\r\n            title: \"Error Occurred uploading your passport photo.\",\r\n            description: \"Please try again later.\",\r\n            duration: 5000,\r\n            status: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack\r\n      align=\"center\"\r\n      justify={\"center\"}\r\n      width={\"100%\"}\r\n      background={\"white\"}\r\n      p={2}\r\n    >\r\n      <UpperNav />\r\n      <Text\r\n        fontSize={\"sm\"}\r\n        fontWeight={500}\r\n        bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n        p={2}\r\n        px={3}\r\n        color={\"green.500\"}\r\n        rounded={\"full\"}\r\n        margin={1}\r\n        width={{ base: \"90%\", md: \"60%\" }}\r\n      >\r\n        {title}\r\n      </Text>\r\n      <Text textAlign={\"center\"} fontSize={\"large\"} fontWeight={\"bold\"}>\r\n        Submit your work for grading(*Passport picture as proof of identity)\r\n      </Text>\r\n      <Box width={{ base: \"100%\", md: \"50%\" }}>\r\n        {\" \"}\r\n        <FormControl isInvalid={!video}>\r\n          <FormLabel>Video</FormLabel>\r\n          <Input type=\"file\" accept=\"video/*\" onChange={handleVideoChange} />\r\n          {videoLoading && <p>Uploading video...</p>}\r\n          <FormErrorMessage>Please select a video file.</FormErrorMessage>\r\n        </FormControl>\r\n        <FormControl isInvalid={!passportPhoto}>\r\n          <FormLabel>Passport Photo</FormLabel>\r\n          <Input type=\"file\" accept=\"image/*\" onChange={handlePhotoChange} />\r\n          {photoLoading && <p>Uploading passport photo...</p>}\r\n          <FormErrorMessage>Please select a passport photo.</FormErrorMessage>\r\n        </FormControl>\r\n        <Button colorScheme=\"teal\" onClick={submitDetails}>\r\n          Submit\r\n        </Button>\r\n      </Box>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default SubmissionPage;\r\n"],"names":["_ref","user","_useState","useState","_useState2","_slicedToArray","video","setVideo","_useState3","_useState4","passportPhoto","setPassportPhoto","_useState5","_useState6","videoLoading","setVideoLoading","_useState7","_useState8","photoLoading","setPhotoLoading","_useState9","_useState10","saveVideo","setSaveVideo","_useState11","_useState12","savePhoto","setSavePhoto","toast","useToast","title","useParams","navigate","useNavigate","submitHandler","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","wrap","_context","prev","next","abrupt","headers","Authorization","concat","token","axios","post","_id","sent","data","description","status","duration","isClosable","position","t0","console","log","stop","useEffect","_jsxs","VStack","align","justify","width","background","p","children","_jsx","UpperNav","Text","fontSize","fontWeight","bg","useColorModeValue","px","color","rounded","margin","base","md","textAlign","Box","FormControl","isInvalid","FormLabel","Input","type","accept","onChange","event","target","files","FormErrorMessage","Button","colorScheme","onClick","FormData","append","fetch","method","body","then","res","json","url","catch","err"],"sourceRoot":""}