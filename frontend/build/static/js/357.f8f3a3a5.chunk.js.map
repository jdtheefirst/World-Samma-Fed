{"version":3,"file":"static/js/357.f8f3a3a5.chunk.js","mappings":"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","sources":["components/config/axios.js","pages/AdminWorkSlot.js","../node_modules/@chakra-ui/textarea/src/textarea.tsx","../node_modules/utilities/object-utils/src/omit.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create();\r\naxiosInstance.interceptors.response.use(\r\n  async (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Heading,\r\n  Image,\r\n  Input,\r\n  Spinner,\r\n  Text,\r\n  Textarea,\r\n  VStack,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport UpperNav from \"../miscellenious/upperNav\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axiosInstance from \"../components/config/axios\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\n\r\nconst AdminWorkSlot = ({ user }) => {\r\n  const [submissions, setSubmissions] = useState([]);\r\n  const [reject, setReject] = useState(false);\r\n  const [approaved, setApproaved] = useState(false);\r\n  const [certificate, setCertificate] = useState(undefined);\r\n  const [sendCertificate, setSendCertificate] = useState(undefined);\r\n  const [certificateLoading, setCertificateLoading] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [receiver, setReceiver] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const toast = useToast();\r\n  const navigate = useNavigate();\r\n  const { setMessages } = ChatState();\r\n\r\n  const handleReject = (submissionId, passport, video) => {\r\n    console.log(`Rejected submission with ID: ${submissionId}`);\r\n    setLoading(true);\r\n    if (!submissionId || !user) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const publicPassportId = passport.split(\"/\").pop().split(\".\")[0];\r\n      const publicVideoId = video.split(\"/\").pop().split(\".\")[0];\r\n\r\n      const data = {\r\n        publicIds: [publicPassportId, publicVideoId],\r\n      };\r\n\r\n      axiosInstance\r\n        .post(`/api/submit/delete/${submissionId}`, data, config)\r\n        .then(async (response) => {\r\n          setSubmissions(response.data);\r\n          setLoading(true);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          if (error.response && error.response.status === 401) {\r\n            toast({\r\n              title: \"Your session has expired\",\r\n              description: \"Logging out in less than 8 seconds\",\r\n              duration: 8000,\r\n              status: \"loading\",\r\n              position: \"bottom\",\r\n            });\r\n\r\n            setTimeout(() => {\r\n              localStorage.removeItem(\"userInfo\");\r\n              navigate(\"/\");\r\n            }, 8000);\r\n          }\r\n        });\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(\"Error fetching Club:\", error);\r\n    }\r\n  };\r\n\r\n  const submitHandler = useCallback(async () => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    if (sendCertificate && receiver) {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `/api/user/certificate/${receiver}`,\r\n          { sendCertificate },\r\n          config\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      return;\r\n    }\r\n    try {\r\n      const { data } = await axios.get(`/api/submit`, config);\r\n      console.log(data);\r\n      setSubmissions(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  }, [toast, user, receiver, sendCertificate]);\r\n\r\n  useEffect(() => {\r\n    submitHandler();\r\n  }, [submitHandler]);\r\n\r\n  const handleCertificate = () => {\r\n    if (!certificate) {\r\n      toast({\r\n        title: \"Select a certificate please.\",\r\n        status: \"info\",\r\n      });\r\n    }\r\n    setCertificateLoading(true);\r\n\r\n    let data = new FormData();\r\n    data.append(\"file\", certificate);\r\n    data.append(\"upload_preset\", \"worldsamma\");\r\n\r\n    fetch(\"https://api.cloudinary.com/v1_1/dsdlgmgwi/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setSendCertificate(data.url);\r\n        setCertificateLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setCertificateLoading(false);\r\n        toast({\r\n          title: \"Error Occurred uploading your passport photo.\",\r\n          description: \"Please try again later.\",\r\n          duration: 5000,\r\n          status: \"error\",\r\n        });\r\n      });\r\n  };\r\n  const sendMessage = async () => {\r\n    if (!message || !user || !receiver) {\r\n      return;\r\n    }\r\n    try {\r\n      const userId = user._id;\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/message\",\r\n        { sender: receiver, content: message, userId },\r\n        config\r\n      );\r\n      setMessage(\"\");\r\n      setMessages((prevMessages) => [...prevMessages, data]);\r\n\r\n      socket.emit(\"new message\", data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({\r\n        title: \"Failed to send the Message\",\r\n        description: \"Please try again after some time\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display={\"flex\"}\r\n      width={\"100%\"}\r\n      justifyContent={\"start\"}\r\n      alignItems={\"center\"}\r\n      flexDir={\"column\"}\r\n      overflowY={\"auto\"}\r\n      background={\"white\"}\r\n      p={\"6\"}\r\n    >\r\n      {\" \"}\r\n      <UpperNav />\r\n      <Heading mb={\"6\"}>World Samma Federation</Heading>\r\n      <Heading size={\"sm\"} mb={\"6\"}>Admin Work Slot</Heading>\r\n      <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"} flexDir={\"column\"} width={\"100%\"}>\r\n        {\" \"}\r\n        <Text\r\n          textAlign={\"center\"}\r\n          fontSize={\"sm\"}\r\n          fontWeight={500}\r\n          bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n          p={2}\r\n          width={{base: \"100%\", md: \"60%\"}}\r\n          color={\"green.500\"}\r\n          rounded={\"full\"}\r\n        >\r\n          {submissions.length} submissions.\r\n        </Text>\r\n      </Box>\r\n      <Box overflow={\"auto\"}>\r\n        {submissions.length === 0 && <Text>Work will be posted here.</Text>}\r\n        {submissions.length > 0 &&\r\n          submissions.map((submission) => (\r\n            <VStack key={submission._id} m={3} spacing={4}>\r\n              <Box\r\n                display={\"flex\"}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n                ml={2}\r\n                width={\"100%\"}\r\n              >\r\n                {submission.coachAssisted && (\r\n                  <Text\r\n                    fontSize={\"sm\"}\r\n                    fontWeight={500}\r\n                    bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n                    px={6}\r\n                    p={\"3\"}\r\n                    m={1}\r\n                    color={\"green.500\"}\r\n                    rounded={\"full\"}\r\n                  >\r\n                    Coach's assisted student rank upgrading\r\n                  </Text>\r\n                )}\r\n                <Image\r\n                  src={submission.passport}\r\n                  alt=\"Passport\"\r\n                  width=\"100\"\r\n                  height=\"100\"\r\n                />\r\n                <Box justifyContent={\"start\"} ml={2} textAlign={\"start\"}>\r\n                  <Heading size=\"md\">\r\n                    Name: {submission.student.name}{\" \"}\r\n                    {submission.student.otherName}\r\n                  </Heading>\r\n                  <Text>Admission: {submission.student.admission}</Text>\r\n                  <Text>Current Rank: {submission.student.belt}</Text>\r\n                </Box>\r\n              </Box>{\" \"}\r\n              <Box>\r\n                <video controls width=\"300\" height=\"200\">\r\n                  <source src={submission.video} type=\"video/mp4\" />\r\n                </video>\r\n              </Box>\r\n              <Box\r\n                display={\"flex\"}\r\n                width={{ base: \"90%\", md: \"60%\" }}\r\n                justifyContent={\"space-between\"}\r\n              >\r\n                {\" \"}\r\n                <Button\r\n                  isDisabled={reject}\r\n                  onClick={() => {\r\n                    setApproaved(true);\r\n                  }}\r\n                  colorScheme=\"green\"\r\n                >\r\n                  Approve\r\n                </Button>\r\n                <Button\r\n                  isDisabled={approaved || submission.coachAssisted}\r\n                  onClick={() => {\r\n                    setReject(true);\r\n                  }}\r\n                  colorScheme=\"red\"\r\n                >\r\n                  {loading && <Spinner size={\"sm\"} />}\r\n                  Reject\r\n                </Button>\r\n              </Box>\r\n              {reject && (\r\n                <>\r\n                  <Textarea\r\n                    placeholder=\"Please leave a message for student...\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    onClick={() => {\r\n                      sendMessage();\r\n                      handleReject(\r\n                        submission._id,\r\n                        submission.passport,\r\n                        submission.video\r\n                      );\r\n                      setReceiver(submission.student._id);\r\n                    }}\r\n                  >\r\n                    Send Message\r\n                  </Button>\r\n                </>\r\n              )}\r\n              {approaved && (\r\n                <>\r\n                  {\" \"}\r\n                  <FormControl isInvalid={!certificate}>\r\n                    <FormLabel>Certificate</FormLabel>\r\n                    <Input\r\n                      type=\"file\"\r\n                      accept=\"application/pdf\"\r\n                      onChange={(e) => setCertificate(e.target.files[0])}\r\n                    />\r\n                    {certificateLoading && <p>Uploading passport photo...</p>}\r\n                    <FormErrorMessage>\r\n                      Please select a certificate.\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                  <Button\r\n                    onClick={() => {\r\n                      handleCertificate();\r\n                      handleReject(\r\n                        submission._id,\r\n                        submission.passport,\r\n                        submission.video\r\n                      );\r\n                      setReceiver(submission.student._id);\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </VStack>\r\n          ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AdminWorkSlot;\r\n","import { FormControlOptions, useFormControl } from \"@chakra-ui/form-control\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { omit } from \"@chakra-ui/object-utils\"\n\ninterface TextareaOptions {\n  /**\n   * The border color when the textarea is focused. Use color keys in `theme.colors`\n   * @example\n   * focusBorderColor = \"blue.500\"\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the textarea is invalid. Use color keys in `theme.colors`\n   * @example\n   * errorBorderColor = \"red.500\"\n   */\n  errorBorderColor?: string\n}\n\ntype Omitted = \"disabled\" | \"required\" | \"readOnly\"\n\nconst omitted = [\"h\", \"minH\", \"height\", \"minHeight\"]\n\nexport interface TextareaProps\n  extends Omit<HTMLChakraProps<\"textarea\">, Omitted>,\n    TextareaOptions,\n    FormControlOptions,\n    ThemingProps<\"Textarea\"> {}\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/textarea\n */\nexport const Textarea = forwardRef<TextareaProps, \"textarea\">((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props)\n  const { className, rows, ...rest } = omitThemingProps(props)\n\n  const textareaProps = useFormControl<HTMLTextAreaElement>(rest)\n\n  //@ts-ignore\n  const textareaStyles = rows ? omit(styles, omitted) : styles\n\n  return (\n    <chakra.textarea\n      ref={ref}\n      rows={rows}\n      {...textareaProps}\n      className={cx(\"chakra-textarea\", className)}\n      __css={textareaStyles}\n    />\n  )\n})\n\nTextarea.displayName = \"Textarea\"\n","export function omit<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToOmit: K[] = [],\n) {\n  const clone: Record<string, unknown> = Object.assign({}, object)\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key as string]\n    }\n  }\n  return clone as Omit<T, K>\n}\n"],"names":["axiosInstance","axios","create","interceptors","response","use","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","_x","apply","arguments","error","Promise","reject","user","_useState","useState","_useState2","_slicedToArray","submissions","setSubmissions","_useState3","_useState4","setReject","_useState5","_useState6","approaved","setApproaved","_useState7","undefined","_useState8","certificate","setCertificate","_useState9","_useState10","sendCertificate","setSendCertificate","_useState11","_useState12","certificateLoading","setCertificateLoading","_useState13","_useState14","loading","setLoading","_useState15","_useState16","receiver","setReceiver","_useState17","_useState18","message","setMessage","toast","useToast","navigate","useNavigate","setMessages","ChatState","handleReject","submissionId","passport","video","console","log","concat","config","headers","Authorization","token","data","publicIds","split","pop","post","then","_ref2","catch","status","title","description","duration","position","setTimeout","localStorage","removeItem","submitHandler","useCallback","_callee2","_yield$axios$get","_yield$axios$get2","_data","_context2","get","sent","t0","t1","isClosable","useEffect","sendMessage","_ref4","_callee3","userId","_yield$axios$post","_context3","_id","sender","content","prevMessages","_toConsumableArray","socket","emit","_jsxs","Box","display","width","justifyContent","alignItems","flexDir","overflowY","background","p","children","_jsx","UpperNav","Heading","mb","size","Text","textAlign","fontSize","fontWeight","bg","useColorModeValue","base","md","color","rounded","length","overflow","map","submission","VStack","m","spacing","ml","coachAssisted","px","Image","src","alt","height","student","name","otherName","admission","belt","controls","type","Button","isDisabled","onClick","colorScheme","Spinner","_Fragment","Textarea","placeholder","value","onChange","e","target","FormControl","isInvalid","FormLabel","Input","accept","files","FormErrorMessage","FormData","append","fetch","method","body","res","json","url","err","handleCertificate","omitted","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","className","rows","rest","_objectWithoutProperties","_excluded","textareaProps","useFormControl","textareaStyles","object","_step","keysToOmit","clone","Object","assign","_iterator","_createForOfIteratorHelper","s","n","done","key","f","omit","jsx","chakra","textarea","_objectSpread","cx","__css","displayName"],"sourceRoot":""}