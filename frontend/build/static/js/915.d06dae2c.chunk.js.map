{"version":3,"file":"static/js/915.d06dae2c.chunk.js","mappings":"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","sources":["components/FooterAchieves.js","components/config/chatlogics.js","Authentication/club.js","pages/Clubs.js","../node_modules/@chakra-ui/react/dist/esm/grid/grid-item.mjs","../node_modules/@chakra-ui/react/dist/esm/grid/grid.mjs","../node_modules/@chakra-ui/react/dist/esm/link/link.mjs"],"sourcesContent":["import React from 'react';\r\nimport { Grid, GridItem, Box, Text, Link } from '@chakra-ui/react';\r\n\r\nconst FooterAchieves = () => {\r\n  const data = [\r\n    {\r\n      title: \"National Coach Role:\",\r\n      items: [\r\n        {\r\n          subtitle: \"Qualification Requirements:\",\r\n          description: \"To become a national coach, one must first be a WSF registered province coach or lead a WSF registered club in a country without provinces. They must be approved by other province coaches to become their national leader. Responsibilities include managing national funds and organizing international tournaments, national seminars and black belt graduation ceremonies in conjuction with the WSF national committee.\",\r\n        },\r\n        {\r\n          subtitle: \"Interim Appointment:\",\r\n          description: \"The interim role lasts for a maximum of one year(then elections), during which the coach is responsible for managing national-level activities, funds and ensuring smooth operations.\",\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Province Coach Role:\",\r\n      items: [\r\n        {\r\n          subtitle: \"Qualification Criteria:\",\r\n          description: \"A province coach must be approved by 20 other WSF registered coaches in his/her province, hold a black belt and lead a WSF registered club. Responsibilities include organizing local tournaments, seminars and under-belts graduation ceremonies in conjuction with the WSF province committee.\",\r\n        },\r\n        {\r\n          subtitle: \"Interim Appointment:\",\r\n          description: \"The interim role also lasts for a maximum of one year(then elections), during which the coach is responsible for managing province-level activities, funds and ensuring smooth operations.\",\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Club Creation and Student Training Role:\",\r\n      items: [\r\n        {\r\n          subtitle: \"Club Establishment:\",\r\n          description: \"Students can create clubs after Orange belt certification. A club can only be WSF registered (badged) once it has 20 registered students.\",\r\n        },\r\n        {\r\n          subtitle: \"Student Registration and Training:\",\r\n          description: \"Coaches can register students and earn income per student. They can train students up to the belt levels they have achieved.\",\r\n        }\r\n      ]\r\n    }\r\n  ];  \r\n  return (\r\n    <Grid \r\n      templateColumns={{ base: '1fr', md: 'repeat(6, 1fr)' }} \r\n      gap={2} \r\n      m={2} \r\n      mt={0}\r\n      userSelect=\"none\"\r\n    >\r\n      {data.map((section, index) => (\r\n        <GridItem \r\n          key={index} \r\n          colSpan={{ base: 6, md: 2 }} \r\n          h='auto' \r\n          bg='tomato' \r\n          p={4} \r\n          borderRadius={4}\r\n        >\r\n          <Box fontSize=\"small\">\r\n            <Text fontSize=\"xl\" fontWeight=\"bold\" mb={2}>{section.title}</Text>\r\n            {section.items.map((item, idx) => (\r\n              <Text mb={3} key={idx}>\r\n                <strong style={{ padding: 2 }}>{item.subtitle}</strong>\r\n                {item.description} \r\n                {item.link && (\r\n                  <Link p={1} color=\"blue.500\" href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    here\r\n                  </Link>\r\n                )}\r\n              </Text>\r\n            ))}\r\n          </Box>\r\n        </GridItem>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FooterAchieves;","import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { z } from \"zod\";\r\n\r\nexport const cn = (...inputs) => {\r\n  return twMerge(clsx(inputs));\r\n};\r\n\r\nexport const UserFormValidation = z.object({\r\n  name: z\r\n    .string()\r\n    .min(2, \"Name must be at least 2 characters\")\r\n    .max(50, \"Name must be at most 50 characters\"),\r\n  otherName: z\r\n    .string()\r\n    .min(2, \"Other name must be at least 2 characters\")\r\n    .max(50, \"Other name must be at most 50 characters\"),\r\n  email: z.string().email(\"Invalid email address\"),\r\n  gender: z.enum([\"male\", \"female\", \"other\"]),\r\n  password: z\r\n    .string()\r\n    .min(4, \"Password must be at least 8 characters long\")\r\n    .max(100, \"Password must be at most 100 characters\"),\r\n  confirmPassword: z\r\n    .string()\r\n    .min(4, \"Confirm password must be at least 8 characters long\")\r\n    .max(100, \"Confirm password must be at most 100 characters\")\r\n    .refine((val, ctx) => val === ctx.parent.password, {\r\n      message: \"Passwords do not match\",\r\n    }),\r\n  passport: z.string().regex(/^\\d{8,15}$/, \"Invalid passport/ID number\"),\r\n  selectedCountry: z.string().min(2, \"Country is required\"),\r\n  provinces: z.string().optional(),\r\n  language: z.string().min(2, \"Language is required\"),\r\n  pic: z.string().url(\"Profile picture is required\"),\r\n});\r\n\r\nexport const isSameSenderMargin = (messages, m, i, userId) => {\r\n  const isCurrentUserSender = m.sender?.$oid === userId;\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender?.$oid === m.sender?.$oid &&\r\n    !isCurrentUserSender\r\n  ) {\r\n    return 33;\r\n  } else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender?.$oid !== m.sender?.$oid &&\r\n      !isCurrentUserSender) ||\r\n    (i === messages.length - 1 && !isCurrentUserSender)\r\n  ) {\r\n    return 0;\r\n  } else {\r\n    return \"auto\";\r\n  }\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1]?.sender?._id !== m.sender?._id ||\r\n      messages[i + 1]?.sender?._id === undefined) &&\r\n    messages[i]?.sender?._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  const lastMessageSenderId = messages[messages.length - 1].sender?.$oid;\r\n  return (\r\n    i === messages.length - 1 &&\r\n    lastMessageSenderId !== userId &&\r\n    lastMessageSenderId\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender?.$oid === m.sender?.$oid;\r\n};\r\n\r\nexport const getSenderName = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n};\r\nexport const getSenderId = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1]._id : users[0]._id;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, user) => {\r\n  return user[0]._id === loggedUser._id ? user[1] : user[0];\r\n};\r\n\r\nexport async function getUserById(userId, token) {\r\n  if (!userId && !token) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/user/getuserid/${userId}`, config);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function useConnectSocket(user) {\r\n  const [socket, setSocket] = useState(null);\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!user || !user.token) {\r\n      return;\r\n    }\r\n\r\n    // Check if the socket already exists\r\n    if (socketRef.current) {\r\n      setSocket(socketRef.current);\r\n      return;\r\n    }\r\n\r\n    const userId = user._id;\r\n    const newSocket = io(\"/\", {\r\n      query: { token: user.token, userId },\r\n    });\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"connected\");\r\n      setSocket(newSocket); // Set socket state after connection\r\n    });\r\n\r\n    newSocket.on(\"disconnect\", (reason) => {\r\n      console.log(\"Socket.IO disconnected due to:\", reason);\r\n      if (reason === \"io server disconnect\") {\r\n        // Handle server-side disconnections\r\n        newSocket.connect();\r\n      }\r\n    });\r\n\r\n    newSocket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      console.log(`Reconnection attempt ${attemptNumber}`);\r\n    });\r\n\r\n    newSocket.on(\"error\", (error) => {\r\n      console.error(\"Socket.IO error:\", error);\r\n    });\r\n\r\n    // Update socketRef with the new socket instance\r\n    socketRef.current = newSocket;\r\n\r\n    // Clean up function to disconnect socket when the component unmounts\r\n    return () => {\r\n      if (newSocket) {\r\n        newSocket.disconnect();\r\n      }\r\n      socketRef.current = null;\r\n    };\r\n  }, [user]); // Only rerun if user changes\r\n\r\n  return socket;\r\n}\r\n\r\nexport async function makePaymentMpesa(amount, phoneNumber, user, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/makepaymentmpesa/${user._id}?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {}\r\n}\r\n\r\nexport async function donationsMpesa(amount, phoneNumber, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/donationsmpesa?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function handleApprove(accountType, type, user, setUser) {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/paycheck/${user._id}/${type}/${accountType}`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    const userData = await {\r\n      ...user,\r\n      accountType: data.accountType,\r\n      subscription: data.subscription,\r\n      day: data.day,\r\n    };\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(userData));\r\n    setUser(userData);\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw new Error(\"Error occurred\", error);\r\n  }\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Image,\r\n  Input,\r\n  Select,\r\n  Text,\r\n  VStack,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport { countries } from \"countries-list\";\r\nimport { getStatesOfCountry } from \"../assets/state\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useConnectSocket } from \"../components/config/chatlogics\";\r\n\r\nexport const ClubRegistration = ({ onClose }) => {\r\n  const { user, club, setClub, setRequests, setUser } = ChatState();\r\n  const [name, setName] = useState(null);\r\n  const [selectedCountry, setSelectedCountry] = useState(user?.country);\r\n  const [provience, setProvience] = useState(user.provinces);\r\n  const [chairperson, setChairperson] = useState(\"\");\r\n  const [viceChair, setViceChair] = useState(\"\");\r\n  const [secretary, setSecretary] = useState(\"\");\r\n  const [subdivisions, setSubdivisions] = useState([]);\r\n  const [suggest, setSuggest] = useState([]);\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n\r\n  const socket = useConnectSocket(user?.token);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"sent request\", (club) => {\r\n        setUser((prevUser) => ({\r\n          ...prevUser,\r\n          clubRequests: [...prevUser.clubRequests, club._id],\r\n        }));\r\n\r\n        setRequests((prev) => ({ ...prev, club }));\r\n      });\r\n    }\r\n  }, [socket, setRequests, setUser]);\r\n\r\n  const countryOptions = Object.entries(countries).map(([code, country]) => ({\r\n    value: country.name,\r\n    label: country.name,\r\n  }));\r\n\r\n  const getUsersWithNoClub = useCallback(async () => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/user/${user.country}/${provience}`,\r\n        config\r\n      );\r\n\r\n      setSuggest(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users with no clubs:\", error);\r\n    }\r\n  }, [user.token, user._id, setSuggest, provience]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    getUsersWithNoClub();\r\n  }, [getUsersWithNoClub, navigate, user]);\r\n\r\n  useEffect(() => {\r\n    if (!user) navigate(\"/dashboard\");\r\n\r\n    const fetchSubdivisions = async () => {\r\n      const states = getStatesOfCountry(selectedCountry);\r\n      setSubdivisions(states);\r\n    };\r\n\r\n    fetchSubdivisions();\r\n  }, [user]);\r\n\r\n  const handleFormClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  const requestClubRequest = useCallback(\r\n    async (userId, event) => {\r\n      if (event) {\r\n        event.preventDefault();\r\n      }\r\n      if (!name) {\r\n        toast({\r\n          title: \"Give your Club a name please\",\r\n        });\r\n        return;\r\n      }\r\n      if (!user) {\r\n        navigate(\"/dashboard\");\r\n        return;\r\n      }\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.get(\r\n          `/api/user/${user.country}/${user.provinces}/${name}/${userId}`,\r\n          config\r\n        );\r\n        setClub(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching Club:\", error);\r\n      }\r\n    },\r\n    [user.token, user._id, setClub]\r\n  );\r\n  const handleCreateClub = async (e) => {\r\n    e.preventDefault();\r\n    if (!chairperson || !secretary || !viceChair || !user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const info = { chairperson, secretary, viceChair };\r\n      const { data } = await axios.post(`/api/club/register`, info, config);\r\n      console.log(data);\r\n      setClub(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack\r\n      backgroundColor={\"whitesmoke\"}\r\n      width={\"100%\"}\r\n      boxShadow=\"dark-lg\"\r\n      p=\"6\"\r\n      rounded=\"md\"\r\n      bg=\"white\"\r\n    >\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent={\"center\"}\r\n        alignItems={\"center\"}\r\n        fontSize={\"large\"}\r\n        width={\"100%\"}\r\n        mt={20}\r\n      >\r\n        <Button fontSize={\"x-large\"} onClick={handleFormClose} width={\"10px\"}>\r\n          X\r\n        </Button>\r\n        <Text fontWeight={\"bold\"} m={1}>\r\n          Club Form\r\n        </Text>\r\n        <Text\r\n          fontSize={\"sm\"}\r\n          fontWeight={500}\r\n          bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n          p={2}\r\n          px={3}\r\n          color={\"green.500\"}\r\n          rounded={\"full\"}\r\n        >\r\n          Status (*{club && club.registration ? \"Registered\" : \"Not registered\"}\r\n          )\r\n        </Text>\r\n      </Box>\r\n      <Box\r\n        m={3}\r\n        p={3}\r\n        borderRadius={3}\r\n        width={{ base: \"97%\", md: \"60%\" }}\r\n        border={\"1px solid #c255ed\"}\r\n      >\r\n        <FormControl id=\"first-name\" isRequired>\r\n          <FormLabel textColor={\"#c255ed\"}>Club name</FormLabel>\r\n          <Input\r\n            placeholder=\"Enter Club Name\"\r\n            value={name || (club && club.name) || \"\"}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"country\" isRequired>\r\n          <FormLabel textColor=\"#c255ed\">Country</FormLabel>\r\n          <Select\r\n            placeholder=\"Select Club country\"\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            width={\"100%\"}\r\n            value={user?.country}\r\n            isDisabled={true}\r\n            onChange={(e) => setSelectedCountry(e.target.value)}\r\n          >\r\n            {countryOptions.map((option) => (\r\n              <option\r\n                key={option.value}\r\n                value={option.value}\r\n                style={{ color: \"black\" }}\r\n              >\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        {selectedCountry && subdivisions ? (\r\n          <FormControl id=\"provinces\" isRequired>\r\n            <FormLabel textColor={\"#c255ed\"}>County/Province</FormLabel>\r\n            <Select\r\n              placeholder=\"Select Club province\"\r\n              display={\"flex\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n              width={\"100%\"}\r\n              value={provience}\r\n              isDisabled={true}\r\n              onChange={(e) => setProvience(e.target.value)}\r\n            >\r\n              {subdivisions &&\r\n                subdivisions.map((subdivision) => (\r\n                  <option\r\n                    key={subdivision.value}\r\n                    value={subdivision.value}\r\n                    style={{ color: \"black\" }}\r\n                  >\r\n                    {subdivision.name}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n        ) : (\r\n          <FormControl id=\"provinces\" isRequired>\r\n            <FormLabel textColor={\"#c255ed\"}>County/Province</FormLabel>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Province\"\r\n              onChange={(e) => setProvience(e.target.value)}\r\n            />\r\n          </FormControl>\r\n        )}\r\n        <FormControl id=\"first-name\" isRequired>\r\n          <FormLabel textColor={\"#c255ed\"}>\r\n            Make requests to members around you.\r\n          </FormLabel>\r\n        </FormControl>\r\n        <Box\r\n          display={\"flex\"}\r\n          flexDir={\"column\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          borderRadius={3}\r\n          width={\"100%\"}\r\n          height={\"200px\"}\r\n          overflow=\"auto\"\r\n        >\r\n          {!suggest && (\r\n            <Text textAlign={\"center\"}>\r\n              No student without a club in this region.\r\n            </Text>\r\n          )}\r\n          {suggest.length > 0 &&\r\n            suggest.map((suggestion) => (\r\n              <Box\r\n                display={\"flex\"}\r\n                justifyContent={\"space-between\"}\r\n                alignItems={\"center\"}\r\n                key={suggestion._id}\r\n                style={{ color: \"black\" }}\r\n                width={\"90%\"}\r\n                m={1}\r\n              >\r\n                <Text fontSize={\"small\"} fontWeight={\"bold\"}>\r\n                  Name: {suggestion.name}, Adm: {suggestion.admission}\r\n                </Text>\r\n                <Button\r\n                  borderRadius={20}\r\n                  isDisabled={\r\n                    club && club.clubRequests.includes(suggestion._id)\r\n                  }\r\n                  onClick={(event) => requestClubRequest(suggestion._id, event)}\r\n                  backgroundColor={\"#c255ed\"}\r\n                >\r\n                  {club && club.clubRequests.includes(suggestion._id)\r\n                    ? \"Request sent\"\r\n                    : \"Send Request\"}\r\n                </Button>\r\n              </Box>\r\n            ))}\r\n        </Box>\r\n        <FormControl id=\"members\" isRequired>\r\n          <FormLabel textColor={\"#c255ed\"}>\r\n            Students enrolled {club && club.members.length}/20\r\n          </FormLabel>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            borderRadius={3}\r\n            width={\"100%\"}\r\n            height={\"100px\"}\r\n            overflow=\"auto\"\r\n            borderTop={\"1px solid #c255ed\"}\r\n            borderBottom={\"1px solid #c255ed\"}\r\n          >\r\n            {club && club.members.length === 0 && (\r\n              <Text textAlign={\"center\"}>\r\n                No members available for this club.\r\n              </Text>\r\n            )}\r\n            {club &&\r\n              club.members.length > 0 &&\r\n              club.members.map((member) => (\r\n                <Button fontSize={\"small\"} fontWeight={\"bold\"} m={1}>\r\n                  Adm: {member.admission}\r\n                </Button>\r\n              ))}\r\n          </Box>\r\n        </FormControl>\r\n        <FormControl id=\"chairman\" isRequired>\r\n          <FormLabel>Chairperson</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"chairman\"\r\n            value={chairperson}\r\n            onChange={(e) => setChairperson(e.target.chairperson)}\r\n            placeholder=\"Input valid adm of the party\"\r\n            isInvalid={\r\n              !club?.members.some((adm) => adm.admission === chairperson)\r\n            }\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"secretary\" isRequired>\r\n          <FormLabel>Secretary</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"secretary\"\r\n            value={secretary}\r\n            placeholder=\"Input valid adm of the party\"\r\n            isInvalid={\r\n              !club?.members.some((adm) => adm.admission === secretary)\r\n            }\r\n            onChange={(e) => setSecretary(e.target.secretary)}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"vice-chairman\" isRequired>\r\n          <FormLabel>Vice Chairperson</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"viceChairman\"\r\n            value={viceChair}\r\n            placeholder=\"Input valid adm of the party\"\r\n            isInvalid={\r\n              !club?.members.some((adm) => adm.admission === viceChair)\r\n            }\r\n            onChange={(e) => setViceChair(e.target.viceChair)}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"provincial-coach\">\r\n          <FormLabel>Coach</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"provincialCoach\"\r\n            value={user?.admission}\r\n            isDisabled={true}\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          colorScheme=\"blue\"\r\n          width=\"100%\"\r\n          style={{ marginTop: 15 }}\r\n          isDisabled={\r\n            club?.members.length < 20 ||\r\n            !chairperson ||\r\n            !secretary ||\r\n            !viceChair\r\n          }\r\n          onClick={() => handleCreateClub()}\r\n        >\r\n          <Text> Register Club </Text>\r\n        </Button>{\" \"}\r\n      </Box>\r\n    </VStack>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Select,\r\n  Spinner,\r\n  Text,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { RxEyeNone } from \"react-icons/rx\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport { getStatesOfCountry, getCountryFlag } from \"../assets/state\";\r\nimport UpperNav from \"../miscellenious/upperNav\";\r\nimport axios from \"axios\";\r\nimport { ClubRegistration } from \"../Authentication/club\";\r\nimport FooterAchieves from \"../components/FooterAchieves\";\r\n\r\nconst Clubs = () => {\r\n  const { user, club } = ChatState();\r\n  const [subdivisions, setSubdivisions] = useState([]);\r\n  const [clubs, setClubs] = useState([]);\r\n  const [province, setProvince] = useState(user?.provinces);\r\n  const [fillForm, setFillForm] = useState(false);\r\n  const navigate = useNavigate();\r\n  const flag = getCountryFlag(user?.country);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const fetchClubs = useCallback(async () => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setClubs([]);\r\n    \r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/${user.country}/${province}`,\r\n        config\r\n      );\r\n      setClubs(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setClubs([]);\r\n      setLoading(false);\r\n    }\r\n  }, [user, setClubs, province ]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    fetchClubs();\r\n  }, [fetchClubs, navigate, user]);\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchSubdivisions = async () => {\r\n      const states = getStatesOfCountry(user?.country);\r\n      setSubdivisions(states);\r\n    };\r\n\r\n    fetchSubdivisions();\r\n  }, [user?.country]);\r\n\r\n  const handleCreateClub = () => {\r\n    const belts = [\r\n      \"Guest\",\r\n      \"Yellow\",\r\n      \"Orange\",\r\n      \"Red\",\r\n      \"Purple\",\r\n      \"Green\",\r\n      \"Blue\",\r\n      \"Brown\",\r\n      \"Black\",\r\n    ];\r\n\r\n    if (user && belts.indexOf(user.belt) >= belts.indexOf(\"Orange\")) {\r\n      setFillForm(true);\r\n    } else {\r\n      toast({\r\n        title: \"You need to elevate your craft to at least Orange Belt!\",\r\n        description: \"Requirements not attained yet\",\r\n        status: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDir=\"column\"\r\n      backgroundColor=\"whitesmoke\"\r\n      width=\"100%\"\r\n      overflowX={\"auto\"}\r\n      justifyContent={\"start\"}\r\n      alignItems={\"center\"}\r\n      minH={\"100vh\"}\r\n    >\r\n        <UpperNav />\r\n      <Text\r\n        textAlign=\"center\"\r\n        fontSize={\"large\"}\r\n        fontWeight={\"bold\"}\r\n        p={3}\r\n        mt={20}\r\n      >\r\n        Country: {user?.country} {flag}\r\n      </Text>\r\n      <Box\r\n        display={\"flex\"}\r\n        flexDir={\"column\"}\r\n        justifyContent={\"center\"}\r\n        alignItems={\"center\"}\r\n        width={{ base: \"97%\", md: \"70%\" }}\r\n        boxShadow=\"dark-lg\"\r\n        p=\"6\"\r\n        rounded=\"md\"\r\n        bg=\"white\"\r\n        fontStyle={\"italic\"}\r\n        mb={\"6\"}\r\n      >\r\n        <FormControl\r\n          id=\"provinces\"\r\n          isRequired\r\n          textAlign={\"center\"}\r\n          width={{ base: \"100%\", md: \"60%\" }}\r\n          p={3}\r\n        >\r\n          <FormLabel textAlign={\"center\"}>Select State</FormLabel>\r\n          <Select\r\n            placeholder=\"Select your province\"\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            width={\"100%\"}\r\n            isDisabled={loading}\r\n            value={province}\r\n            onChange={(e) => {\r\n              setProvince(e.target.value);\r\n              fetchClubs(e.target.value);\r\n            }}\r\n          >\r\n            {subdivisions &&\r\n              subdivisions.map((subdivision, index) => (\r\n                <option\r\n                  key={index}\r\n                  value={subdivision.value}\r\n                  style={{ color: \"black\" }}\r\n                >\r\n                  {subdivision.name}\r\n                </option>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n        <Text fontSize={\"larger\"} fontWeight={\"bold\"} textColor={\"darkgreen\"}>\r\n          Available Clubs in {province}\r\n        </Text>\r\n\r\n        <Box\r\n          display={\"flex\"}\r\n          flexDir={\"column\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          height={\"10rem\"}\r\n          m={1}\r\n          p={0}\r\n          borderRadius={3}\r\n          width={{ base: \"100%\", md: \"80%\" }}\r\n         >\r\n          {\" \"}\r\n          {loading ? (\r\n            <Spinner size={\"xl\"} speed=\"0.65s\" />\r\n          ) : (\r\n            <Box\r\n              display={\"flex\"}\r\n              flexDir={\"column\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n              maxH={\"300px\"}\r\n              width={\"100%\"}\r\n            >\r\n              {clubs.length > 0 ? (\r\n                clubs.map((club, index) => (\r\n                  <Button\r\n                    key={index}\r\n                    width={\"100%\"}\r\n                    border={\"none\"}\r\n                    onClick={() => navigate(`/showclub/${club._id}/${false}`)}\r\n                    mb={\"2\"}\r\n                    justifyContent={\"space-around\"}\r\n                  >\r\n                <Text fontSize={\"xs\"}>{club.name}</Text>\r\n                <Text\r\n                  fontSize={\"xs\"}\r\n                  bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n                  color={\"green.500\"}\r\n                  rounded={\"full\"}\r\n                  p={\"2\"}\r\n                >\r\n                  {club?.registered ? \"Registered\" : \"Unregistered\"}\r\n                </Text>\r\n                  </Button>\r\n                ))\r\n              ) : (\r\n                <>\r\n                  <Text textAlign={\"center\"}>\r\n                  <RxEyeNone />\r\n                  </Text>\r\n\r\n                  <Text fontWeight={\"bold\"}>\r\n                    No clubs available in this region yet.\r\n                  </Text>\r\n                  <Text>Start your own club below and lead the way!</Text>\r\n                </>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </Box>\r\n\r\n        {user?.couch ? (\r\n          <Box m={2}>Your Club</Box>\r\n        ) : (\r\n          <Button\r\n            display={\"flex\"}\r\n            backgroundColor={\"#c255ed\"}\r\n            borderRadius={20}\r\n            fontSize={\"small\"}\r\n            border={\"none\"}\r\n            onClick={() => {\r\n              handleCreateClub();\r\n            }}\r\n            m={2}\r\n          >\r\n              {club && club.registered\r\n                ? \"Continue Registering\"\r\n                : \"Register Club\"}\r\n          </Button>\r\n        )}\r\n      </Box>\r\n      {fillForm && <ClubRegistration onClose={() => setFillForm(false)} />}\r\n      <FooterAchieves/>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Clubs;\r\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { compact, mapResponsive } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nconst GridItem = forwardRef(\n  function GridItem2(props, ref) {\n    const {\n      area,\n      colSpan,\n      colStart,\n      colEnd,\n      rowEnd,\n      rowSpan,\n      rowStart,\n      ...rest\n    } = props;\n    const styles = compact({\n      gridArea: area,\n      gridColumn: spanFn(colSpan),\n      gridRow: spanFn(rowSpan),\n      gridColumnStart: colStart,\n      gridColumnEnd: colEnd,\n      gridRowStart: rowStart,\n      gridRowEnd: rowEnd\n    });\n    return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n  }\n);\nGridItem.displayName = \"GridItem\";\n\nexport { GridItem };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport { Grid };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport { Link };\n"],"names":["_jsx","Grid","templateColumns","base","md","gap","m","mt","userSelect","children","title","items","subtitle","description","map","section","index","GridItem","colSpan","h","bg","p","borderRadius","_jsxs","Box","fontSize","Text","fontWeight","mb","item","idx","style","padding","link","Link","color","href","target","rel","UserFormValidation","z","object","name","string","min","max","otherName","email","gender","enum","password","confirmPassword","refine","val","ctx","parent","message","passport","regex","selectedCountry","provinces","optional","language","pic","url","useConnectSocket","user","_useState","useState","_useState2","_slicedToArray","socket","setSocket","socketRef","useRef","useEffect","token","current","userId","_id","newSocket","io","query","on","console","log","reason","connect","attemptNumber","concat","error","disconnect","makePaymentMpesa","_x3","_x4","_x5","_x6","_makePaymentMpesa","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","amount","phoneNumber","toast","config","_yield$axios$post","wrap","_context2","prev","next","abrupt","headers","Authorization","axios","post","sent","data","status","duration","position","t0","stop","donationsMpesa","_x7","_x8","_x9","_donationsMpesa","_callee3","_yield$axios$post2","_context3","ClubRegistration","_ref","onClose","_ChatState","ChatState","club","setClub","setRequests","setUser","setName","_useState3","country","_useState4","setSelectedCountry","_useState5","_useState6","provience","setProvience","_useState7","_useState8","chairperson","setChairperson","_useState9","_useState10","viceChair","setViceChair","_useState11","_useState12","secretary","setSecretary","_useState13","_useState14","subdivisions","setSubdivisions","_useState15","_useState16","suggest","setSuggest","navigate","useNavigate","useToast","prevUser","_objectSpread","clubRequests","_toConsumableArray","countryOptions","Object","entries","countries","_ref2","_ref3","value","label","getUsersWithNoClub","useCallback","_callee","_yield$axios$get","_context","get","fetchSubdivisions","_ref5","states","getStatesOfCountry","requestClubRequest","_ref6","event","_yield$axios$get2","preventDefault","_x","_x2","handleCreateClub","_ref7","_callee4","e","info","_context4","VStack","backgroundColor","width","boxShadow","rounded","display","justifyContent","alignItems","Button","onClick","useColorModeValue","px","registration","border","FormControl","id","isRequired","FormLabel","textColor","Input","placeholder","onChange","Select","isDisabled","option","subdivision","type","flexDir","height","overflow","textAlign","length","suggestion","admission","includes","members","borderTop","borderBottom","member","isInvalid","some","adm","colorScheme","marginTop","clubs","setClubs","province","setProvince","fillForm","setFillForm","flag","getCountryFlag","loading","setLoading","fetchClubs","overflowX","minH","UpperNav","fontStyle","Spinner","size","speed","maxH","registered","_Fragment","RxEyeNone","couch","belts","indexOf","belt","FooterAchieves","_excluded","spanFn","span","mapResponsive","forwardRef","props","ref","area","colStart","colEnd","rowEnd","rowSpan","rowStart","rest","_objectWithoutProperties","styles","compact","gridArea","gridColumn","gridRow","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","jsx","chakra","div","__css","displayName","templateAreas","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","useStyleConfig","_omitThemingProps","omitThemingProps","className","isExternal","a","cx"],"sourceRoot":""}