{"version":3,"file":"static/js/915.604978ac.chunk.js","mappings":"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","sources":["components/FooterAchieves.js","components/config/chatlogics.js","miscellenious/Requests.js","miscellenious/upperNav.js","Authentication/club.js","pages/Clubs.js","../node_modules/@chakra-ui/layout/src/link.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Grid, GridItem, Box, Text, Link } from '@chakra-ui/react';\r\n\r\nconst FooterAchieves = () => {\r\n  const data = [\r\n    {\r\n      title: \"National Coach Role:\",\r\n      items: [\r\n        {\r\n          subtitle: \"Qualification Requirements:\",\r\n          description: \"To become a national coach, one must first be a WSF registered province coach or lead a WSF registered club in a country without provinces. They must be approved by other province coaches to become their national leader. Responsibilities include managing national funds and organizing international tournaments, national seminars and black belt graduation ceremonies in conjuction with the WSF national committee.\",\r\n        },\r\n        {\r\n          subtitle: \"Interim Appointment:\",\r\n          description: \"The interim role lasts for a maximum of one year(then elections), during which the coach is responsible for managing national-level activities, funds and ensuring smooth operations.\",\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Province Coach Role:\",\r\n      items: [\r\n        {\r\n          subtitle: \"Qualification Criteria:\",\r\n          description: \"A province coach must be approved by 20 other WSF registered coaches in his/her province, hold a black belt and lead a WSF registered club. Responsibilities include organizing local tournaments, seminars and under-belts graduation ceremonies in conjuction with the WSF province committee.\",\r\n        },\r\n        {\r\n          subtitle: \"Interim Appointment:\",\r\n          description: \"The interim role also lasts for a maximum of one year(then elections), during which the coach is responsible for managing province-level activities, funds and ensuring smooth operations.\",\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Club Creation and Student Training Role:\",\r\n      items: [\r\n        {\r\n          subtitle: \"Club Establishment:\",\r\n          description: \"Students can create clubs after Orange belt certification. A club can only be WSF registered (badged) once it has 20 registered students.\",\r\n        },\r\n        {\r\n          subtitle: \"Student Registration and Training:\",\r\n          description: \"Coaches can register students and earn income per student. They can train students up to the belt levels they have achieved.\",\r\n        }\r\n      ]\r\n    }\r\n  ];  \r\n  return (\r\n    <Grid \r\n      templateColumns={{ base: '1fr', md: 'repeat(6, 1fr)' }} \r\n      gap={2} \r\n      m={2} \r\n      mt={0}\r\n      userSelect=\"none\"\r\n    >\r\n      {data.map((section, index) => (\r\n        <GridItem \r\n          key={index} \r\n          colSpan={{ base: 6, md: 2 }} \r\n          h='auto' \r\n          bg='tomato' \r\n          p={4} \r\n          borderRadius={4}\r\n        >\r\n          <Box fontSize=\"small\">\r\n            <Text fontSize=\"xl\" fontWeight=\"bold\" mb={2}>{section.title}</Text>\r\n            {section.items.map((item, idx) => (\r\n              <Text mb={3} key={idx}>\r\n                <strong style={{ padding: 2 }}>{item.subtitle}</strong>\r\n                {item.description} \r\n                {item.link && (\r\n                  <Link p={1} color=\"blue.500\" href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    here\r\n                  </Link>\r\n                )}\r\n              </Text>\r\n            ))}\r\n          </Box>\r\n        </GridItem>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FooterAchieves;","import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { z } from \"zod\";\r\n\r\nexport const UserFormValidation = z.object({\r\n  name: z\r\n    .string()\r\n    .min(2, \"Name must be at least 2 characters\")\r\n    .max(50, \"Name must be at most 50 characters\"),\r\n  otherName: z\r\n    .string()\r\n    .min(2, \"Other name must be at least 2 characters\")\r\n    .max(50, \"Other name must be at most 50 characters\"),\r\n  email: z.string().email(\"Invalid email address\"),\r\n  gender: z.enum([\"male\", \"female\", \"other\"]),\r\n  password: z\r\n    .string()\r\n    .min(4, \"Password must be at least 8 characters long\")\r\n    .max(100, \"Password must be at most 100 characters\"),\r\n  confirmPassword: z\r\n    .string()\r\n    .min(4, \"Confirm password must be at least 8 characters long\")\r\n    .max(100, \"Confirm password must be at most 100 characters\")\r\n    .refine((val, ctx) => val === ctx.parent.password, {\r\n      message: \"Passwords do not match\",\r\n    }),\r\n  passport: z.string().regex(/^\\d{8,15}$/, \"Invalid passport/ID number\"),\r\n  selectedCountry: z.string().min(2, \"Country is required\"),\r\n  provinces: z.string().optional(),\r\n  language: z.string().min(2, \"Language is required\"),\r\n  pic: z.string().url(\"Profile picture is required\"),\r\n});\r\n\r\nexport const isSameSenderMargin = (messages, m, i, userId) => {\r\n  const isCurrentUserSender = m.sender?.$oid === userId;\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender?.$oid === m.sender?.$oid &&\r\n    !isCurrentUserSender\r\n  ) {\r\n    return 33;\r\n  } else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender?.$oid !== m.sender?.$oid &&\r\n      !isCurrentUserSender) ||\r\n    (i === messages.length - 1 && !isCurrentUserSender)\r\n  ) {\r\n    return 0;\r\n  } else {\r\n    return \"auto\";\r\n  }\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1]?.sender?._id !== m.sender?._id ||\r\n      messages[i + 1]?.sender?._id === undefined) &&\r\n    messages[i]?.sender?._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  const lastMessageSenderId = messages[messages.length - 1].sender?.$oid;\r\n  return (\r\n    i === messages.length - 1 &&\r\n    lastMessageSenderId !== userId &&\r\n    lastMessageSenderId\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender?.$oid === m.sender?.$oid;\r\n};\r\n\r\nexport const getSenderName = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n};\r\nexport const getSenderId = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1]._id : users[0]._id;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, user) => {\r\n  return user[0]._id === loggedUser._id ? user[1] : user[0];\r\n};\r\n\r\nexport async function getUserById(userId, token) {\r\n  if (!userId && !token) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/user/getuserid/${userId}`, config);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function useConnectSocket(user) {\r\n  const [socket, setSocket] = useState(null);\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!user || !user.token) {\r\n      return;\r\n    }\r\n\r\n    // Check if the socket already exists\r\n    if (socketRef.current) {\r\n      setSocket(socketRef.current);\r\n      return;\r\n    }\r\n\r\n    const userId = user._id;\r\n    const newSocket = io(\"/\", {\r\n      query: { token: user.token, userId },\r\n    });\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"connected\");\r\n      setSocket(newSocket); // Set socket state after connection\r\n    });\r\n\r\n    newSocket.on(\"disconnect\", () => {\r\n      console.log(\"Socket disconnected\");\r\n    });\r\n\r\n    // Update socketRef with the new socket instance\r\n    socketRef.current = newSocket;\r\n\r\n    // Clean up function to disconnect socket when the component unmounts\r\n    return () => {\r\n      if (newSocket) {\r\n        newSocket.disconnect();\r\n      }\r\n      socketRef.current = null;\r\n    };\r\n  }, [user]); // Only rerun if user changes\r\n\r\n  return socket;\r\n}\r\n\r\nexport async function makePaymentMpesa(amount, phoneNumber, user, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/makepaymentmpesa/${user._id}?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {}\r\n}\r\n\r\nexport async function donationsMpesa(amount, phoneNumber, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/donationsmpesa?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function handleApprove(accountType, type, user, setUser) {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/paycheck/${user._id}/${type}/${accountType}`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    const userData = await {\r\n      ...user,\r\n      accountType: data.accountType,\r\n      subscription: data.subscription,\r\n      day: data.day,\r\n    };\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(userData));\r\n    setUser(userData);\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw new Error(\"Error occurred\", error);\r\n  }\r\n}\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  Button,\r\n  Text,\r\n  Box,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RiTeamLine } from \"react-icons/ri\";\r\n\r\nconst Requests = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [clubRequests, setClubRequests] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { user } = ChatState();\r\n  const navigate = useNavigate();\r\n\r\n  const fetchClubRequests = useCallback(async () => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/github/something/${user._id}`,\r\n        config\r\n      );\r\n      setClubRequests(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching club requests:\", error);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchClubRequests();\r\n    }\r\n  }, [user, fetchClubRequests]);\r\n  const declineRequest = async (clubId) => {\r\n    if (!user || !clubId) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/decline/request/${clubId}/${user._id}`,\r\n        config\r\n      );\r\n      setClubRequests(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(\"Error fetching club requests/decline:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        backgroundColor={\"white\"}\r\n        _hover={{ backgroundColor: \"transparent\" }}\r\n        onClick={onOpen}\r\n        border={\"none\"}\r\n      >\r\n        <RiTeamLine fontSize={\"20px\"} border={\"none\"}/>\r\n        {clubRequests && clubRequests.length > 0 && (\r\n          <Text\r\n            position=\"absolute\"\r\n            bottom=\"70%\"\r\n            right=\"70%\"\r\n            transform=\"translate(50%, 0)\"\r\n            bg=\"red.500\"\r\n            borderRadius=\"50%\"\r\n            width=\"2px\"\r\n            height=\"2px\"\r\n            p={1.5}\r\n          ></Text>\r\n        )}\r\n        <Text />\r\n      </Button>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalOverlay\r\n      bg=\"blackAlpha.300\"\r\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n    />\r\n        <ModalContent>\r\n          <ModalHeader textAlign={\"center\"}>Clubs Requests</ModalHeader>\r\n          <ModalCloseButton border={\"none\"} />\r\n          <ModalBody\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            flexDir={\"column\"}\r\n            maxH={\"300px\"}\r\n          >\r\n            {clubRequests && clubRequests.length > 0 ? (\r\n              clubRequests.map((club, index) => (\r\n                <Box\r\n                  display={\"flex\"}\r\n                  justifyContent={\"space-between\"}\r\n                  alignItems={\"center\"}\r\n                  width={\"100%\"}\r\n                  key={index}\r\n                >\r\n                  <Button\r\n                    key={club._id}\r\n                    justifyContent={\"space-between\"}\r\n                    onClick={() => navigate(`/showclub/${club._id}`)}\r\n                    border={\"none\"}\r\n                  >\r\n                    {index + 1}. Club Name: {club.name}\r\n                  </Button>\r\n                  <Button\r\n                    background={\"#f05e56\"}\r\n                    onClick={() => declineRequest(club._id)}\r\n                    border={\"none\"}\r\n                  >\r\n                    {loading ? <Spinner size={\"small\"} /> : `Decline`}\r\n                  </Button>\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <>\r\n                <Text>All club requests have been replied to.</Text>\r\n              </>\r\n            )}\r\n          </ModalBody>\r\n\r\n          <ModalFooter fontSize={\"small\"} textDecor={\"underline\"}>\r\n            These requests were made by club coaches.\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default Requests;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Badge,\r\n  Image,\r\n  useBreakpointValue,\r\n  IconButton,\r\n  CloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { TiThMenuOutline } from \"react-icons/ti\";\r\nimport { BellIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport Requests from \"./Requests\";\r\nimport React from \"react\";\r\nimport logo7 from \"../final.jpeg\";\r\n\r\nfunction UpperNav() {\r\n  const { user, notification, setNotification } = ChatState();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const navigate = useNavigate();\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    setNotification([]);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const displayValue = useBreakpointValue({ base: \"none\", md: \"flex\" });\r\n\r\n  const textVisibility = useBreakpointValue({\r\n    base: \"hidden\",\r\n    md: \"visible\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p={3}\r\n        paddingBottom={2}\r\n        boxShadow=\"2xl\"\r\n        zIndex={10}\r\n        top={0}\r\n        position={\"fixed\"}\r\n      >\r\n        <Image src={logo7} height={12}/>\r\n        <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n          <Button\r\n            backgroundColor={\"transparent\"}\r\n            border={\"none\"}\r\n            display={displayValue}\r\n            visibility={textVisibility}\r\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\r\n            onClick={() => {\r\n              navigate(\"/dashboard\");\r\n            }}\r\n          >\r\n            My Programs\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            display={{ base: \"none\", md: \"flex\" }}\r\n            border={\"none\"}\r\n            onClick={onOpen}\r\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\r\n          >\r\n            <Text\r\n              px={4}\r\n              userSelect={\"none\"}\r\n            >\r\n              Discover\r\n            </Text>\r\n          </Button>\r\n          <Requests />\r\n        </Box>\r\n\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1} position=\"relative\" border={\"none\"}>\r\n              <BellIcon fontSize=\"2xl\" p={0} m={0} />\r\n              {notification.length > 0 && (\r\n                <Badge\r\n                  variant=\"subtle\"\r\n                  position=\"absolute\"\r\n                  top=\"-3px\"\r\n                  right=\"-3px\"\r\n                  backgroundColor={\"red\"}\r\n                  zIndex={1}\r\n                  borderRadius={\"50%\"}\r\n                  color=\"white\"\r\n                >\r\n                  {notification.length}\r\n                </Badge>\r\n              )}\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                >\r\n                  {`New Message from ${\r\n                    notif.sender ? notif.sender.name : \"Coach\"\r\n                  } ADM: ${notif.sender ? notif.sender.admission : \" \"}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton\r\n              as={Button}\r\n              bg=\"white\"\r\n              border={\"none\"}\r\n              _hover={{ backgroundColor: \"transparent\" }}\r\n              onClick={onOpen}\r\n            >\r\n              {displayValue === \"flex\" ? (\r\n                <Avatar\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={user?.name}\r\n                  src={user?.pic}\r\n                />\r\n              ) : (\r\n                <IconButton\r\n                  backgroundColor={\"transparent\"}\r\n                  border={\"none\"}\r\n                  icon={\r\n                    <TiThMenuOutline />\r\n                  }\r\n                />\r\n              )}\r\n            </MenuButton>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n      <DrawerOverlay\r\n      bg=\"blackAlpha.300\"\r\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n    />\r\n        <DrawerContent>\r\n          <DrawerHeader\r\n            borderBottomWidth=\"1px\"\r\n            display={\"flex\"}\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            Dashboard\r\n            <CloseButton onClick={onClose} border={\"none\"} />\r\n          </DrawerHeader>\r\n          <DrawerBody\r\n            display={\"flex\"}\r\n            flexDir={\"column\"}\r\n            justifyContent={\"space-between\"}\r\n            width={\"100%\"}\r\n          >\r\n            <Box\r\n              padding={3}\r\n              display={\"flex\"}\r\n              justifyContent={\"space-around\"}\r\n              flexDir={\"column\"}\r\n            >\r\n              <Button\r\n                display={\"flex\"}\r\n                justifyContent={\"left\"}\r\n                alignItems={\"center\"}\r\n                border={\"none\"}\r\n                background={\"white\"}\r\n                m={1}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={() => navigate(\"/profile\")}\r\n              >\r\n                <Avatar\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={user?.name}\r\n                  src={user?.pic}\r\n                />\r\n                <Text p={2} m={1}>\r\n                  Profile\r\n                </Text>\r\n              </Button>\r\n              <Button\r\n                justifyContent={\"left\"}\r\n                border={\"none\"}\r\n                background={\"white\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={() => {\r\n                  navigate(\"/dashboard\");\r\n                  onClose();\r\n                }}\r\n              >\r\n                My Programs\r\n              </Button>\r\n              <Button\r\n                justifyContent={\"start\"}\r\n                background={\"white\"}\r\n                border={\"none\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={() => {\r\n                  navigate(\"/clubs\");\r\n                  onClose();\r\n                }}\r\n              >\r\n                Clubs\r\n              </Button>\r\n              <Button\r\n                justifyContent={\"left\"}\r\n                background={\"white\"}\r\n                border={\"none\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                isDisabled={!user?.provinces}\r\n                onClick={() => {\r\n                  navigate(\"/province\");\r\n                  onClose();\r\n                }}\r\n              >\r\n                Provincial level\r\n              </Button>\r\n              <Button\r\n                background={\"white\"}\r\n                justifyContent={\"left\"}\r\n                border={\"none\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={() => {\r\n                  navigate(\"/national\");\r\n                  onClose();\r\n                }}\r\n              >\r\n                National level\r\n              </Button>\r\n              <Button\r\n                background={\"white\"}\r\n                justifyContent={\"left\"}\r\n                border={\"none\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={()=> {\r\n                  navigate(\"/championships\")\r\n                }}\r\n              >\r\n                International Championship\r\n              </Button>\r\n            </Box>\r\n            <Button border={\"none\"} onClick={logoutHandler}>Log out</Button>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpperNav;\r\n","import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Image,\r\n  Input,\r\n  Select,\r\n  Text,\r\n  VStack,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport { countries } from \"countries-list\";\r\nimport { getStatesOfCountry } from \"../assets/state\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useConnectSocket } from \"../components/config/chatlogics\";\r\n\r\nexport const ClubRegistration = ({ onClose }) => {\r\n  const { user, club, setClub, setRequests, setUser } = ChatState();\r\n  const [name, setName] = useState(null);\r\n  const [selectedCountry, setSelectedCountry] = useState(user?.country);\r\n  const [provience, setProvience] = useState(user.provinces);\r\n  const [chairperson, setChairperson] = useState(\"\");\r\n  const [viceChair, setViceChair] = useState(\"\");\r\n  const [secretary, setSecretary] = useState(\"\");\r\n  const [subdivisions, setSubdivisions] = useState([]);\r\n  const [suggest, setSuggest] = useState([]);\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n\r\n  const socket = useConnectSocket(user?.token);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"sent request\", (club) => {\r\n        setUser((prevUser) => ({\r\n          ...prevUser,\r\n          clubRequests: [...prevUser.clubRequests, club._id],\r\n        }));\r\n\r\n        setRequests((prev) => ({ ...prev, club }));\r\n      });\r\n    }\r\n  }, [socket, setRequests, setUser]);\r\n\r\n  const countryOptions = Object.entries(countries).map(([code, country]) => ({\r\n    value: country.name,\r\n    label: country.name,\r\n  }));\r\n\r\n  const getUsersWithNoClub = useCallback(async () => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/user/${user.country}/${provience}`,\r\n        config\r\n      );\r\n\r\n      setSuggest(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users with no clubs:\", error);\r\n    }\r\n  }, [user.token, user._id, setSuggest, provience]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    getUsersWithNoClub();\r\n  }, [getUsersWithNoClub, navigate, user]);\r\n\r\n  useEffect(() => {\r\n    if (!user) navigate(\"/dashboard\");\r\n\r\n    const fetchSubdivisions = async () => {\r\n      const states = getStatesOfCountry(selectedCountry);\r\n      setSubdivisions(states);\r\n    };\r\n\r\n    fetchSubdivisions();\r\n  }, [user]);\r\n\r\n  const handleFormClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  const requestClubRequest = useCallback(\r\n    async (userId, event) => {\r\n      if (event) {\r\n        event.preventDefault();\r\n      }\r\n      if (!name) {\r\n        toast({\r\n          title: \"Give your Club a name please\",\r\n        });\r\n        return;\r\n      }\r\n      if (!user) {\r\n        navigate(\"/dashboard\");\r\n        return;\r\n      }\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.get(\r\n          `/api/user/${user.country}/${user.provinces}/${name}/${userId}`,\r\n          config\r\n        );\r\n        setClub(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching Club:\", error);\r\n      }\r\n    },\r\n    [user.token, user._id, setClub]\r\n  );\r\n  const handleCreateClub = async (e) => {\r\n    e.preventDefault();\r\n    if (!chairperson || !secretary || !viceChair || !user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const info = { chairperson, secretary, viceChair };\r\n      const { data } = await axios.post(`/api/club/register`, info, config);\r\n      console.log(data);\r\n      setClub(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack\r\n      backgroundColor={\"whitesmoke\"}\r\n      width={\"100%\"}\r\n      boxShadow=\"dark-lg\"\r\n      p=\"6\"\r\n      rounded=\"md\"\r\n      bg=\"white\"\r\n    >\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent={\"center\"}\r\n        alignItems={\"center\"}\r\n        fontSize={\"large\"}\r\n        width={\"100%\"}\r\n        mt={20}\r\n      >\r\n        <Button fontSize={\"x-large\"} onClick={handleFormClose} width={\"10px\"}>\r\n          X\r\n        </Button>\r\n        <Text fontWeight={\"bold\"} m={1}>\r\n          Club Form\r\n        </Text>\r\n        <Text\r\n          fontSize={\"sm\"}\r\n          fontWeight={500}\r\n          bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n          p={2}\r\n          px={3}\r\n          color={\"green.500\"}\r\n          rounded={\"full\"}\r\n        >\r\n          Status (*{club && club.registration ? \"Registered\" : \"Not registered\"}\r\n          )\r\n        </Text>\r\n      </Box>\r\n      <Box\r\n        m={3}\r\n        p={3}\r\n        borderRadius={3}\r\n        width={{ base: \"97%\", md: \"60%\" }}\r\n        border={\"1px solid #c255ed\"}\r\n      >\r\n        <FormControl id=\"first-name\" isRequired>\r\n          <FormLabel textColor={\"#c255ed\"}>Club name</FormLabel>\r\n          <Input\r\n            placeholder=\"Enter Club Name\"\r\n            value={name || (club && club.name) || \"\"}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"country\" isRequired>\r\n          <FormLabel textColor=\"#c255ed\">Country</FormLabel>\r\n          <Select\r\n            placeholder=\"Select Club country\"\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            width={\"100%\"}\r\n            value={user?.country}\r\n            isDisabled={true}\r\n            onChange={(e) => setSelectedCountry(e.target.value)}\r\n          >\r\n            {countryOptions.map((option) => (\r\n              <option\r\n                key={option.value}\r\n                value={option.value}\r\n                style={{ color: \"black\" }}\r\n              >\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        {selectedCountry && subdivisions ? (\r\n          <FormControl id=\"provinces\" isRequired>\r\n            <FormLabel textColor={\"#c255ed\"}>County/Province</FormLabel>\r\n            <Select\r\n              placeholder=\"Select Club province\"\r\n              display={\"flex\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n              width={\"100%\"}\r\n              value={provience}\r\n              isDisabled={true}\r\n              onChange={(e) => setProvience(e.target.value)}\r\n            >\r\n              {subdivisions &&\r\n                subdivisions.map((subdivision) => (\r\n                  <option\r\n                    key={subdivision.value}\r\n                    value={subdivision.value}\r\n                    style={{ color: \"black\" }}\r\n                  >\r\n                    {subdivision.name}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n        ) : (\r\n          <FormControl id=\"provinces\" isRequired>\r\n            <FormLabel textColor={\"#c255ed\"}>County/Province</FormLabel>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Province\"\r\n              onChange={(e) => setProvience(e.target.value)}\r\n            />\r\n          </FormControl>\r\n        )}\r\n        <FormControl id=\"first-name\" isRequired>\r\n          <FormLabel textColor={\"#c255ed\"}>\r\n            Make requests to members around you.\r\n          </FormLabel>\r\n        </FormControl>\r\n        <Box\r\n          display={\"flex\"}\r\n          flexDir={\"column\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          borderRadius={3}\r\n          width={\"100%\"}\r\n          height={\"200px\"}\r\n          overflow=\"auto\"\r\n        >\r\n          {!suggest && (\r\n            <Text textAlign={\"center\"}>\r\n              No student without a club in this region.\r\n            </Text>\r\n          )}\r\n          {suggest.length > 0 &&\r\n            suggest.map((suggestion) => (\r\n              <Box\r\n                display={\"flex\"}\r\n                justifyContent={\"space-between\"}\r\n                alignItems={\"center\"}\r\n                key={suggestion._id}\r\n                style={{ color: \"black\" }}\r\n                width={\"90%\"}\r\n                m={1}\r\n              >\r\n                <Text fontSize={\"small\"} fontWeight={\"bold\"}>\r\n                  Name: {suggestion.name}, Adm: {suggestion.admission}\r\n                </Text>\r\n                <Button\r\n                  borderRadius={20}\r\n                  isDisabled={\r\n                    club && club.clubRequests.includes(suggestion._id)\r\n                  }\r\n                  onClick={(event) => requestClubRequest(suggestion._id, event)}\r\n                  backgroundColor={\"#c255ed\"}\r\n                >\r\n                  {club && club.clubRequests.includes(suggestion._id)\r\n                    ? \"Request sent\"\r\n                    : \"Send Request\"}\r\n                </Button>\r\n              </Box>\r\n            ))}\r\n        </Box>\r\n        <FormControl id=\"members\" isRequired>\r\n          <FormLabel textColor={\"#c255ed\"}>\r\n            Students enrolled {club && club.members.length}/20\r\n          </FormLabel>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            borderRadius={3}\r\n            width={\"100%\"}\r\n            height={\"100px\"}\r\n            overflow=\"auto\"\r\n            borderTop={\"1px solid #c255ed\"}\r\n            borderBottom={\"1px solid #c255ed\"}\r\n          >\r\n            {club && club.members.length === 0 && (\r\n              <Text textAlign={\"center\"}>\r\n                No members available for this club.\r\n              </Text>\r\n            )}\r\n            {club &&\r\n              club.members.length > 0 &&\r\n              club.members.map((member) => (\r\n                <Button fontSize={\"small\"} fontWeight={\"bold\"} m={1}>\r\n                  Adm: {member.admission}\r\n                </Button>\r\n              ))}\r\n          </Box>\r\n        </FormControl>\r\n        <FormControl id=\"chairman\" isRequired>\r\n          <FormLabel>Chairperson</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"chairman\"\r\n            value={chairperson}\r\n            onChange={(e) => setChairperson(e.target.chairperson)}\r\n            placeholder=\"Input valid adm of the party\"\r\n            isInvalid={\r\n              !club?.members.some((adm) => adm.admission === chairperson)\r\n            }\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"secretary\" isRequired>\r\n          <FormLabel>Secretary</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"secretary\"\r\n            value={secretary}\r\n            placeholder=\"Input valid adm of the party\"\r\n            isInvalid={\r\n              !club?.members.some((adm) => adm.admission === secretary)\r\n            }\r\n            onChange={(e) => setSecretary(e.target.secretary)}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"vice-chairman\" isRequired>\r\n          <FormLabel>Vice Chairperson</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"viceChairman\"\r\n            value={viceChair}\r\n            placeholder=\"Input valid adm of the party\"\r\n            isInvalid={\r\n              !club?.members.some((adm) => adm.admission === viceChair)\r\n            }\r\n            onChange={(e) => setViceChair(e.target.viceChair)}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"provincial-coach\">\r\n          <FormLabel>Coach</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"provincialCoach\"\r\n            value={user?.admission}\r\n            isDisabled={true}\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          colorScheme=\"blue\"\r\n          width=\"100%\"\r\n          style={{ marginTop: 15 }}\r\n          isDisabled={\r\n            club?.members.length < 20 ||\r\n            !chairperson ||\r\n            !secretary ||\r\n            !viceChair\r\n          }\r\n          onClick={() => handleCreateClub()}\r\n        >\r\n          <Text> Register Club </Text>\r\n        </Button>{\" \"}\r\n      </Box>\r\n    </VStack>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Select,\r\n  Spinner,\r\n  Text,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { RxEyeNone } from \"react-icons/rx\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport { getStatesOfCountry, getCountryFlag } from \"../assets/state\";\r\nimport UpperNav from \"../miscellenious/upperNav\";\r\nimport axios from \"axios\";\r\nimport { ClubRegistration } from \"../Authentication/club\";\r\nimport FooterAchieves from \"../components/FooterAchieves\";\r\n\r\nconst Clubs = () => {\r\n  const { user, club } = ChatState();\r\n  const [subdivisions, setSubdivisions] = useState([]);\r\n  const [clubs, setClubs] = useState([]);\r\n  const [province, setProvince] = useState(user?.provinces);\r\n  const [fillForm, setFillForm] = useState(false);\r\n  const navigate = useNavigate();\r\n  const flag = getCountryFlag(user?.country);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const fetchClubs = useCallback(async () => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setClubs([]);\r\n    \r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/${user.country}/${province}`,\r\n        config\r\n      );\r\n      setClubs(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setClubs([]);\r\n      setLoading(false);\r\n    }\r\n  }, [user, setClubs, province ]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    fetchClubs();\r\n  }, [fetchClubs, navigate, user]);\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchSubdivisions = async () => {\r\n      const states = getStatesOfCountry(user?.country);\r\n      setSubdivisions(states);\r\n    };\r\n\r\n    fetchSubdivisions();\r\n  }, [user?.country]);\r\n\r\n  const handleCreateClub = () => {\r\n    const belts = [\r\n      \"Guest\",\r\n      \"Yellow\",\r\n      \"Orange\",\r\n      \"Red\",\r\n      \"Purple\",\r\n      \"Green\",\r\n      \"Blue\",\r\n      \"Brown\",\r\n      \"Black\",\r\n    ];\r\n\r\n    if (user && belts.indexOf(user.belt) >= belts.indexOf(\"Orange\")) {\r\n      setFillForm(true);\r\n    } else {\r\n      toast({\r\n        title: \"You need to elevate your craft to at least Orange Belt!\",\r\n        description: \"Requirements not attained yet\",\r\n        status: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDir=\"column\"\r\n      backgroundColor=\"whitesmoke\"\r\n      width=\"100%\"\r\n      overflowX={\"auto\"}\r\n      justifyContent={\"start\"}\r\n      alignItems={\"center\"}\r\n      minH={\"100vh\"}\r\n    >\r\n        <UpperNav />\r\n      <Text\r\n        textAlign=\"center\"\r\n        fontSize={\"large\"}\r\n        fontWeight={\"bold\"}\r\n        p={3}\r\n        mt={20}\r\n      >\r\n        Country: {user?.country} {flag}\r\n      </Text>\r\n      <Box\r\n        display={\"flex\"}\r\n        flexDir={\"column\"}\r\n        justifyContent={\"center\"}\r\n        alignItems={\"center\"}\r\n        width={{ base: \"97%\", md: \"70%\" }}\r\n        boxShadow=\"dark-lg\"\r\n        p=\"6\"\r\n        rounded=\"md\"\r\n        bg=\"white\"\r\n        fontStyle={\"italic\"}\r\n        mb={\"6\"}\r\n      >\r\n        <FormControl\r\n          id=\"provinces\"\r\n          isRequired\r\n          textAlign={\"center\"}\r\n          width={{ base: \"100%\", md: \"60%\" }}\r\n          p={3}\r\n        >\r\n          <FormLabel textAlign={\"center\"}>Select State</FormLabel>\r\n          <Select\r\n            placeholder=\"Select your province\"\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            width={\"100%\"}\r\n            isDisabled={loading}\r\n            value={province}\r\n            onChange={(e) => {\r\n              setProvince(e.target.value);\r\n              fetchClubs(e.target.value);\r\n            }}\r\n          >\r\n            {subdivisions &&\r\n              subdivisions.map((subdivision, index) => (\r\n                <option\r\n                  key={index}\r\n                  value={subdivision.value}\r\n                  style={{ color: \"black\" }}\r\n                >\r\n                  {subdivision.name}\r\n                </option>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n        <Text fontSize={\"larger\"} fontWeight={\"bold\"} textColor={\"darkgreen\"}>\r\n          Available Clubs in {province}\r\n        </Text>\r\n\r\n        <Box\r\n          display={\"flex\"}\r\n          flexDir={\"column\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          height={\"10rem\"}\r\n          m={1}\r\n          p={0}\r\n          borderRadius={3}\r\n          width={{ base: \"100%\", md: \"80%\" }}\r\n         >\r\n          {\" \"}\r\n          {loading ? (\r\n            <Spinner size={\"xl\"} speed=\"0.65s\" />\r\n          ) : (\r\n            <Box\r\n              display={\"flex\"}\r\n              flexDir={\"column\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n              maxH={\"300px\"}\r\n              width={\"100%\"}\r\n            >\r\n              {clubs.length > 0 ? (\r\n                clubs.map((club, index) => (\r\n                  <Button\r\n                    key={index}\r\n                    width={\"100%\"}\r\n                    border={\"none\"}\r\n                    onClick={() => navigate(`/showclub/${club._id}/${false}`)}\r\n                    mb={\"2\"}\r\n                    justifyContent={\"space-around\"}\r\n                  >\r\n                <Text fontSize={\"xs\"}>{club.name}</Text>\r\n                <Text\r\n                  fontSize={\"xs\"}\r\n                  bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n                  color={\"green.500\"}\r\n                  rounded={\"full\"}\r\n                  p={\"2\"}\r\n                >\r\n                  {club?.registered ? \"Registered\" : \"Unregistered\"}\r\n                </Text>\r\n                  </Button>\r\n                ))\r\n              ) : (\r\n                <>\r\n                  <Text textAlign={\"center\"}>\r\n                  <RxEyeNone />\r\n                  </Text>\r\n\r\n                  <Text fontWeight={\"bold\"}>\r\n                    No clubs available in this region yet.\r\n                  </Text>\r\n                  <Text>Start your own club below and lead the way!</Text>\r\n                </>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </Box>\r\n\r\n        {user?.couch ? (\r\n          <Box m={2}>Your Club</Box>\r\n        ) : (\r\n          <Button\r\n            display={\"flex\"}\r\n            backgroundColor={\"#c255ed\"}\r\n            borderRadius={20}\r\n            fontSize={\"small\"}\r\n            border={\"none\"}\r\n            onClick={() => {\r\n              handleCreateClub();\r\n            }}\r\n            m={2}\r\n          >\r\n              {club && club.registered\r\n                ? \"Continue Registering\"\r\n                : \"Register Club\"}\r\n          </Button>\r\n        )}\r\n      </Box>\r\n      {fillForm && <ClubRegistration onClose={() => setFillForm(false)} />}\r\n      <FooterAchieves/>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Clubs;\r\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface LinkProps extends HTMLChakraProps<\"a\">, ThemingProps<\"Link\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   *\n   * @default false\n   */\n  isExternal?: boolean\n}\n\n/**\n * Links are accessible elements used primarily for navigation.\n *\n * It integrates well with other routing libraries like\n * React Router, Reach Router and Next.js Link.\n *\n * @example\n *\n * ```jsx\n * <Link as={ReactRouterLink} to=\"/home\">Home</Link>\n * ```\n *\n * @see Docs https://chakra-ui.com/link\n */\nexport const Link = forwardRef<LinkProps, \"a\">(function Link(props, ref) {\n  const styles = useStyleConfig(\"Link\", props)\n  const { className, isExternal, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.a\n      target={isExternal ? \"_blank\" : undefined}\n      rel={isExternal ? \"noopener\" : undefined}\n      ref={ref}\n      className={cx(\"chakra-link\", className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nLink.displayName = \"Link\"\n"],"names":["_jsx","Grid","templateColumns","base","md","gap","m","mt","userSelect","children","title","items","subtitle","description","map","section","index","GridItem","colSpan","h","bg","p","borderRadius","_jsxs","Box","fontSize","Text","fontWeight","mb","item","idx","style","padding","link","Link","color","href","target","rel","UserFormValidation","z","object","name","string","min","max","otherName","email","gender","enum","password","confirmPassword","refine","val","ctx","parent","message","passport","regex","selectedCountry","provinces","optional","language","pic","url","useConnectSocket","user","_useState","useState","_useState2","_slicedToArray","socket","setSocket","socketRef","useRef","useEffect","token","current","userId","_id","newSocket","io","query","on","console","log","disconnect","makePaymentMpesa","_x3","_x4","_x5","_x6","_makePaymentMpesa","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","amount","phoneNumber","toast","config","_yield$axios$post","wrap","_context2","prev","next","abrupt","headers","Authorization","concat","axios","post","sent","data","status","duration","position","t0","stop","donationsMpesa","_x7","_x8","_x9","_donationsMpesa","_callee3","_yield$axios$post2","_context3","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","clubRequests","setClubRequests","_useState3","_useState4","loading","setLoading","ChatState","navigate","useNavigate","fetchClubRequests","useCallback","_callee","_yield$axios$get","_context","get","error","declineRequest","_ref2","clubId","_yield$axios$get2","_x","_Fragment","Button","backgroundColor","_hover","onClick","border","RiTeamLine","length","bottom","right","transform","width","height","Modal","ModalOverlay","backdropFilter","ModalContent","ModalHeader","textAlign","ModalCloseButton","ModalBody","display","justifyContent","alignItems","flexDir","maxH","club","background","Spinner","size","ModalFooter","textDecor","_ChatState","notification","setNotification","displayValue","useBreakpointValue","textVisibility","w","paddingBottom","boxShadow","zIndex","top","Image","src","logo7","visibility","variant","px","Requests","Menu","MenuButton","BellIcon","Badge","MenuList","pl","notif","MenuItem","filter","n","sender","admission","as","Avatar","cursor","IconButton","icon","TiThMenuOutline","Drawer","placement","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","CloseButton","DrawerBody","isDisabled","localStorage","removeItem","ClubRegistration","_ref","setClub","setRequests","setUser","setName","country","setSelectedCountry","_useState5","_useState6","provience","setProvience","_useState7","_useState8","chairperson","setChairperson","_useState9","_useState10","viceChair","setViceChair","_useState11","_useState12","secretary","setSecretary","_useState13","_useState14","subdivisions","setSubdivisions","_useState15","_useState16","suggest","setSuggest","useToast","prevUser","_objectSpread","_toConsumableArray","countryOptions","Object","entries","countries","_ref3","value","label","getUsersWithNoClub","fetchSubdivisions","_ref5","states","getStatesOfCountry","requestClubRequest","_ref6","event","preventDefault","_x2","handleCreateClub","_ref7","_callee4","e","info","_context4","VStack","rounded","useColorModeValue","registration","FormControl","id","isRequired","FormLabel","textColor","Input","placeholder","onChange","Select","option","subdivision","type","overflow","suggestion","includes","members","borderTop","borderBottom","member","isInvalid","some","adm","colorScheme","marginTop","clubs","setClubs","province","setProvince","fillForm","setFillForm","flag","getCountryFlag","fetchClubs","overflowX","minH","UpperNav","fontStyle","speed","registered","RxEyeNone","couch","belts","indexOf","belt","FooterAchieves","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","className","isExternal","rest","_objectWithoutProperties","_excluded","jsx","chakra","a","cx","__css","displayName"],"sourceRoot":""}