{"version":3,"file":"static/js/713.4da09c10.chunk.js","mappings":"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","sources":["pages/Courses.js","../node_modules/@chakra-ui/react/dist/esm/toast/toast.placement.mjs","../node_modules/@chakra-ui/react/dist/esm/toast/use-toast.mjs","../node_modules/@chakra-ui/react/dist/esm/toast/create-toast-fn.mjs"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Box, Text, Button, useToast, Spinner } from \"@chakra-ui/react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport UpperNav from \"../miscellenious/upperNav\";\r\nimport axios from \"axios\";\r\n\r\nconst CourseDetails = ({ courses, user }) => {\r\n  const { id } = useParams();\r\n  const courseId = parseInt(id, 10);\r\n  const course = courses.find((course) => course.id === courseId);\r\n  const [currentLessonIndex, setCurrentLessonIndex] = useState(0);\r\n  const [translatedText, setTranslatedText] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n\r\n  const goToNextLesson = () => {\r\n    setTranslatedText(\"\");\r\n    if (currentLessonIndex < course.lessons.length - 1) {\r\n      setCurrentLessonIndex((prevIndex) => prevIndex + 1);\r\n    }\r\n    if (currentLessonIndex + 1 === course.lessons.length) {\r\n      navigate(`/courses/${id}/submit/${course.title}`);\r\n    }\r\n  };\r\n  const currentLesson = course.lessons[currentLessonIndex];\r\n\r\n  const goToPreviousLesson = () => {\r\n    setTranslatedText(\"\");\r\n\r\n    if (currentLessonIndex > 0) {\r\n      setCurrentLessonIndex((prevIndex) => prevIndex - 1);\r\n    }\r\n  };\r\n\r\n  const translateText = async (text) => {\r\n    if (!user || !text) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/translate?text=${text}&target=${user.language}`,\r\n        config\r\n      );\r\n\r\n      setTranslatedText(data);\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n  // useEffect(() => {\r\n  //   if (\r\n  //     user &&\r\n  //     user.belt &&\r\n  //     user.belt.trim() + \" Belt\" !== course.title.trim()\r\n  //   ) {\r\n  //     navigate(\"/dashboard\");\r\n  //   }\r\n  // }, [user, course, navigate]);\r\n\r\n  return (\r\n    <Box backgroundColor={\"white\"}\r\n     width={\"100%\"} display={\"flex\"} flexDir={\"column\"} alignItems={\"center\"} justifyContent={\"start\"} >\r\n      <UpperNav />\r\n      <Text fontSize=\"24px\" fontWeight=\"bold\" mb={4} mt={20}>\r\n        {course.title}\r\n      </Text>\r\n      <Box\r\n        display={\"flex\"}\r\n        flexDir={\"column\"}\r\n        justifyContent={\"center\"}\r\n        alignItems={\"center\"}\r\n        background={\"white\"}\r\n      >\r\n        <Box mb={4}>\r\n          <Text fontSize=\"large\" fontWeight=\"medium\">\r\n            {currentLesson.title}/{course.lessons.length}\r\n            <Text fontSize={\"small\"}>\r\n              {\" \"}\r\n              *Optimize Your Viewing: Switch to Fullscreen\r\n            </Text>\r\n          </Text>\r\n          <iframe\r\n            title={`Lesson ${currentLesson.id}`}\r\n            width=\"100%\"\r\n            height=\"315\"\r\n            src={currentLesson.video}\r\n            allowFullScreen\r\n            style={{ maxWidth: \"800px\", margin: \"0 auto\" }}\r\n          ></iframe>\r\n          <Text mt={2} textAlign={\"center\"} p={2} width={\"100%\"}>\r\n            <Button\r\n              background=\"transparent\"\r\n              _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n              color={\"purple\"}\r\n              onClick={() => translateText(currentLesson.notes)}\r\n              textDecoration={\"underline\"}\r\n            >\r\n              Translate{loading && <Spinner size={\"sm\"} />}\r\n            </Button>\r\n            {translatedText ? translatedText : currentLesson.notes}\r\n          </Text>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems={\"center\"}\r\n          justifyContent=\"space-evenly\"\r\n          width={\"100%\"}\r\n        >\r\n          <Button\r\n            onClick={goToPreviousLesson}\r\n            disabled={currentLessonIndex === 0}\r\n            borderRadius={20}\r\n          >\r\n            Previous Lesson\r\n          </Button>\r\n          <Button\r\n            onClick={goToNextLesson}\r\n            disabled={currentLessonIndex === course.lessons.length - 1}\r\n            borderRadius={20}\r\n          >\r\n            Next Lesson\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CourseDetails;\r\n","'use client';\nfunction getToastPlacement(position, dir) {\n  const computedPosition = position ?? \"bottom\";\n  const logicals = {\n    \"top-start\": { ltr: \"top-left\", rtl: \"top-right\" },\n    \"top-end\": { ltr: \"top-right\", rtl: \"top-left\" },\n    \"bottom-start\": { ltr: \"bottom-left\", rtl: \"bottom-right\" },\n    \"bottom-end\": { ltr: \"bottom-right\", rtl: \"bottom-left\" }\n  };\n  const logical = logicals[computedPosition];\n  return logical?.[dir] ?? computedPosition;\n}\n\nexport { getToastPlacement };\n","'use client';\nimport { useMemo } from 'react';\nimport { createToastFn } from './create-toast-fn.mjs';\nimport { useToastOptionContext } from './toast.provider.mjs';\nimport { useChakra } from '../system/hooks.mjs';\n\nfunction useToast(options) {\n  const { theme } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(\n    () => createToastFn(theme.direction, {\n      ...defaultOptions,\n      ...options\n    }),\n    [options, theme.direction, defaultOptions]\n  );\n}\n\nexport { useToast };\n","'use client';\nimport { runIfFn } from '@chakra-ui/utils';\nimport { createRenderToast } from './toast.mjs';\nimport { getToastPlacement } from './toast.placement.mjs';\nimport { toastStore } from './toast.store.mjs';\n\nfunction createToastFn(dir, defaultOptions) {\n  const normalizeToastOptions = (options) => ({\n    ...defaultOptions,\n    ...options,\n    position: getToastPlacement(\n      options?.position ?? defaultOptions?.position,\n      dir\n    )\n  });\n  const toast = (options) => {\n    const normalizedToastOptions = normalizeToastOptions(options);\n    const Message = createRenderToast(normalizedToastOptions);\n    return toastStore.notify(Message, normalizedToastOptions);\n  };\n  toast.update = (id, options) => {\n    toastStore.update(id, normalizeToastOptions(options));\n  };\n  toast.promise = (promise, options) => {\n    const id = toast({\n      ...options.loading,\n      status: \"loading\",\n      duration: null\n    });\n    promise.then(\n      (data) => toast.update(id, {\n        status: \"success\",\n        duration: 5e3,\n        ...runIfFn(options.success, data)\n      })\n    ).catch(\n      (error) => toast.update(id, {\n        status: \"error\",\n        duration: 5e3,\n        ...runIfFn(options.error, error)\n      })\n    );\n  };\n  toast.closeAll = toastStore.closeAll;\n  toast.close = toastStore.close;\n  toast.isActive = toastStore.isActive;\n  return toast;\n}\n\nexport { createToastFn };\n"],"names":["_ref","courses","user","id","useParams","courseId","parseInt","course","find","_useState","useState","_useState2","_slicedToArray","currentLessonIndex","setCurrentLessonIndex","_useState3","_useState4","translatedText","setTranslatedText","_useState5","_useState6","loading","setLoading","navigate","useNavigate","toast","useToast","currentLesson","lessons","translateText","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","text","config","_yield$axios$get","data","wrap","_context","prev","next","abrupt","headers","Authorization","concat","token","axios","get","language","sent","t0","title","description","response","message","status","duration","isClosable","position","stop","_x","apply","arguments","_jsxs","Box","backgroundColor","width","display","flexDir","alignItems","justifyContent","children","_jsx","UpperNav","Text","fontSize","fontWeight","mb","mt","background","length","height","src","video","allowFullScreen","style","maxWidth","margin","textAlign","p","Button","_hover","color","onClick","notes","textDecoration","Spinner","size","prevIndex","disabled","borderRadius","getToastPlacement","dir","_logical$dir","computedPosition","logical","ltr","rtl","options","theme","useChakra","defaultOptions","useToastOptionContext","useMemo","normalizeToastOptions","_options$position","_objectSpread","normalizedToastOptions","Message","createRenderToast","toastStore","notify","update","promise","then","runIfFn","success","catch","error","closeAll","close","isActive","createToastFn","direction"],"sourceRoot":""}