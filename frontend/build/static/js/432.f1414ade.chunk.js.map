{"version":3,"file":"static/js/432.f1414ade.chunk.js","mappings":"+MAGMA,EAAa,SAAAC,GACjB,SAAAD,EAAYE,GAAQ,IAADC,EAEgB,OAFhBC,EAAAA,EAAAA,GAAA,KAAAJ,IACjBG,GAAAE,EAAAA,EAAAA,GAAA,KAAAL,EAAA,CAAME,KACDI,MAAQ,CAAEC,UAAU,GAAQJ,CACnC,CAAC,OAAAK,EAAAA,EAAAA,GAAAR,EAAAC,IAAAQ,EAAAA,EAAAA,GAAAT,EAAA,EAAAU,IAAA,oBAAAC,MAMD,SAAkBC,EAAOC,GACvBC,QAAQF,MAAMA,EAAOC,EACvB,GAAC,CAAAH,IAAA,SAAAC,MAED,WACE,OAAII,KAAKT,MAAMC,UAEXS,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,QAAS,OACTC,eAAe,SACfC,WAAW,SACXC,WAAY,aACZC,MAAO,OACPC,OAAQ,OAAOC,SAAA,CAEd,KACDR,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,QAAS,OACTO,cAAe,SACfN,eAAgB,SAChBC,WAAY,SAASI,SAAA,CAEpB,KACDE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,SAAU,MAAMJ,SAAC,gCACvBE,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CAACC,MAAM,WAAWC,KAAK,aAAYP,SAAC,qBAQ1CT,KAAKb,MAAMsB,QACpB,IAAC,EAAAd,IAAA,2BAAAC,MArCD,SAAgCC,GAC9B,MAAO,CAAEL,UAAU,EACrB,IAAC,CARgB,CAASyB,EAAAA,WA6C5B,K,kDC9CMC,E,SAAgBC,EAAMC,SAC5BF,EAAcG,aAAaC,SAASC,IAAG,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACrC,SAAAC,EAAON,GAAQ,OAAAI,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACNX,GAAQ,wBAAAQ,EAAAI,OAAA,GAAAN,EAAA,KAChB,gBAAAO,GAAA,OAAAX,EAAAY,MAAA,KAAAC,UAAA,EAHoC,IAIrC,SAACxC,GACC,OAAOyC,QAAQC,OAAO1C,EACxB,IAGF,K,iNCPa2C,EAAqBC,EAAAA,EAAEC,OAAO,CACzCC,KAAMF,EAAAA,EACHG,SACAC,IAAI,EAAG,sCACPC,IAAI,GAAI,sCACXC,UAAWN,EAAAA,EACRG,SACAC,IAAI,EAAG,4CACPC,IAAI,GAAI,4CACXE,MAAOP,EAAAA,EAAEG,SAASI,MAAM,yBACxBC,OAAQR,EAAAA,EAAES,KAAK,CAAC,OAAQ,SAAU,UAClCC,SAAUV,EAAAA,EACPG,SACAC,IAAI,EAAG,+CACPC,IAAI,IAAK,2CACZM,gBAAiBX,EAAAA,EACdG,SACAC,IAAI,EAAG,uDACPC,IAAI,IAAK,mDACTO,QAAO,SAACC,EAAKC,GAAG,OAAKD,IAAQC,EAAIC,OAAOL,QAAQ,GAAE,CACjDM,QAAS,2BAEbC,SAAUjB,EAAAA,EAAEG,SAASe,MAAM,aAAc,8BACzCC,gBAAiBnB,EAAAA,EAAEG,SAASC,IAAI,EAAG,uBACnCgB,UAAWpB,EAAAA,EAAEG,SAASkB,WACtBC,SAAUtB,EAAAA,EAAEG,SAASC,IAAI,EAAG,wBAC5BmB,IAAKvB,EAAAA,EAAEG,SAASqB,IAAI,iCA2Ef,SAASC,EAAiBC,GAC/B,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAClBI,GAAYC,EAAAA,EAAAA,QAAO,MAmDzB,OAjDAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,GAASA,EAAKU,MAAnB,CAKA,IAAIH,EAAUI,QAAd,CAKA,IAAMC,EAASZ,EAAKa,IACdC,GAAYC,EAAAA,EAAAA,IAAG,IAAK,CACxBC,MAAO,CAAEN,MAAOV,EAAKU,MAAOE,OAAAA,KA4B9B,OAzBAE,EAAUG,GAAG,WAAW,WACtBrF,QAAQsF,IAAI,aACZZ,EAAUQ,EACZ,IAEAA,EAAUG,GAAG,cAAc,SAACE,GAC1BvF,QAAQsF,IAAI,iCAAkCC,GAC/B,yBAAXA,GAEFL,EAAUM,SAEd,IAEAN,EAAUG,GAAG,qBAAqB,SAACI,GACjCzF,QAAQsF,IAAI,wBAADI,OAAyBD,GACtC,IAEAP,EAAUG,GAAG,SAAS,SAACvF,GACrBE,QAAQF,MAAM,mBAAoBA,EACpC,IAGA6E,EAAUI,QAAUG,EAGb,WACDA,GACFA,EAAUS,aAEZhB,EAAUI,QAAU,IACtB,CArCA,CAFEL,EAAUC,EAAUI,QAJtB,CA4CF,GAAG,CAACX,IAEGK,CACT,CAEO,SAAemB,EAAgBC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,EAAA5D,MAAC,KAADC,UAAA,CA0BrC,SAAA2D,IAAA,OAAAA,GAAAvE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MA1BM,SAAAsE,EAAgCC,EAAQC,EAAahC,EAAMiC,GAAK,IAAAC,EAAAC,EAAA,OAAA5E,EAAAA,EAAAA,KAAAG,MAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,UAChEmE,EAAY,CAADI,EAAAvE,KAAA,eAAAuE,EAAAtE,OAAA,iBASb,OATasE,EAAAxE,KAAA,EAIRsE,EAAS,CACbG,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADhB,OAAYtB,EAAKU,SAEjC0B,EAAAvE,KAAA,EACsBb,EAAAA,EAAMuF,KAAK,kCAADjB,OACGtB,EAAKa,IAAG,YAAAS,OAAWS,GACrD,CAAEC,YAAAA,GACFE,GACA,KAAD,EAAAC,EAAAC,EAAAI,KAJWL,EAAJM,MAONR,EAAM,CACJS,MAAO,2DACPC,OAAQ,OACRC,SAAU,IACVC,SAAU,WAEbT,EAAAvE,KAAA,iBAAAuE,EAAAxE,KAAA,GAAAwE,EAAAU,GAAAV,EAAA,kCAAAA,EAAArE,OAAA,GAAA+D,EAAA,oBAEJ7D,MAAA,KAAAC,UAAA,CAEM,SAAe6E,EAAcC,EAAAC,EAAAC,GAAA,OAAAC,EAAAlF,MAAC,KAADC,UAAA,CA2BnC,SAAAiF,IAAA,OAAAA,GAAA7F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MA3BM,SAAA4F,EAA8BrB,EAAQC,EAAaC,GAAK,IAAAC,EAAAmB,EAAA,OAAA9F,EAAAA,EAAAA,KAAAG,MAAA,SAAA4F,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAzF,MAAA,UACxDmE,EAAY,CAADsB,EAAAzF,KAAA,eAAAyF,EAAAxF,OAAA,iBAQb,OARawF,EAAA1F,KAAA,EAIRsE,EAAS,CACbG,QAAS,CACP,eAAgB,qBAEnBiB,EAAAzF,KAAA,EACsBb,EAAAA,EAAMuF,KAAK,uCAADjB,OACQS,GACvC,CAAEC,YAAAA,GACFE,GACA,KAAD,EAAAmB,EAAAC,EAAAd,KAJWa,EAAJZ,MAONR,EAAM,CACJS,MAAO,2DACPC,OAAQ,OACRC,SAAU,IACVC,SAAU,WAEbS,EAAAzF,KAAA,iBAAAyF,EAAA1F,KAAA,GAAA0F,EAAAR,GAAAQ,EAAA,SAED1H,QAAQsF,IAAGoC,EAAAR,IAAQ,yBAAAQ,EAAAvF,OAAA,GAAAqF,EAAA,oBAEtBnF,MAAA,KAAAC,UAAA,C,sBC1LD,IA/B0B,SAACqF,GACzB,IAAMC,EAAc,IAAIC,KAAKF,GAGvBG,EAFc,IAAID,KAEaD,EAC/BG,EAAUC,KAAKC,MAAMH,EAAiB,KACtCI,EAAUF,KAAKC,MAAMF,EAAU,IAC/BI,EAAQH,KAAKC,MAAMC,EAAU,IAC7BE,EAAOJ,KAAKC,MAAME,EAAQ,IAEhC,GAAIJ,EAAU,GACZ,MAAO,WACF,GAAIG,EAAU,GACnB,MAAM,GAANxC,OAAUwC,EAAO,WAAAxC,OAAsB,IAAZwC,EAAgB,GAAK,IAAG,QAC9C,GAAIC,EAAQ,GACjB,MAAM,GAANzC,OAAUyC,EAAK,SAAAzC,OAAkB,IAAVyC,EAAc,GAAK,IAAG,QACxC,GAAa,IAATC,EACT,MAAO,YACF,GAAIA,EAAO,EAChB,MAAM,GAAN1C,OAAU0C,EAAI,QAAA1C,OAAgB,IAAT0C,EAAa,GAAK,IAAG,QAS1C,OAAOR,EAAYS,mBAAmB,QAPtB,CACdC,KAAM,UACNC,OAAQ,UACRC,MAAO,OACPC,IAAK,UACLC,KAAM,WAIZ,C,6fC+HA,EAzIiB,WACf,IAAAC,GAAoCC,EAAAA,EAAAA,KAA5BC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QACxB1E,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7C2E,EAAYzE,EAAA,GAAE0E,EAAe1E,EAAA,GACpC2E,GAA8B5E,EAAAA,EAAAA,WAAS,GAAM6E,GAAA3E,EAAAA,EAAAA,GAAA0E,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAClB/E,GAASkF,EAAAA,EAAAA,KAATlF,KACFmF,GAAWC,EAAAA,EAAAA,MAEXC,GAAoBC,EAAAA,EAAAA,cAAWhI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAyE,EAAAqD,EAAA9C,EAAA,OAAAlF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC/BmC,EAAK,CAADrC,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBAQN,OARMH,EAAAC,KAAA,EAIDsE,EAAS,CACbG,QAAS,CACPC,cAAc,UAADhB,OAAYtB,EAAKU,SAEjC/C,EAAAE,KAAA,EAEsBb,EAAAA,EAAMwI,IAAI,+BAADlE,OACCtB,EAAKa,KACpCqB,GACA,KAAD,EAAAqD,EAAA5H,EAAA6E,KAHOC,EAAI8C,EAAJ9C,KAIRoC,EAAgBpC,GAAM9E,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAmF,GAAAnF,EAAA,SAEtB/B,QAAQF,MAAM,gCAA+BiC,EAAAmF,IAAS,yBAAAnF,EAAAI,OAAA,GAAAN,EAAA,mBAEvD,CAACuC,KAEJS,EAAAA,EAAAA,YAAU,WACJT,GACFqF,GAEJ,GAAG,CAACrF,EAAMqF,IACV,IAAMI,EAAc,eAAAC,GAAApI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsE,EAAO6D,GAAM,IAAAzD,EAAA0D,EAAAnD,EAAA,OAAAlF,EAAAA,EAAAA,KAAAG,MAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,UAC7BmC,GAAS2F,EAAM,CAAAvD,EAAAvE,KAAA,eAAAuE,EAAAtE,OAAA,iBASjB,OANHmH,GAAW,GAAM7C,EAAAxE,KAAA,EAETsE,EAAS,CACbG,QAAS,CACPC,cAAc,UAADhB,OAAYtB,EAAKU,SAEjC0B,EAAAvE,KAAA,EAEsBb,EAAAA,EAAMwI,IAAI,8BAADlE,OACAqE,EAAM,KAAArE,OAAItB,EAAKa,KAC7CqB,GACA,KAAD,EAAA0D,EAAAxD,EAAAI,KAHOC,EAAImD,EAAJnD,KAIRoC,EAAgBpC,GAChBwC,GAAW,GAAO7C,EAAAvE,KAAA,iBAAAuE,EAAAxE,KAAA,GAAAwE,EAAAU,GAAAV,EAAA,SAElB6C,GAAW,GACXrJ,QAAQF,MAAM,wCAAuC0G,EAAAU,IAAS,yBAAAV,EAAArE,OAAA,GAAA+D,EAAA,mBAEjE,gBAtBmB9D,GAAA,OAAA0H,EAAAzH,MAAA,KAAAC,UAAA,KAuBpB,OACEpC,EAAAA,EAAAA,MAAA+J,EAAAA,SAAA,CAAAvJ,SAAA,EACER,EAAAA,EAAAA,MAACgK,EAAAA,EAAM,CACLC,gBAAiB,QACjBC,OAAQ,CAAED,gBAAiB,eAC3BE,QAASvB,EACTwB,OAAQ,OAAO5J,SAAA,EAEfE,EAAAA,EAAAA,KAAC2J,EAAAA,IAAU,CAACzJ,SAAU,OAAQwJ,OAAQ,SACrCtB,GAAgBA,EAAawB,OAAS,IACrC5J,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHoG,SAAS,WACTwD,OAAO,MACPC,MAAM,MACNC,UAAU,oBACVC,GAAG,UACHC,aAAa,MACbrK,MAAM,MACNC,OAAO,MACPqK,EAAG,OAGPlK,EAAAA,EAAAA,KAACC,EAAAA,EAAI,QAGPX,EAAAA,EAAAA,MAAC6K,EAAAA,GAAK,CAAClC,OAAQA,EAAQE,QAASA,EAASiC,YAAU,EAACC,KAAM,KAAKvK,SAAA,EAC7DE,EAAAA,EAAAA,KAACsK,EAAAA,EAAY,CACXN,GAAG,iBACHO,eAAe,kCAEjBjL,EAAAA,EAAAA,MAACkL,EAAAA,EAAY,CAAA1K,SAAA,EACXE,EAAAA,EAAAA,KAACyK,EAAAA,EAAW,CAACC,UAAW,SAAS5K,SAAC,oBAClCE,EAAAA,EAAAA,KAAC2K,EAAAA,EAAgB,CAACjB,OAAQ,UAC1B1J,EAAAA,EAAAA,KAAC4K,EAAAA,EAAS,CACRpL,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZmL,QAAS,SACTC,KAAM,QAAQhL,SAEbsI,GAAgBA,EAAawB,OAAS,EACrCxB,EAAa2C,KAAI,SAACC,EAAMC,GAAK,OAC3B3L,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZE,MAAO,OAAOE,SAAA,EAGdR,EAAAA,EAAAA,MAACgK,EAAAA,EAAM,CAEL7J,eAAgB,gBAChBgK,QAAS,WAAF,OAAQd,EAAS,aAAD7D,OAAckG,EAAK3G,KAAM,EAChDqF,OAAQ,OAAO5J,SAAA,CAEdmL,EAAQ,EAAE,gBAAcD,EAAKhJ,OALzBgJ,EAAK3G,MAOZrE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CACL3J,WAAY,UACZ8J,QAAS,WAAF,OAAQR,EAAe+B,EAAK3G,IAAI,EACvCqF,OAAQ,OAAO5J,SAEd0I,GAAUxI,EAAAA,EAAAA,KAACkL,EAAAA,EAAO,CAACb,KAAM,UAAW,cAflCY,EAiBD,KAGRjL,EAAAA,EAAAA,KAAAqJ,EAAAA,SAAA,CAAAvJ,UACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAH,SAAC,iDAKZE,EAAAA,EAAAA,KAACmL,EAAAA,EAAW,CAACjL,SAAU,QAASkL,UAAW,YAAYtL,SAAC,sDAOlE,E,uDC1IauL,EAAe,SAAHxK,GAA6B,IAAvBoH,EAAMpH,EAANoH,OAAQE,EAAOtH,EAAPsH,QACrC1E,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnC6H,EAAO3H,EAAA,GAAE4H,EAAU5H,EAAA,GAC1B2E,GAA0B5E,EAAAA,EAAAA,UAAS,IAAG6E,GAAA3E,EAAAA,EAAAA,GAAA0E,EAAA,GAA/BpJ,EAAKqJ,EAAA,GAAEiD,EAAQjD,EAAA,GAChBI,GAAWC,EAAAA,EAAAA,MAWjB,OACEtJ,EAAAA,EAAAA,MAAC6K,EAAAA,GAAK,CAAClC,OAAQA,EAAQE,QAASA,EAASiC,YAAU,EAAAtK,SAAA,EACjDE,EAAAA,EAAAA,KAACsK,EAAAA,EAAY,KACbhL,EAAAA,EAAAA,MAACkL,EAAAA,EAAY,CAAA1K,SAAA,EACXE,EAAAA,EAAAA,KAACyK,EAAAA,EAAW,CAACC,UAAU,SAAQ5K,SAAC,+BAChCE,EAAAA,EAAAA,KAAC2K,EAAAA,EAAgB,KACjB3K,EAAAA,EAAAA,KAAC4K,EAAAA,EAAS,CAAA9K,UACRR,EAAAA,EAAAA,MAACmM,EAAAA,EAAM,CAACC,QAAS,EAAGC,MAAM,SAAQ7L,SAAA,EAChCE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAH,SAAC,yDACNE,EAAAA,EAAAA,KAAC4L,EAAAA,EAAM,CAAA9L,UACLR,EAAAA,EAAAA,MAACuM,EAAAA,EAAQ,CACP5M,MAAOqM,EACPQ,SAAU,SAAC7M,GACTsM,EAAWtM,GACXuM,EAAS,GACX,EACAO,KAAK,SACLC,WAAS,EAAAlM,SAAA,EAETE,EAAAA,EAAAA,KAACiM,EAAAA,EAAa,KACdjM,EAAAA,EAAAA,KAACiM,EAAAA,EAAa,KACdjM,EAAAA,EAAAA,KAACiM,EAAAA,EAAa,KACdjM,EAAAA,EAAAA,KAACiM,EAAAA,EAAa,KACdjM,EAAAA,EAAAA,KAACiM,EAAAA,EAAa,KACdjM,EAAAA,EAAAA,KAACiM,EAAAA,EAAa,SAGjB/M,IAASc,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACG,MAAM,UAASN,SAAEZ,UAGrCc,EAAAA,EAAAA,KAACmL,EAAAA,EAAW,CAAArL,UACVE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CAAC4C,YAAY,OAAOzC,QAxCX,WACN0C,WAAZb,GACF3C,EAAS,UACTR,KAEAqD,EAAS,qCAEb,EAiC6D5L,MAAM,OAAME,SAAC,+BAO5E,E,UC+PA,MAtSA,WACE,IAAAsM,GAAgD1D,EAAAA,EAAAA,KAAxClF,EAAI4I,EAAJ5I,KAAM6I,EAAYD,EAAZC,aAAcC,EAAeF,EAAfE,gBAC5BvE,GAAoCC,EAAAA,EAAAA,KAA5BC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAClBQ,GAAWC,EAAAA,EAAAA,MACjBnF,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlC8I,EAAK5I,EAAA,GAAE6I,EAAQ7I,EAAA,GAQhB8I,GAAeC,EAAAA,EAAAA,GAAmB,CAAEC,KAAM,OAAQC,GAAI,SAEtDC,GAAiBH,EAAAA,EAAAA,GAAmB,CACxCC,KAAM,SACNC,GAAI,YAGN,OACEtN,EAAAA,EAAAA,MAAA+J,EAAAA,SAAA,CAAAvJ,SAAA,EACER,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACFC,QAAS,OACTC,eAAe,gBACfC,WAAW,SACXsK,GAAG,QACH8C,EAAE,OACF5C,EAAG,EACH6C,cAAe,EACfC,UAAU,MACVC,OAAQ,GACRC,IAAK,EACL7G,SAAU,QAAQvG,SAAA,EAElBE,EAAAA,EAAAA,KAACmN,EAAAA,EAAK,CAACC,IAAKC,EAAOxN,OAAQ,MAC3BP,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAASI,SAAA,EACnEE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CACLC,gBAAiB,cACjBG,OAAQ,OACRlK,QAASiN,EACTa,WAAYT,EACZrD,OAAQ,CAAED,gBAAiB,cAAenJ,MAAO,aACjDqJ,QAAS,WACPd,EAAS,aACX,EAAE7I,SACH,iBAGDE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CACLiE,QAAQ,QACR/N,QAAS,CAAEmN,KAAM,OAAQC,GAAI,QAC7BlD,OAAQ,OACRD,QAASvB,EACTsB,OAAQ,CAAED,gBAAiB,cAAenJ,MAAO,aAAcN,UAE/DE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACuN,GAAI,EAAGC,WAAY,OAAO3N,SAAC,gBAInCE,EAAAA,EAAAA,KAAC0N,EAAQ,QAGXpO,EAAAA,EAAAA,MAAA,OAAAQ,SAAA,EACER,EAAAA,EAAAA,MAACqO,EAAAA,EAAI,CAAA7N,SAAA,EACHR,EAAAA,EAAAA,MAACsO,EAAAA,EAAU,CAAC1D,EAAG,EAAG7D,SAAS,WAAWqD,OAAQ,OAAO5J,SAAA,EACnDE,EAAAA,EAAAA,KAAC6N,EAAAA,EAAQ,CAAC3N,SAAS,MAAMgK,EAAG,EAAG4D,EAAG,IACjCzB,EAAazC,OAAS,IACrB5J,EAAAA,EAAAA,KAAC+N,EAAAA,EAAK,CACJR,QAAQ,SACRlH,SAAS,WACT6G,IAAI,OACJpD,MAAM,OACNP,gBAAiB,MACjB0D,OAAQ,EACRhD,aAAc,MACd7J,MAAM,QAAON,SAEZuM,EAAazC,aAIpBtK,EAAAA,EAAAA,MAAC0O,EAAAA,EAAQ,CAACC,GAAI,EAAEnO,SAAA,EACZuM,EAAazC,QAAU,kBACxByC,EAAatB,KAAI,SAACmD,GAAK,OACtBlO,EAAAA,EAAAA,KAACmO,EAAAA,EAAQ,CAEP1E,QAAS,WACP6C,EAAgBD,EAAa+B,QAAO,SAACC,GAAC,OAAKA,IAAMH,CAAK,IACxD,EACAhE,EAAG,IAAIpK,SAAA,oBAAAgF,OAGLoJ,EAAMI,OAASJ,EAAMI,OAAOtM,KAAO,QAAO,UAAA8C,OACnCoJ,EAAMI,OAASJ,EAAMI,OAAOC,UAAY,MAR5CL,EAAM7J,IASF,WAIjBrE,EAAAA,EAAAA,KAAC2N,EAAAA,EAAI,CAAA7N,UACHE,EAAAA,EAAAA,KAAC4N,EAAAA,EAAU,CACTY,GAAIlF,EAAAA,EACJU,GAAG,QACHN,OAAQ,OACRF,OAAQ,CAAED,gBAAiB,eAC3BE,QAASvB,EAAOpI,SAEE,SAAjB2M,GACCzM,EAAAA,EAAAA,KAACyO,EAAAA,EAAM,CACLpE,KAAK,KACLqE,OAAO,UACP1M,KAAU,OAAJwB,QAAI,IAAJA,OAAI,EAAJA,EAAMxB,KACZoL,IAAS,OAAJ5J,QAAI,IAAJA,OAAI,EAAJA,EAAMH,OAGbrD,EAAAA,EAAAA,KAAC2O,EAAAA,EAAU,CACTpF,gBAAiB,cACjBG,OAAQ,OACRkF,MAAM5O,EAAAA,EAAAA,KAAC6O,EAAAA,IAAe,iBAQlC7O,EAAAA,EAAAA,KAACqL,EAAY,CAACpD,OAAQsE,EAAOpE,QAAS,WAAF,OAAQqE,GAAS,EAAM,KAE3DlN,EAAAA,EAAAA,MAACwP,EAAAA,EAAM,CAACC,UAAU,OAAO5G,QAASA,EAASF,OAAQA,EAAOnI,SAAA,EACxDE,EAAAA,EAAAA,KAACgP,EAAAA,EAAa,CACZhF,GAAG,iBACHO,eAAe,kCAEjBjL,EAAAA,EAAAA,MAAC2P,EAAAA,EAAa,CAAAnP,SAAA,EACZR,EAAAA,EAAAA,MAAC4P,EAAAA,EAAY,CACXC,kBAAkB,MAClB3P,QAAS,OACTC,eAAgB,gBAAgBK,SAAA,CACjC,aAECE,EAAAA,EAAAA,KAACoP,EAAAA,EAAW,CAAC3F,QAAStB,EAASuB,OAAQ,aAEzCpK,EAAAA,EAAAA,MAAC+P,EAAAA,EAAU,CACT7P,QAAS,OACTqL,QAAS,SACTpL,eAAgB,QAChBG,MAAO,OACP0P,QAAS,EAAExP,SAAA,EAEXR,EAAAA,EAAAA,MAACgK,EAAAA,EAAM,CACL9J,QAAS,OACTC,eAAgB,OAChBC,WAAY,SACZgK,OAAQ,OACRxJ,SAAU,SACVP,WAAY,QACZ6J,OAAQ,CAAED,gBAAiB,cAAenJ,MAAO,SACjDqJ,QAAS,WAAF,OAAQd,EAAS,WAAW,EAAC7I,SAAA,EAEpCE,EAAAA,EAAAA,KAACyO,EAAAA,EAAM,CACLpE,KAAK,KACLqE,OAAO,UACP1M,KAAU,OAAJwB,QAAI,IAAJA,OAAI,EAAJA,EAAMxB,KACZoL,IAAS,OAAJ5J,QAAI,IAAJA,OAAI,EAAJA,EAAMH,OAEbrD,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACiK,EAAG,EAAG4D,EAAG,EAAEhO,SAAC,gBAIpBE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CACL7J,eAAgB,OAChBiK,OAAQ,OACR/J,WAAY,QACZ6J,OAAQ,CACND,gBAAiB,cACjBnJ,MAAO,kBAETqJ,QAAS,WACPd,EAAS,cACTR,GACF,EAAErI,SACH,iBAGDE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CACL7J,eAAgB,QAChBE,WAAY,QACZ+J,OAAQ,OACRF,OAAQ,CACND,gBAAiB,cACjBnJ,MAAO,kBAETqJ,QAAS,WACPd,EAAS,UACTR,GACF,EAAErI,SACH,WAGDE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CACL7J,eAAgB,OAChBE,WAAY,QACZ+J,OAAQ,OACRF,OAAQ,CACND,gBAAiB,cACjBnJ,MAAO,kBAETmP,aAAiB,OAAJ/L,QAAI,IAAJA,GAAAA,EAAMN,WACnBuG,QAAS,WACPd,EAAS,aACTR,GACF,EAAErI,SACH,sBAGDE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CACL3J,WAAY,QACZF,eAAgB,OAChBiK,OAAQ,OACRF,OAAQ,CACND,gBAAiB,cACjBnJ,MAAO,kBAETqJ,QAAS,WACPd,EAAS,aACTR,GACF,EAAErI,SACH,oBAGDE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CACL3J,WAAY,QACZF,eAAgB,OAChBiK,OAAQ,OACRF,OAAQ,CACND,gBAAiB,cACjBnJ,MAAO,kBAETqJ,QAAS,WACPd,EAAS,kBACTR,GACF,EAAErI,SACH,gCAGDR,EAAAA,EAAAA,MAACgK,EAAAA,EAAM,CACL3J,WAAY,QACZF,eAAgB,OAChBiK,OAAQ,OACR6F,YAAU,EACV/F,OAAQ,CACND,gBAAiB,cACjBnJ,MAAO,kBAETqJ,QAAS,WACPd,EAAS,WACTR,GACF,EAAErI,SAAA,EAEFE,EAAAA,EAAAA,KAACwP,EAAAA,IAAQ,IAAG,oBAEdlQ,EAAAA,EAAAA,MAACgK,EAAAA,EAAM,CACL3J,WAAY,QACZF,eAAgB,OAChBiK,OAAQ,OACRF,OAAQ,CACND,gBAAiB,cACjBnJ,MAAO,kBAETqJ,QAAS,WACP+C,GAAS,GACTrE,GACF,EAAErI,SAAA,EAEFE,EAAAA,EAAAA,KAACyP,EAAAA,IAAW,IAAG,kBAEjBnQ,EAAAA,EAAAA,MAACgK,EAAAA,EAAM,CACL3J,WAAY,QACZF,eAAgB,OAChBiK,OAAQ,OACRF,OAAQ,CACND,gBAAiB,cACjBnJ,MAAO,kBAETqJ,QArRU,WACpBiG,aAAaC,WAAW,YACxBrD,EAAgB,IAChB3D,EAAS,IACX,EAiRmC7I,SAAA,EAEvBE,EAAAA,EAAAA,KAAC4P,EAAAA,IAAc,IAAG,+BAOhC,C,kQC9TMC,EAAoBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sJAU9BC,EAAeJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iOAazBG,GAAoBC,EAAAA,EAAAA,IAASC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iHAKtB,SAAApP,GAAQ,OAAuB,IAAvBA,EAAL0P,MAAqB,IAAS,IAIxCC,GAAoBH,EAAAA,EAAAA,IAASI,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,qKAS7BS,EAAgBZ,EAAAA,GAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2UAarB,SAAA/G,GAAQ,OAAqB,IAArBA,EAALqH,MAAqB,EAAO,GAC3BH,EACTI,GA2DN,EAxDiB,SAAHI,GAAsB,IAAhBC,EAAQD,EAARC,SA0BZN,EAbW,CACf,QACA,WACA,SACA,SACA,MACA,SACA,QACA,OACA,QACA,SAGqBO,QAAQD,GAE/B,OACEvR,EAAAA,EAAAA,MAACuQ,EAAiB,CAAA/P,SAAA,CA5BG,CACrB,QAAQ,OAAD,kEA4BWiL,KAAI,SAACgG,EAAM9F,GAAK,OAC9BjL,EAAAA,EAAAA,KAACkQ,EAAY,CAAApQ,UACXE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACH+Q,WAAY,EACZC,WAAY,CAAEtE,KAAM,KAAMC,GAAI,MAC9B1M,SAAU,CAAEyM,KAAM,OAAQC,GAAI,MAC9BlC,UAAU,SAAQ5K,SAEjBmL,EAAQ,GACPjL,EAAAA,EAAAA,KAACkR,EAAAA,IAAW,CAACC,MAAO,CAAE/Q,MAAO2Q,EAAM7Q,SAAU,YAE7C6Q,KAVa9F,EAaJ,KAEjB3L,EAAAA,EAAAA,MAACoR,EAAa,CAACH,MAAOA,EAAMzQ,SAAA,CACzB,KACDR,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACyK,UAAW,SAAUxK,SAAU,QAASgK,EAAG,EAAEpK,SAAA,CAClC,IAAbyQ,EAAQ,GAAQ,OACZ,SAIhB,E,+MC3Fe,SAASa,EAAQvQ,GAAc,IAAXwQ,EAAMxQ,EAANwQ,OAC3B5L,GAAQ6L,EAAAA,EAAAA,KACdlF,GAA0B1D,EAAAA,EAAAA,KAAlBlF,EAAI4I,EAAJ5I,KAAM+N,EAAOnF,EAAPmF,QACd9N,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhC+N,EAAI7N,EAAA,GAAE8N,EAAO9N,EAAA,GACpB2E,GAAsC5E,EAAAA,EAAAA,UAAS,IAAG6E,GAAA3E,EAAAA,EAAAA,GAAA0E,EAAA,GAA3C9C,EAAW+C,EAAA,GAAEmJ,EAAcnJ,EAAA,GAClCR,GAAoCC,EAAAA,EAAAA,KAA5BC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAClBtE,GAASN,EAAAA,EAAAA,IAAqB,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMU,QAEtCD,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAsBL,OArBAA,EAAOY,GAAG,aAAa,SAACkN,GACtBlM,EAAM,CACJS,MAAOyL,EACPC,YAAa,4BACbzL,OAAQ,OACRC,SAAU,IACVC,SAAU,UAEd,IACAxC,EAAOY,GAAG,cAAa,eAAAyE,GAAApI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAO4Q,GAAM,OAAA9Q,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACpCkQ,GAAQ,SAACnQ,GAAI,OAAA0Q,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW1Q,GAAI,IAAE2P,KAAMc,EAAOd,MAAI,IAE/CtL,EAAM,CACJS,MAAO,uBACP0L,YAAY,UAAD9M,OAAY+M,EAAOd,MAC9B5K,OAAQ,OACRC,SAAU,IACVC,SAAU,WACT,wBAAAlF,EAAAI,OAAA,GAAAN,EAAA,KACJ,gBAAAO,GAAA,OAAA0H,EAAAzH,MAAA,KAAAC,UAAE,CAAF,CAVsB,IAYhB,WACLmC,EAAOkO,IAAI,eACXlO,EAAOkO,IAAI,YACb,CACF,GAAG,CAACR,EAAS9L,EAAO5B,IAEpB,IAAMmO,EAAc,eAAApB,GAAA9P,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsE,IAAA,IAAAI,EAAAqD,EAAA9C,EAAA,OAAAlF,EAAAA,EAAAA,KAAAG,MAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,UAChBmC,EAAK,CAADoC,EAAAvE,KAAA,eAAAuE,EAAAtE,OAAA,iBAQN,OARMsE,EAAAxE,KAAA,EAIDsE,EAAS,CACbG,QAAS,CACPC,cAAc,UAADhB,OAAYtB,EAAKU,SAEjC0B,EAAAvE,KAAA,EAEsBb,EAAAA,EAAMwI,IAAI,mBAAoBtD,GAAQ,KAAD,EAAAqD,EAAAnD,EAAAI,KAApDC,EAAI8C,EAAJ9C,KACRsL,GAAQ,SAACnQ,GAAI,OAAA0Q,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW1Q,GAAI,IAAE2P,KAAM9K,EAAK8K,MAAI,IAAKnL,EAAAvE,KAAA,iBAAAuE,EAAAxE,KAAA,GAAAwE,EAAAU,GAAAV,EAAA,SAE9CA,EAAAU,GAAM3F,UAAsC,MAA1BiF,EAAAU,GAAM3F,SAASwF,OACnCV,EAAM,CACJS,MAAO,iBACP0L,YAAahM,EAAAU,GAAM3F,SAASsF,KAAKnD,QACjCqD,OAAQ,OACRC,SAAU,IACV6L,YAAY,EACZ5L,SAAU,YAIZjH,QAAQF,MAAM,qBAAoB0G,EAAAU,IAClCb,EAAM,CACJS,MAAO,qBACP0L,YAAa,0BACbzL,OAAQ,QACRC,SAAU,IACV6L,YAAY,EACZ5L,SAAU,YAEb,yBAAAT,EAAArE,OAAA,GAAA+D,EAAA,mBAEJ,kBApCmB,OAAAsL,EAAAnP,MAAA,KAAAC,UAAA,KAuEpB,OACEpC,EAAAA,EAAAA,MAAA+J,EAAAA,SAAA,CAAAvJ,SAAA,EACEE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CACLW,aAAc,GACd/J,SAAU,QACVP,WAAY,UACZuS,UAAW,QACX1I,OAAQ,CAAEpJ,MAAO,SACjB0N,EAAG,EACHrE,QA1CoB,WACxB,IAAM0I,EAAyB3O,GAAQA,EAAK4O,aAAaxI,OACnDyI,EAAchB,EAAOiB,GAAK,EAI7B9O,GAAsB,UAAdA,EAAKuN,MAAoC,IAAhBsB,GAClCF,EAAyB,IAAME,EAAc,EAI7CnK,IACS1E,GAAQA,EAAKuN,OAASM,EAAOnL,MACtCT,EAAM,CACJS,MAAO,2BACP0L,YAAa,2CACbzL,OAAQ,UACRC,SAAU,IACV6L,YAAY,IAIdxM,EAAM,CACJS,MAAO,qBACP0L,YACE,4DACFzL,OAAQ,UACRC,SAAU,IACV6L,YAAY,GAGlB,EAWiCnS,SAC5B,YAGDR,EAAAA,EAAAA,MAAC6K,EAAAA,GAAK,CACJE,KAAK,KACLlC,QAAS,WACPsJ,GAAQ,GACRtJ,GACF,EACAF,OAAQA,EACRmC,YAAU,EAAAtK,SAAA,EAEVE,EAAAA,EAAAA,KAACsK,EAAAA,EAAY,CACXN,GAAG,iBACHO,eAAe,kCAEjBjL,EAAAA,EAAAA,MAACkL,EAAAA,EAAY,CACXhL,QAAQ,OACRO,cAAc,SACdN,eAAe,SACfG,MAAO,OAAOE,SAAA,EAEdE,EAAAA,EAAAA,KAACyK,EAAAA,EAAW,CAACvK,SAAS,OAAOqS,WAAW,YAAWzS,UACjDR,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CACHyK,UAAW,SACXxK,SAAU,KACV+Q,WAAY,IACZ/G,EAAG,EACHsD,GAAI,EACJpN,MAAO,YACPoS,QAAS,OAAO1S,SAAA,CACjB,uBACsBuR,EAAOnL,YAGhClG,EAAAA,EAAAA,KAAC2K,EAAAA,EAAgB,KACjBrL,EAAAA,EAAAA,MAACsL,EAAAA,EAAS,CAAA9K,SAAA,EACRE,EAAAA,EAAAA,KAACyS,EAAAA,GAAoB,CACnBC,QAAS,CACPC,SACE,oFACF7S,UAEFE,EAAAA,EAAAA,KAAC4S,EAAAA,GAAa,CACZC,YAAa,SAAC5M,EAAM6M,GAElB,OAAOA,EAAQC,MAAMtS,OAAO,CAC1BuS,eAAgB,CACd,CACEzN,OAAQ,CACN0N,cAAe,MACfhU,MANO,IAMOiU,QAAQ,OAKhC,EACAC,UAAS,eAAAC,GAAAtS,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA4F,EAAOX,EAAM6M,GAAO,OAAA/R,EAAAA,EAAAA,KAAAG,MAAA,SAAA4F,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAzF,MAAA,cAAAyF,EAAAzF,KAAA,EACvB2Q,IAAiB,KAAD,SAAAlL,EAAAxF,OAAA,SACfwR,EAAQC,MAAMM,UAAUC,MAAK,SAAUC,GAC5C9N,EAAM,CACJS,MAAO,UACP0L,YAAa3L,EAAKuN,eAClBrN,OAAQ,OACRC,SAAU,IACV6L,YAAY,EACZ5L,SAAU,UAEd,KAAE,wBAAAS,EAAAvF,OAAA,GAAAqF,EAAA,KACH,gBAAA6M,EAAAxO,GAAA,OAAAmO,EAAA3R,MAAA,KAAAC,UAAA,EAZQ,GAaTgS,SAAU,WACRjO,EAAM,CACJS,MAAO,YACP0L,YAAa,4BACbzL,OAAQ,OACR8L,YAAY,EACZ5L,SAAU,UAEd,OAGJ/G,EAAAA,EAAAA,MAACgK,EAAAA,EAAM,CACLpJ,SAAU,QACVN,MAAO,OACPoK,IAAI2J,EAAAA,EAAAA,IAAkB,YAAa,aACnClK,QAAS,WACPgI,GAAQ,EACV,EACAvH,EAAG,EAAEpK,SAAA,EAELE,EAAAA,EAAAA,KAACmN,EAAAA,EAAK,CACJtN,OAAQ,EACRD,MAAO,OACPwN,IACE,iFAEFwG,IAAK,GACLpL,QAAQ,SACP,IAAI,mBAGRgJ,IACClS,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACuO,EAAG,EAAEhO,SAAA,EACRE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHyK,UAAW,SACXjL,eAAgB,SAChBS,SAAU,MAAMJ,SACjB,mCAGDE,EAAAA,EAAAA,KAAC6T,EAAAA,EAAK,CACJ3T,SAAU,QACVE,MAAO,YACP6Q,WAAY,OACZ6C,YAAY,qBACZpJ,UAAW,SACXqB,KAAK,SACLD,SAAU,SAACiI,GAAC,OAAKrC,EAAeqC,EAAEC,OAAO/U,MAAM,EAC/CA,MAAOuG,EACPyO,UAAW,GACXC,UAAW,MAEblU,EAAAA,EAAAA,KAACmU,EAAAA,EAAO,CAACjK,EAAG,KACZlK,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CACL1J,MAAO,OACP6J,QAAS,YACPzE,EAAAA,EAAAA,IAAiB,OAAQQ,EAAahC,EAAMiC,GAC5CgM,GAAQ,GACRhM,EAAM,CACJS,MAAO,0BACPC,OAAQ,UACR8L,YAAY,EACZ5L,SAAU,SACVD,SAAU,KAEd,EACAmJ,WAAY/J,EAAYoE,SAAWwK,SAAS,IAC5ClI,YAAY,QAAOpM,SACpB,aAGDE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACyK,UAAW,SAAUjL,eAAgB,SAASK,SAAC,oCAM3DE,EAAAA,EAAAA,KAACmL,EAAAA,EAAW,CAAC3L,QAAQ,OAAMM,SAAC,yCAKtC,CC7RA,IAkGA,EAlGmB,SAAHe,GAA2B,IAArBwT,EAAOxT,EAAPwT,QAAS7Q,EAAI3C,EAAJ2C,KACvB8Q,EAAiB,SAACpO,EAAO5C,GAC7B,IAAMiR,EAAIC,SAASC,cAAc,KACjCF,EAAElU,KAAOiD,EACTiR,EAAEG,SAAQ,GAAA5P,OAAMoB,EAAK,uBACrBqO,EAAEI,OACJ,EAEMC,EAAiB,CAAC,UAAD,wDAUvB,OACEtV,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,QAAS,OACTqL,QAAS,SACTnL,WAAY,SACZD,eAAgB,SAChBG,MAAM,OACNsK,EAAG,EACHX,gBAAiB,QAAQzJ,SAAA,EAEzBE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,SAAS,OAAO+Q,WAAW,SAAQnR,SAAC,gBAGzCuU,EAAQtJ,KAAI,SAACsG,EAAQpG,GAAK,OACzB3L,EAAAA,EAAAA,MAACuV,EAAAA,EAAI,CAEHrV,QAAS,OACTE,WAAW,SACXD,eAAe,gBACfqO,EAAG,EACH5D,EAAG,CAAEyC,KAAM,IAAKC,GAAI,KACpBhN,MAAO,CAAE+M,KAAM,MAAOC,GAAI,OAC1BlD,OAAQ,MACRO,aAAc,EAAEnK,SAAA,EAEhBR,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAO,SAAA,EACFR,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACW,SAAU,SAAU+Q,WAAY,SAASnR,SAAA,EAC5CE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAH,SAAEuR,EAAOnL,SACdlG,EAAAA,EAAAA,KAACkR,EAAAA,IAAW,CACVC,MAAO,CAAE/Q,MAAOwU,EAAe3J,GAAQ/K,SAAU,aAGpDmR,EAAOnL,SAAc,OAAJ1C,QAAI,IAAJA,OAAI,EAAJA,EAAMuN,QACtB/Q,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CACHE,KAAI,YAAAyE,OAAcuM,EAAOiB,IACzBnB,MAAO,CAAE2D,eAAgB,OAAQ1U,MAAO,WACxC8J,EAAG,EACH4D,EAAG,EAAEhO,SACN,gBAMJ0D,GAAQA,EAAK4O,cAAgB5O,EAAK4O,aAAanH,IAC9CjL,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CACLG,QAAS6K,EAAejD,EAAOnL,MAAO1C,EAAK4O,aAAanH,IACxDhB,aAAc,GACd/J,SAAU,QACVwJ,OAAQ,OAAO5J,SAChB,0BAIDR,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,QAAS,OACTqL,QAAS,SACTpL,eAAgB,gBAChBC,WAAY,SAASI,SAAA,EAErBE,EAAAA,EAAAA,KAACoR,EAAQ,CAACC,OAAQA,KAClBrR,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,SAAU,KACV+Q,WAAY,IACZjH,IAAI2J,EAAAA,EAAAA,IAAkB,WAAY,aAClCzJ,EAAG,EACHsD,GAAI,EACJpN,MAAO,YACPoS,QAAS,OAAO1S,SACjB,qBAtDAuR,EAAOiB,GA2DP,MAIf,E,6CC1DA,OA1CA,SAAgBzR,GAAS,IAADkU,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAALxH,EAACjN,EAADiN,EACjB1B,GAA2C1D,EAAAA,EAAAA,KAAnClF,EAAI4I,EAAJ5I,KAAM+R,EAAenJ,EAAfmJ,gBAAiBC,EAAOpJ,EAAPoJ,QACzBC,EAAU,2BACVrR,EAAa,OAAJZ,QAAI,IAAJA,OAAI,EAAJA,EAAMa,IAQrB,OACErE,EAAAA,EAAAA,KAAAqJ,EAAAA,SAAA,CAAAvJ,UACER,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,QAAS,OACTqL,QAAS,SACTxE,SAAU,WACVnG,SAAU,QACVuJ,QAdc,WAAO,IAADiM,EACMC,EAAAC,GAAlB,QAARF,EAAA5H,EAAEQ,cAAM,IAAAoH,OAAA,EAARA,EAAUrR,OAAQD,IACpBmR,EAAwB,QAATI,EAAC7H,EAAEQ,cAAM,IAAAqH,OAAA,EAARA,EAAUtR,KAC1BmR,EAAgB,QAATI,EAAC9H,EAAEQ,cAAM,IAAAsH,OAAA,EAARA,EAAU5T,MAEtB,EAS2BlC,SAAA,EAErBR,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACW,SAAU,UAAWkL,UAAW,YAAaV,UAAW,MAAM5K,SAAA,EAC1D,QAARiV,EAAAjH,EAAEQ,cAAM,IAAAyG,OAAA,EAARA,EAAU1Q,OAAQoR,GAAWrR,IAAWqR,IAAWnW,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAS,OAAQC,eAAgB,WAAYC,WAAY,SAAUE,MAAO,OAAOE,SAAA,CAAC,QAAM,QAASR,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAS,OAAOM,SAAA,EAACE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,SAAU,OAAOJ,SAAC,SAAUE,EAAAA,EAAAA,KAAC6V,GAAAA,IAAY,CAAC1E,MAAO,CAAC/Q,MAAO,iBACtO,QAAR4U,EAAAlH,EAAEQ,cAAM,IAAA0G,OAAA,EAARA,EAAU3Q,OAAQD,IAAqB,QAAX6Q,EAAAnH,EAAEgI,iBAAS,IAAAb,OAAA,EAAXA,EAAa5Q,OAAQoR,IAAWnW,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAS,OAAOM,SAAA,CAAE,UAAQ,OAAS,OAAGE,EAAAA,EAAAA,KAAC6V,GAAAA,IAAY,CAAC1E,MAAO,CAAC/Q,MAAO,cAC5H,QAAR8U,EAAApH,EAAEQ,cAAM,IAAA4G,OAAA,EAARA,EAAU7Q,OAAQoR,IAAWnW,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAAAH,SAAA,CAAE,OAAK,OAAkB,QAAVqV,EAAErH,EAAEQ,cAAM,IAAA6G,OAAA,EAARA,EAAUnT,SACrD,QAARoT,EAAAtH,EAAEQ,cAAM,IAAA8G,OAAA,EAARA,EAAU/Q,OAAQoR,IAAWnW,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAAAH,SAAA,CAAE,UAAQ,OAAqB,QAAbuV,EAAEvH,EAAEgI,iBAAS,IAAAT,OAAA,EAAXA,EAAarT,WAGnE8L,EAAEiI,SAEHzW,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACT,QAAS,OAAQkL,UAAU,QAAQoD,EAAG,EAAG5D,EAAG,EAAGhK,SAAU,MAAMJ,SAAA,EAC1D,QAARwV,EAAAxH,EAAEQ,cAAM,IAAAgH,OAAA,EAARA,EAAUjR,OAAQb,EAAKa,KACtBrE,EAAAA,EAAAA,KAACgW,EAAAA,IAAW,IAEZ,IAEDC,EAAAA,EAAAA,GAAkBnI,EAAEoI,kBAK/B,ECFA,GAzCuB,SAAHrV,GAAsB,IAAhBsV,EAAQtV,EAARsV,SAChB3S,GAASkF,EAAAA,EAAAA,KAATlF,KACR,OACExD,EAAAA,EAAAA,KAAA,OAAKmR,MAAO,CAAEvR,MAAO,OAAQC,OAAQ,MAAOuW,UAAW,QAAStW,UAC9DE,EAAAA,EAAAA,KAACT,EAAAA,EAAG,CACFC,QAAQ,OACRC,eAAe,QACfC,WAAW,SACXmL,QAAQ,SACRlL,WAAW,QACX0W,KAAM,QACNnM,EAAG,EACHoM,GAAI,KACJ1W,MAAM,OAAME,SAEXqW,EAASpL,KAAI,SAAC+C,EAAG7C,GAAW,IAADyK,EAC1B,IAAK5H,IAAMtK,EACT,OAAO,KAGT,IAAM+S,GAAwB,QAARb,EAAA5H,EAAEQ,cAAM,IAAAoH,OAAA,EAARA,EAAUrR,OAAQb,EAAKa,IAE7C,OACErE,EAAAA,EAAAA,KAACT,EAAAA,EAAG,CACFyK,GAAIuM,EAAgB,UAAY,UAChCtM,aAAa,OACbC,EAAE,WACFoM,GAAI,IACJE,KAAK,MACLC,UAAWF,EAAgB,WAAa,aAAazW,UAGrDE,EAAAA,EAAAA,KAAC0W,GAAO,CAAC5I,EAAGA,KAFP7C,EAKX,OAIR,E,wBCgUA,GA3VqB,SAAHpK,GAAqB,IAAfsH,EAAOtH,EAAPsH,QAChB1C,GAAQ6L,EAAAA,EAAAA,KACd7N,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCkT,EAAUhT,EAAA,GAAEiT,EAAajT,EAAA,GAChC2E,GAAsC5E,EAAAA,EAAAA,UAAS,CAC7C,MACA,QACA,mBACA,mBACA6E,GAAA3E,EAAAA,EAAAA,GAAA0E,EAAA,GALKuO,EAAWtO,EAAA,GAAEuO,EAAcvO,EAAA,GAMlCwO,GAAoDrT,EAAAA,EAAAA,UAAS,MAAKsT,GAAApT,EAAAA,EAAAA,GAAAmT,EAAA,GAA3DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAChDG,GAA4BzT,EAAAA,EAAAA,UAAS,MAAK0T,GAAAxT,EAAAA,EAAAA,GAAAuT,EAAA,GAAnC7I,EAAM8I,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAA8B5T,EAAAA,EAAAA,YAAU6T,GAAA3T,EAAAA,EAAAA,GAAA0T,EAAA,GAAjC9O,EAAO+O,EAAA,GAAE9O,EAAU8O,EAAA,GAC1BC,GAAwB9T,EAAAA,EAAAA,WAAS,GAAM+T,GAAA7T,EAAAA,EAAAA,GAAA4T,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA8BlU,EAAAA,EAAAA,WAAS,GAAMmU,GAAAjU,EAAAA,EAAAA,GAAAgU,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BzL,GAUI1D,EAAAA,EAAAA,KATFlF,EAAI4I,EAAJ5I,KACAwU,EAAY5L,EAAZ4L,aACAzC,EAAenJ,EAAfmJ,gBACA0C,EAAI7L,EAAJ6L,KACAzC,EAAOpJ,EAAPoJ,QACAW,EAAQ/J,EAAR+J,SACA+B,GAAW9L,EAAX8L,YACAC,GAAQ/L,EAAR+L,SACAC,GAAQhM,EAARgM,SAEIzP,IAAWC,EAAAA,GAAAA,MACX6M,GAAU,2BACV5R,IAASN,EAAAA,EAAAA,IAAqB,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMU,QAEtCD,EAAAA,EAAAA,YAAU,aAEF,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMa,OAAQoR,IACV,OAAJjS,QAAI,IAAJA,GAAAA,EAAM6U,QACE,OAARD,SAAQ,IAARA,QAAQ,EAARA,GAAUE,gBAAgBjU,QAAY,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMa,OAChC,OAAR8T,SAAQ,IAARA,QAAQ,EAARA,GAAUI,cAAclU,QAAY,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMa,OAEtCsT,GAAQ,EAEZ,GAAG,CAACnU,EAAM2U,GAAUC,GAAUT,KAE9B1T,EAAAA,EAAAA,YAAU,gBACeuU,IAAnBhV,EAAKN,WACP4T,GAAe,SAAC2B,GAAW,OACzBA,EAAYrK,QAAO,SAACsK,GAAM,MAAgB,qBAAXA,CAA6B,GAAC,GAGnE,GAAG,CAAClV,EAAKN,aAETe,EAAAA,EAAAA,YAAU,WACR,MAA2B,UAAvBgT,GAAuC,OAAJzT,QAAI,IAAJA,GAAAA,EAAMmV,cAWX,qBAAvB1B,GAA8CmB,GAWvB,mBAAvBnB,GAA4CkB,QAAhD,GACLjB,EAAsB,MACtBvO,GAAS,kBACTlD,EAAM,CACJS,MAAO,4CACP0L,YAAa,oBACbzL,OAAQ,OACRC,SAAU,IACVC,SAAU,kBAlBZ6Q,EAAsB,MACtBvO,GAAS,kBACTlD,EAAM,CACJS,MAAO,8CACP0L,YAAa,oBACbzL,OAAQ,OACRC,SAAU,IACVC,SAAU,kBAlBZsC,GAAS,UACTlD,EAAM,CACJS,MAAO,2BACP0L,YAAa,0CACbzL,OAAQ,OACRC,SAAU,IACVC,SAAU,qBAEZ6Q,EAAsB,MAyB1B,GAAG,CAACD,EAAoBtO,GAAUnF,EAAM2U,GAAUC,GAAU3S,IAE5D,IAAMmT,IAAgB9P,EAAAA,EAAAA,cAAWhI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAyE,EAAAqD,EAAA9C,EAAA,OAAAlF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC3BmC,EAAK,CAADrC,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBASU,OATVH,EAAAC,KAAA,EAGDsE,EAAS,CACbG,QAAS,CACPC,cAAc,UAADhB,OAAYtB,EAAKU,SAIlCuE,GAAW,GAAMtH,EAAAE,KAAA,EAEMb,EAAAA,EAAMwI,IAAI,gBAADlE,OAAiBtB,EAAKa,KAAOqB,GAAQ,KAAD,EAAAqD,EAAA5H,EAAA6E,KAA5DC,EAAI8C,EAAJ9C,KAERiS,GAAYjS,GAEZwC,GAAW,GAAOtH,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAmF,GAAAnF,EAAA,SAElB/B,QAAQsF,IAAGvD,EAAAmF,IAEXmC,GAAW,GACXhD,EAAM,CACJS,MAAO,iBACP0L,YAAa,8BACbzL,OAAQ,QACRC,SAAU,IACV6L,YAAY,EACZ5L,SAAU,WACT,yBAAAlF,EAAAI,OAAA,GAAAN,EAAA,mBAEJ,CAACwE,EAAOjC,KAEXS,EAAAA,EAAAA,YAAU,WACR2U,IACF,GAAG,CAACA,MAEJ3U,EAAAA,EAAAA,YAAU,WACmB,UAAvBgT,EACFI,EAAU7T,EAAKmV,eACiB,QAAvB1B,GAAgCzT,EACzC6T,EAAU7T,EAAKqV,KACiB,qBAAvB5B,GAA6CmB,GACtDf,EAAUe,GAASE,gBAAgBjU,KACH,mBAAvB4S,GAA2CkB,IACpDd,EAAUc,GAASI,cAAclU,IAErC,GAAG,CAAC4S,EAAoBkB,GAAUC,GAAU5U,EAAM6T,KAElDpT,EAAAA,EAAAA,YAAU,WACJ+T,GACFX,EAAUW,EAEd,GAAG,CAACA,EAAcX,IAElB,IAAMyB,GAAW,eAAAlI,GAAA9P,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsE,EAAOyT,GAAK,IAAA3U,EAAAsB,EAAAC,EAAAM,EAAA+S,EAAA,OAAAjY,EAAAA,EAAAA,KAAAG,MAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,YACzB0X,GAAwB,UAAfA,EAAMhN,MAAsBgN,GAAuB,UAAdA,EAAM/Z,KAAgB,CAAA4G,EAAAvE,KAAA,SAE/C,GADxB0W,GAAW,GACL3T,EAASZ,EAAKa,IAEf4S,GAAuBS,EAAI,CAAA9R,EAAAvE,KAAA,QASZ,OARlBoE,EAAM,CACJS,MAAO,qBACP0L,YAAa,4CACbzL,OAAQ,OACRC,SAAU,IACV6L,YAAY,EACZ5L,SAAU,WAEZ0R,GAAW,GAAOnS,EAAAtE,OAAA,qBAIhBoW,GAASM,GAAgB5T,IAAWqR,GAAO,CAAA7P,EAAAvE,KAAA,SAS3B,OARlBoE,EAAM,CACJS,MAAO,sBACP0L,YAAa,6CACbzL,OAAQ,OACRC,SAAU,IACV6L,YAAY,EACZ5L,SAAU,WAEZ0R,GAAW,GAAOnS,EAAAtE,OAAA,kBAYlB,OAZkBsE,EAAAxE,KAAA,GAKZsE,EAAS,CACbG,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADhB,OAAYtB,EAAKU,SAIlC0B,EAAAvE,KAAA,GACuBb,EAAAA,EAAMuF,KAC3B,eACA,CAAEuI,OAAQA,EAAQyH,QAASY,EAAYvS,OAAAA,GACvCsB,GACA,KAAD,GAAAC,EAAAC,EAAAI,KAJOC,EAAIN,EAAJM,KAOJ7B,IAAWqR,IAEPuD,EAAgB,CACpBjD,QAASY,EAAWsC,OACpB/C,UAAW,IAAIjP,KACf6O,UAAW,CAAEoD,IAAK,KAAM7U,IAAK,2BAA4BrC,KAAM,YAAaI,UAAW,SAAUC,MAAO,2BACxGiM,OAAQ,CAAEjK,IAAK,2BAA4BrC,KAAM,IAAKI,UAAW,IAAKC,MAAO,uBAC7E8W,UAAW,2BACXC,IAAK,EACL/U,IAAK,4BAIP6T,IAAY,SAAAmB,GAAY,SAAAvU,QAAAwU,EAAAA,EAAAA,GAAQD,GAAY,CAAEL,GAAgB,MAG9Dd,IAAY,SAAAmB,GAAY,SAAAvU,QAAAwU,EAAAA,EAAAA,GAAQD,GAAY,CAAEpT,GAAO,IACrDpC,GAAO0V,KAAK,cAAetT,IAI7B8R,GAAW,GACXnB,EAAc,IAAIhR,EAAAvE,KAAA,iBAAAuE,EAAAxE,KAAA,GAAAwE,EAAAU,GAAAV,EAAA,UAElBxG,QAAQF,MAAM,0BAAyB0G,EAAAU,IACvCyR,GAAW,GACXtS,EAAM,CACJS,MAAO,6BACP0L,YAAa,mCACbzL,OAAQ,QACRC,SAAU,IACV6L,YAAY,EACZ5L,SAAU,WACT,yBAAAT,EAAArE,OAAA,GAAA+D,EAAA,oBAGR,gBAnFgB9D,GAAA,OAAAoP,EAAAnP,MAAA,KAAAC,UAAA,KAwFjB,OACEpC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,QAAS,OACTO,cAAe,SACfsG,SAAS,QACTwD,OAAO,IACPC,MAAM,IACNjK,OAAQ,OACRD,MAAO,CAAC+M,KAAM,OAAQC,GAAI,OAC1B3C,aAAc,EACd+C,UAAU,UACV9C,EAAE,IACFsI,QAAQ,KACRxI,GAAG,QACHiD,OAAQ,GAAGnN,SAAA,EAEXE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CAACY,EAAG,EAAGT,QAnBM,WACtBtB,GACF,EAiB4CuB,OAAQ,OAAO5J,SAAC,OAGxDR,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACF2K,EAAG,EACHgD,IAAI,IACJsM,KAAK,IACL3Z,OAAO,MACPL,QAAQ,OACRqL,QAAQ,SACRpL,eAAe,SACfC,WAAY,SACZE,MAAO,OACPD,WAAY,aAAaG,SAAA,EAGvBmX,IAAuBS,IACvBpY,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAS,OAAQqL,QAAS,SAAUb,GAAG,cAAalK,SAAA,EACvDE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAH,SAAC,uCACL+W,EAAY9L,KAAI,SAAC2N,GAAM,OACtB1Y,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CAELU,GAAG,cACHP,QAAS,WAAF,OAAQyN,EAAsBwB,EAAO,EAC5ChP,OAAQ,OACRQ,EAAG,IAAIpK,SAEN4Y,GANIA,EAOE,OAIdlQ,GACCxI,EAAAA,EAAAA,KAACkL,EAAAA,EAAO,CAACuO,MAAM,QAAQpP,KAAM,QAE9BrK,EAAAA,EAAAA,KAAC0Z,GAAc,CAACvD,SAAUA,KAE3B7W,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC8G,SAAS,WAAWwD,OAAQ,EAAGjK,MAAM,OAAME,SAAA,CAC7C4X,IACCpY,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZE,MAAO,OAAOE,SAAA,CACf,eACckY,EAAeC,EAAO,4BAClCD,IACChY,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CACLG,QAAS,WACP8L,EAAgB,MAChBC,EAAQ,KACV,EACA7V,WAAY,cACZuS,UAAW,MACXxI,OAAQ,OAAO5J,SAChB,SAONmX,IACC3X,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZE,MAAO,OAAOE,SAAA,CACf,iBACgBmX,GACfjX,EAAAA,EAAAA,KAACsJ,EAAAA,EAAM,CACLG,QAAS,WAAF,OAAQyN,EAAsB,KAAK,EAC1CvX,WAAY,cACZuS,UAAW,MACXxI,OAAQ,OAAO5J,SAChB,UAMLR,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZE,MAAO,OACPD,WAAY,QACZuK,EAAG,EAAEpK,SAAA,EAELE,EAAAA,EAAAA,KAAC6T,EAAAA,EAAK,CACJC,YAAY,uBACZ7U,MAAO0X,EACP7K,SAAU,SAACiI,GAAC,OAAK6C,EAAc7C,EAAEC,OAAO/U,MAAM,KAEhDe,EAAAA,EAAAA,KAAC2O,EAAAA,EAAU,CAACgL,UAAW7B,EAASpO,OAAQ,OAAQD,QAAS,SAACsP,GAAK,OAAKD,GAAYC,EAAM,EAAE7O,EAAG,EAAG4D,EAAG,EAAEhO,UACnGE,EAAAA,EAAAA,KAAC4Z,GAAAA,IAAS,iBAOtB,E,uBC7FA,GA/PkB,SAAH/Y,GAAqB,IAAfwT,EAAOxT,EAAPwT,QACnB5Q,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCoW,EAAQlW,EAAA,GAAEmW,EAAWnW,EAAA,GAC5ByI,GASI1D,EAAAA,EAAAA,KARFlF,EAAI4I,EAAJ5I,KACA+N,EAAOnF,EAAPmF,QACAwI,EAAO3N,EAAP2N,QACA7B,EAAW9L,EAAX8L,YACA7L,EAAYD,EAAZC,aACAC,EAAeF,EAAfE,gBACA0N,EAAW5N,EAAX4N,YACAC,EAAW7N,EAAX6N,YAEItR,GAAWC,EAAAA,GAAAA,MACjBN,GAAgC5E,EAAAA,EAAAA,WAAS,GAAM6E,GAAA3E,EAAAA,EAAAA,GAAA0E,EAAA,GAAxC4R,EAAS3R,EAAA,GAAE4R,EAAU5R,EAAA,GACtB9C,GAAQ6L,EAAAA,EAAAA,KACRzN,GAASN,EAAAA,EAAAA,IAAiBC,GAChCuT,GAAkDrT,EAAAA,EAAAA,WAAS,GAAMsT,GAAApT,EAAAA,EAAAA,GAAAmT,EAAA,GAA1DqD,EAAiBpD,EAAA,GAAEqD,EAAoBrD,EAAA,IAE9C/S,EAAAA,EAAAA,YAAU,WACJJ,IACFwW,EAAqBxW,EAAOyW,WAE5BzW,EAAOY,GAAG,WAAW,WACnB4V,GAAqB,EACvB,IAEAxW,EAAOY,GAAG,cAAc,WACtB4V,GAAqB,EACvB,IAEJ,GAAG,CAACxW,IAEJ,IAAM0W,GAAczR,EAAAA,EAAAA,cAAWhI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAyE,EAAA/E,EAAA,OAAAI,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACrB,OAAJmC,QAAI,IAAJA,GAAAA,EAAM6U,MAAM,CAADlX,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBAQf,OAJKoE,EAAS,CACbG,QAAS,CACPC,cAAc,UAADhB,OAAYtB,EAAKU,SAEjC/C,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGwBd,GAAAA,EAAcyI,IAAI,cAADlE,OAAetB,EAAK6U,OAAS3S,GAAQ,KAAD,EAAtE/E,EAAQQ,EAAA6E,KACd+T,EAAQpZ,EAASsF,MAAM9E,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAmF,GAAAnF,EAAA,SAEvB/B,QAAQF,MAAM,uBAAsBiC,EAAAmF,IAAS,yBAAAnF,EAAAI,OAAA,GAAAN,EAAA,mBAE9C,CAACuC,KAGJS,EAAAA,EAAAA,YAAU,WACJT,GACF+W,GAEJ,GAAG,CAAC/W,EAAM+W,KAEVtW,EAAAA,EAAAA,YAAU,WAER,GAAImW,EAAmB,CACvB,IAgCMI,EAAwB,SAACC,GAC7BnO,EAAgB,CAACmO,GAAkB3V,QAAAwU,EAAAA,EAAAA,GAAKjN,KAjCjB,SAACnG,EAAOwM,GAC/B,GAAgC,YAA5BgI,aAAaC,WAA0B,CACzC,IAAID,aAAaxU,EAAOwM,GACxB,IAAMkI,EAAQ,IAAIC,MAChB,mEAEFD,EAAME,iBAAiB,SAAS,SAAC5b,GAC/BE,QAAQF,MAAM,wBAAyBA,EACzC,IAEA0b,EAAMG,OAAOC,OAAM,SAAC9b,GAClBE,QAAQF,MAAM,wBAAyBA,EACzC,GACF,KAAuC,WAA5Bwb,aAAaC,YACtBD,aAAaO,oBAAoB3H,MAAK,SAACqH,GACrC,GAAmB,YAAfA,EAA0B,CAC5B,IAAID,aAAaxU,EAAOwM,GACxB,IAAMkI,EAAQ,IAAIC,MAChB,mEAEFD,EAAME,iBAAiB,SAAS,SAAC5b,GAC/BE,QAAQF,MAAM,wBAAyBA,EACzC,IAEA0b,EAAMG,OAAOC,OAAM,SAAC9b,GAClBE,QAAQF,MAAM,wBAAyBA,EACzC,GACF,CACF,GAEJ,CAIEgc,CACE,cACA,CACEC,KAAK,oBAADrW,OAAsB2V,EAAmBnM,OAAOtM,MACpD4M,KAAK,GAAD9J,OAAK2V,EAAmBnM,OAAOjL,OAMvC6U,GAAY,SAACmB,GAAY,SAAAvU,QAAAwU,EAAAA,EAAAA,GAASD,GAAY,CAAEoB,GAAqB,GACvE,EAEMW,EAA0B,SAACC,GAC/B9J,GAAQ,SAAC+J,GAAQ,OAAAxJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZwJ,GAAQ,IACXC,iBAAiB,GAADzW,QAAAwU,EAAAA,EAAAA,GACXgC,EAASC,kBAAgB,CAC5BF,EAAQ/C,mBACT,GAEL,EAEMkD,EAAwB,SAACH,GAC7B9J,GAAQ,SAAC+J,GAAQ,OAAAxJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZwJ,GAAQ,IACXG,iBAAiB,GAAD3W,QAAAwU,EAAAA,EAAAA,GACXgC,EAASG,kBAAgB,CAC5BJ,EAAQ9C,iBACT,GAEL,EAEMmD,EAAqB,SAACtJ,GAC1Bb,GAAQ,SAACnQ,GAAI,OAAA0Q,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACR1Q,GAAI,IACPgR,aAAcA,EAAaA,aAC3BrB,KAAMqB,EAAarB,MAAI,GAE3B,EAMA,OALAlN,EAAOY,GAAG,qBAAsB2W,GAChCvX,EAAOY,GAAG,mBAAoB+W,GAC9B3X,EAAOY,GAAG,eAAgBiX,GAC1B7X,EAAOY,GAAG,mBAAoB+V,GAEvB,WACL3W,EAAOkO,IAAI,qBAAsBqJ,GACjCvX,EAAOkO,IAAI,mBAAoByJ,GAC/B3X,EAAOkO,IAAI,eAAgB2J,GAC3B7X,EAAOkO,IAAI,mBAAoByI,EACjC,CACH,CACC,GAAG,CAAC3W,EAAQ8E,EAAU0D,EAAc+N,IAGpC,IAAMuB,GAAa7S,EAAAA,EAAAA,cAAWhI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAsE,IAAA,IAAAI,EAAAkW,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlb,EAAAA,EAAAA,KAAAG,MAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,UACxBmC,EAAK,CAADoC,EAAAvE,KAAA,QACO,OAAdsH,EAAS,KAAK/C,EAAAtE,OAAA,iBAQf,OAJKoE,EAAS,CACbG,QAAS,CACPC,cAAc,UAADhB,OAAYtB,EAAKU,SAEjC0B,EAAAxE,KAAA,EAAAwE,EAAAvE,KAAA,EAGoDM,QAAQua,IAAI,CAC7D3b,GAAAA,EAAcyI,IAAI,2BAADlE,OAA4BtB,EAAK2Y,QAAO,KAAArX,OAAItB,EAAKN,WAAawC,GAC/EnF,GAAAA,EAAcyI,IAAI,2BAADlE,OAA4BtB,EAAK2Y,QAAO,KAAArX,OAAItB,EAAKN,WAAawC,KAC9E,KAAD,EAAAkW,EAAAhW,EAAAI,KAAA6V,GAAAjY,EAAAA,EAAAA,GAAAgY,EAAA,GAHKE,EAAgBD,EAAA,GAAEE,EAAgBF,EAAA,GAKnCG,EAAeF,EAAiB7V,KAChCgW,EAAeF,EAAiB9V,KAElC+V,EAAapS,OAAS,IACxBqQ,EAAY+B,GACZ5c,QAAQsF,IAAIsX,IAGVC,EAAarS,OAAS,GACxBoQ,EAAYiC,GACbrW,EAAAvE,KAAA,iBAAAuE,EAAAxE,KAAA,GAAAwE,EAAAU,GAAAV,EAAA,SAEGA,EAAAU,GAAM3F,UAAsC,MAA1BiF,EAAAU,GAAM3F,SAASwF,QACnCV,EAAM,CACJS,MAAO,2BACP0L,YAAa,2BACbxL,SAAU,IACVD,OAAQ,UACRE,SAAU,WAEZjH,QAAQsF,IAAGkB,EAAAU,IAEX8V,YAAW,WACT1M,aAAaC,WAAW,YACxBhH,EAAS,IACX,GAAG,OAEHvJ,QAAQsF,IAAGkB,EAAAU,IACXb,EAAM,CACJS,MAAO,qBACP0L,YAAa,4BACbzL,OAAQ,QACRC,SAAU,IACV6L,YAAY,KAEf,yBAAArM,EAAArE,OAAA,GAAA+D,EAAA,mBAEF,CAAC9B,EAAMmF,EAAUlD,IAWpB,OARAxB,EAAAA,EAAAA,YAAU,WACHT,EAILmY,IAHEhT,EAAS,aAIb,GAAG,CAACgT,EAAYhT,EAAUnF,KAGxBxD,EAAAA,EAAAA,KAAC1B,EAAAA,EAAa,CAAC+d,UAAUrc,EAAAA,EAAAA,KAAA,KAAGmR,MAAO,CAAE/Q,MAAO,SAAUN,SAAC,yBAA0B2N,WAAW,OAAM3N,UAChGR,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,OAAOE,WAAW,SAASD,eAAe,SAASoL,QAAQ,SAASjL,MAAM,OAAOD,WAAW,QAAQ0G,SAAS,WAAUvG,SAAA,EAClIE,EAAAA,EAAAA,KAACsc,EAAAA,EAAQ,KACTtc,EAAAA,EAAAA,KAACT,EAAAA,EAAG,CAACK,MAAM,OAAO2c,GAAI,GAAGzc,UACvBE,EAAAA,EAAAA,KAACwc,EAAQ,CAAC3L,SAAc,OAAJrN,QAAI,IAAJA,OAAI,EAAJA,EAAMuN,UAE5B/Q,EAAAA,EAAAA,KAACyc,EAAU,CAACpI,QAASA,EAAS7Q,KAAMA,IACnCqW,IAAY7Z,EAAAA,EAAAA,KAAC0c,GAAY,CAACvU,QAAS,WAAF,OAAQ2R,GAAY,EAAM,KAC5D9Z,EAAAA,EAAAA,KAAC2O,EAAAA,EAAU,CACTnP,QAASqa,EAAW,OAAS,OAC7BxT,SAAS,QACTwD,OAAO,KACPC,MAAM,MACN8E,MACE5O,EAAAA,EAAAA,KAAC2c,GAAAA,IAA0B,CACzBxL,MAAO,CACLvR,MAAOsa,EAAY,OAAS,OAC5B0C,WAAY,yBACZxc,MAAO,OACPF,SAAU,OACVwJ,OAAQ,UAIdH,gBAAgB,SAChBW,EAAG,IACH2S,QAAS,OACTnT,OAAO,OACPF,OAAQ,CAAED,gBAAiB,SAC3BE,QAAS,WAAF,OAAQqQ,GAAY,EAAK,EAChCgD,aAAc,WAAF,OAAQ3C,GAAW,EAAK,EACpC4C,aAAc,WAAF,OAAQ5C,GAAW,EAAM,EACrClQ,aAAa,aAKvB,C","sources":["components/ErrorBoundary.js","components/config/axios.js","components/config/chatlogics.js","components/config/formatTime.js","miscellenious/Requests.js","miscellenious/Password.jsx","miscellenious/upperNav.js","miscellenious/Progress.js","miscellenious/Payments.js","miscellenious/Myprograms.js","miscellenious/Message.js","miscellenious/ScrollableChat.js","miscellenious/FloatingChat.js","pages/Dashboard.js"],"sourcesContent":["import { Box, Link, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    console.error(error, info);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Box\r\n          display={\"flex\"}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          background={\"whitesmoke\"}\r\n          width={\"100%\"}\r\n          height={\"100%\"}\r\n        >\r\n          {\" \"}\r\n          <Box\r\n            display={\"flex\"}\r\n            flexDirection={\"column\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n          >\r\n            {\" \"}\r\n            <Text fontSize={\"2xl\"}>An error occurred. Please </Text>\r\n            <Link color=\"teal.500\" href=\"/dashboard\">\r\n              Go Back...\r\n            </Link>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundary;\r\n","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create();\r\naxiosInstance.interceptors.response.use(\r\n  async (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { z } from \"zod\";\r\n\r\nexport const UserFormValidation = z.object({\r\n  name: z\r\n    .string()\r\n    .min(2, \"Name must be at least 2 characters\")\r\n    .max(50, \"Name must be at most 50 characters\"),\r\n  otherName: z\r\n    .string()\r\n    .min(2, \"Other name must be at least 2 characters\")\r\n    .max(50, \"Other name must be at most 50 characters\"),\r\n  email: z.string().email(\"Invalid email address\"),\r\n  gender: z.enum([\"male\", \"female\", \"other\"]),\r\n  password: z\r\n    .string()\r\n    .min(4, \"Password must be at least 8 characters long\")\r\n    .max(100, \"Password must be at most 100 characters\"),\r\n  confirmPassword: z\r\n    .string()\r\n    .min(4, \"Confirm password must be at least 8 characters long\")\r\n    .max(100, \"Confirm password must be at most 100 characters\")\r\n    .refine((val, ctx) => val === ctx.parent.password, {\r\n      message: \"Passwords do not match\",\r\n    }),\r\n  passport: z.string().regex(/^\\d{8,15}$/, \"Invalid passport/ID number\"),\r\n  selectedCountry: z.string().min(2, \"Country is required\"),\r\n  provinces: z.string().optional(),\r\n  language: z.string().min(2, \"Language is required\"),\r\n  pic: z.string().url(\"Profile picture is required\"),\r\n});\r\n\r\nexport const isSameSenderMargin = (messages, m, i, userId) => {\r\n  const isCurrentUserSender = m.sender?.$oid === userId;\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender?.$oid === m.sender?.$oid &&\r\n    !isCurrentUserSender\r\n  ) {\r\n    return 33;\r\n  } else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender?.$oid !== m.sender?.$oid &&\r\n      !isCurrentUserSender) ||\r\n    (i === messages.length - 1 && !isCurrentUserSender)\r\n  ) {\r\n    return 0;\r\n  } else {\r\n    return \"auto\";\r\n  }\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1]?.sender?._id !== m.sender?._id ||\r\n      messages[i + 1]?.sender?._id === undefined) &&\r\n    messages[i]?.sender?._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  const lastMessageSenderId = messages[messages.length - 1].sender?.$oid;\r\n  return (\r\n    i === messages.length - 1 &&\r\n    lastMessageSenderId !== userId &&\r\n    lastMessageSenderId\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender?.$oid === m.sender?.$oid;\r\n};\r\n\r\nexport const getSenderName = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n};\r\nexport const getSenderId = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1]._id : users[0]._id;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, user) => {\r\n  return user[0]._id === loggedUser._id ? user[1] : user[0];\r\n};\r\n\r\nexport async function getUserById(userId, token) {\r\n  if (!userId && !token) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/user/getuserid/${userId}`, config);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function useConnectSocket(user) {\r\n  const [socket, setSocket] = useState(null);\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!user || !user.token) {\r\n      return;\r\n    }\r\n\r\n    // Check if the socket already exists\r\n    if (socketRef.current) {\r\n      setSocket(socketRef.current);\r\n      return;\r\n    }\r\n\r\n    const userId = user._id;\r\n    const newSocket = io(\"/\", {\r\n      query: { token: user.token, userId },\r\n    });\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"connected\");\r\n      setSocket(newSocket); // Set socket state after connection\r\n    });\r\n\r\n    newSocket.on(\"disconnect\", (reason) => {\r\n      console.log(\"Socket.IO disconnected due to:\", reason);\r\n      if (reason === \"io server disconnect\") {\r\n        // Handle server-side disconnections\r\n        newSocket.connect();\r\n      }\r\n    });\r\n\r\n    newSocket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      console.log(`Reconnection attempt ${attemptNumber}`);\r\n    });\r\n\r\n    newSocket.on(\"error\", (error) => {\r\n      console.error(\"Socket.IO error:\", error);\r\n    });\r\n\r\n    // Update socketRef with the new socket instance\r\n    socketRef.current = newSocket;\r\n\r\n    // Clean up function to disconnect socket when the component unmounts\r\n    return () => {\r\n      if (newSocket) {\r\n        newSocket.disconnect();\r\n      }\r\n      socketRef.current = null;\r\n    };\r\n  }, [user]); // Only rerun if user changes\r\n\r\n  return socket;\r\n}\r\n\r\nexport async function makePaymentMpesa(amount, phoneNumber, user, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/makepaymentmpesa/${user._id}?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {}\r\n}\r\n\r\nexport async function donationsMpesa(amount, phoneNumber, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/donationsmpesa?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function handleApprove(accountType, type, user, setUser) {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/paycheck/${user._id}/${type}/${accountType}`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    const userData = await {\r\n      ...user,\r\n      accountType: data.accountType,\r\n      subscription: data.subscription,\r\n      day: data.day,\r\n    };\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(userData));\r\n    setUser(userData);\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw new Error(\"Error occurred\", error);\r\n  }\r\n}\r\n","const formatMessageTime = (timestamp) => {\r\n  const messageTime = new Date(timestamp);\r\n  const currentTime = new Date();\r\n\r\n  const timeDifference = currentTime - messageTime;\r\n  const seconds = Math.floor(timeDifference / 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  const hours = Math.floor(minutes / 60);\r\n  const days = Math.floor(hours / 24);\r\n\r\n  if (seconds < 60) {\r\n    return \"Just now\";\r\n  } else if (minutes < 60) {\r\n    return `${minutes} minute${minutes === 1 ? \"\" : \"s\"} ago`;\r\n  } else if (hours < 24) {\r\n    return `${hours} hour${hours === 1 ? \"\" : \"s\"} ago`;\r\n  } else if (days === 1) {\r\n    return \"Yesterday\";\r\n  } else if (days < 7) {\r\n    return `${days} day${days === 1 ? \"\" : \"s\"} ago`;\r\n  } else {\r\n    const options = {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n    };\r\n    return messageTime.toLocaleDateString(\"en-US\", options);\r\n  }\r\n};\r\nexport default formatMessageTime;\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  Button,\r\n  Text,\r\n  Box,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RiTeamLine } from \"react-icons/ri\";\r\n\r\nconst Requests = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [clubRequests, setClubRequests] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { user } = ChatState();\r\n  const navigate = useNavigate();\r\n\r\n  const fetchClubRequests = useCallback(async () => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/github/something/${user._id}`,\r\n        config\r\n      );\r\n      setClubRequests(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching club requests:\", error);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchClubRequests();\r\n    }\r\n  }, [user, fetchClubRequests]);\r\n  const declineRequest = async (clubId) => {\r\n    if (!user || !clubId) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/decline/request/${clubId}/${user._id}`,\r\n        config\r\n      );\r\n      setClubRequests(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(\"Error fetching club requests/decline:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        backgroundColor={\"white\"}\r\n        _hover={{ backgroundColor: \"transparent\" }}\r\n        onClick={onOpen}\r\n        border={\"none\"}\r\n      >\r\n        <RiTeamLine fontSize={\"20px\"} border={\"none\"} />\r\n        {clubRequests && clubRequests.length > 0 && (\r\n          <Text\r\n            position=\"absolute\"\r\n            bottom=\"70%\"\r\n            right=\"70%\"\r\n            transform=\"translate(50%, 0)\"\r\n            bg=\"red.500\"\r\n            borderRadius=\"50%\"\r\n            width=\"2px\"\r\n            height=\"2px\"\r\n            p={1.5}\r\n          ></Text>\r\n        )}\r\n        <Text />\r\n      </Button>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose} isCentered size={\"sm\"}>\r\n        <ModalOverlay\r\n          bg=\"blackAlpha.300\"\r\n          backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n        />\r\n        <ModalContent>\r\n          <ModalHeader textAlign={\"center\"}>Clubs Requests</ModalHeader>\r\n          <ModalCloseButton border={\"none\"} />\r\n          <ModalBody\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            flexDir={\"column\"}\r\n            maxH={\"300px\"}\r\n          >\r\n            {clubRequests && clubRequests.length > 0 ? (\r\n              clubRequests.map((club, index) => (\r\n                <Box\r\n                  display={\"flex\"}\r\n                  justifyContent={\"space-between\"}\r\n                  alignItems={\"center\"}\r\n                  width={\"100%\"}\r\n                  key={index}\r\n                >\r\n                  <Button\r\n                    key={club._id}\r\n                    justifyContent={\"space-between\"}\r\n                    onClick={() => navigate(`/showclub/${club._id}`)}\r\n                    border={\"none\"}\r\n                  >\r\n                    {index + 1}. Club Name: {club.name}\r\n                  </Button>\r\n                  <Button\r\n                    background={\"#f05e56\"}\r\n                    onClick={() => declineRequest(club._id)}\r\n                    border={\"none\"}\r\n                  >\r\n                    {loading ? <Spinner size={\"small\"} /> : `Decline`}\r\n                  </Button>\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <>\r\n                <Text>All club requests have been replied to.</Text>\r\n              </>\r\n            )}\r\n          </ModalBody>\r\n\r\n          <ModalFooter fontSize={\"small\"} textDecor={\"underline\"}>\r\n            These requests were made by club coaches.\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default Requests;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalCloseButton,\r\n  Button,\r\n  HStack,\r\n  PinInput,\r\n  PinInputField,\r\n  Text,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const PasskeyModal = ({ isOpen, onClose }) => {\r\n  const [passkey, setPasskey] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const validatePasskey = () => {\r\n    if (passkey === process.env.REACT_APP_ADMIN_PASSKEY) {\r\n      navigate(\"/admin\");\r\n      onClose(); // Close the modal after successful validation\r\n    } else {\r\n      setError(\"Invalid passkey. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader textAlign=\"center\">Admin Access Verification</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <VStack spacing={4} align=\"center\">\r\n            <Text>To access the admin page, please enter the passkey.</Text>\r\n            <HStack>\r\n              <PinInput\r\n                value={passkey}\r\n                onChange={(value) => {\r\n                  setPasskey(value);\r\n                  setError(\"\"); // Clear error on input change\r\n                }}\r\n                type=\"number\"\r\n                autoFocus\r\n              >\r\n                <PinInputField />\r\n                <PinInputField />\r\n                <PinInputField />\r\n                <PinInputField />\r\n                <PinInputField />\r\n                <PinInputField />\r\n              </PinInput>\r\n            </HStack>\r\n            {error && <Text color=\"red.500\">{error}</Text>}\r\n          </VStack>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button colorScheme=\"blue\" onClick={validatePasskey} width=\"full\">\r\n            Enter Admin Passkey\r\n          </Button>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Badge,\r\n  Image,\r\n  useBreakpointValue,\r\n  IconButton,\r\n  CloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { TiThMenuOutline } from \"react-icons/ti\";\r\nimport { BellIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport Requests from \"./Requests\";\r\nimport logo7 from \"../assets/images/final.jpeg\";\r\nimport { PiSignOutLight } from \"react-icons/pi\";\r\nimport { PasskeyModal } from \"./Password\";\r\nimport { useState } from \"react\";\r\nimport { RiAdminLine } from \"react-icons/ri\";\r\nimport { MdLiveTv } from \"react-icons/md\";\r\n\r\nfunction UpperNav() {\r\n  const { user, notification, setNotification } = ChatState();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const navigate = useNavigate();\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    setNotification([]);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const displayValue = useBreakpointValue({ base: \"none\", md: \"flex\" });\r\n\r\n  const textVisibility = useBreakpointValue({\r\n    base: \"hidden\",\r\n    md: \"visible\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p={3}\r\n        paddingBottom={2}\r\n        boxShadow=\"2xl\"\r\n        zIndex={10}\r\n        top={0}\r\n        position={\"fixed\"}\r\n      >\r\n        <Image src={logo7} height={12} />\r\n        <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n          <Button\r\n            backgroundColor={\"transparent\"}\r\n            border={\"none\"}\r\n            display={displayValue}\r\n            visibility={textVisibility}\r\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\r\n            onClick={() => {\r\n              navigate(\"/dashboard\");\r\n            }}\r\n          >\r\n            My Programs\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            display={{ base: \"none\", md: \"flex\" }}\r\n            border={\"none\"}\r\n            onClick={onOpen}\r\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\r\n          >\r\n            <Text px={4} userSelect={\"none\"}>\r\n              Discover\r\n            </Text>\r\n          </Button>\r\n          <Requests />\r\n        </Box>\r\n\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1} position=\"relative\" border={\"none\"}>\r\n              <BellIcon fontSize=\"2xl\" p={0} m={0} />\r\n              {notification.length > 0 && (\r\n                <Badge\r\n                  variant=\"subtle\"\r\n                  position=\"absolute\"\r\n                  top=\"-3px\"\r\n                  right=\"-3px\"\r\n                  backgroundColor={\"red\"}\r\n                  zIndex={1}\r\n                  borderRadius={\"50%\"}\r\n                  color=\"white\"\r\n                >\r\n                  {notification.length}\r\n                </Badge>\r\n              )}\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                  p={\"4\"}\r\n                >\r\n                  {`New message from ${\r\n                    notif.sender ? notif.sender.name : \"Coach\"\r\n                  } ADM: ${notif.sender ? notif.sender.admission : \" \"}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton\r\n              as={Button}\r\n              bg=\"white\"\r\n              border={\"none\"}\r\n              _hover={{ backgroundColor: \"transparent\" }}\r\n              onClick={onOpen}\r\n            >\r\n              {displayValue === \"flex\" ? (\r\n                <Avatar\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={user?.name}\r\n                  src={user?.pic}\r\n                />\r\n              ) : (\r\n                <IconButton\r\n                  backgroundColor={\"transparent\"}\r\n                  border={\"none\"}\r\n                  icon={<TiThMenuOutline />}\r\n                />\r\n              )}\r\n            </MenuButton>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <PasskeyModal isOpen={modal} onClose={() => setModal(false)} />\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay\r\n          bg=\"blackAlpha.300\"\r\n          backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n        />\r\n        <DrawerContent>\r\n          <DrawerHeader\r\n            borderBottomWidth=\"1px\"\r\n            display={\"flex\"}\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            Dashboard\r\n            <CloseButton onClick={onClose} border={\"none\"} />\r\n          </DrawerHeader>\r\n          <DrawerBody\r\n            display={\"flex\"}\r\n            flexDir={\"column\"}\r\n            justifyContent={\"start\"}\r\n            width={\"100%\"}\r\n            padding={3}\r\n          >\r\n            <Button\r\n              display={\"flex\"}\r\n              justifyContent={\"left\"}\r\n              alignItems={\"center\"}\r\n              border={\"none\"}\r\n              fontSize={\"medium\"}\r\n              background={\"white\"}\r\n              _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n              onClick={() => navigate(\"/profile\")}\r\n            >\r\n              <Avatar\r\n                size=\"sm\"\r\n                cursor=\"pointer\"\r\n                name={user?.name}\r\n                src={user?.pic}\r\n              />\r\n              <Text p={2} m={1}>\r\n                Profile\r\n              </Text>\r\n            </Button>\r\n            <Button\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              background={\"white\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/dashboard\");\r\n                onClose();\r\n              }}\r\n            >\r\n              My Programs\r\n            </Button>\r\n            <Button\r\n              justifyContent={\"start\"}\r\n              background={\"white\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/clubs\");\r\n                onClose();\r\n              }}\r\n            >\r\n              Clubs\r\n            </Button>\r\n            <Button\r\n              justifyContent={\"left\"}\r\n              background={\"white\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              isDisabled={!user?.provinces}\r\n              onClick={() => {\r\n                navigate(\"/province\");\r\n                onClose();\r\n              }}\r\n            >\r\n              Provincial level\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/national\");\r\n                onClose();\r\n              }}\r\n            >\r\n              National level\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/championships\");\r\n                onClose();\r\n              }}\r\n            >\r\n              International Championship\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              isDisabled\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/stream\");\r\n                onClose();\r\n              }}\r\n            >\r\n              <MdLiveTv /> &nbsp; Streams\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                setModal(true);\r\n                onClose();\r\n              }}\r\n            >\r\n              <RiAdminLine /> &nbsp; Admin\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={logoutHandler}\r\n            >\r\n              <PiSignOutLight /> &nbsp; Sign out\r\n            </Button>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpperNav;\r\n","import { Text } from \"@chakra-ui/react\";\r\nimport styled from \"styled-components\";\r\nimport { keyframes } from \"styled-components\";\r\nimport { GiBlackBelt } from \"react-icons/gi\";\r\n\r\nconst ProgressContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  position: relative;\r\n  width: 100%;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst ProgressSlot = styled.div`\r\n  display: flex;\r\n  width: 30%;\r\n  height: 50px;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  font-weight: bold;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\nconst progressAnimation = keyframes`\r\n  from {\r\n    width: 1%; /* Adjust the initial width as needed */\r\n  }\r\n  to {\r\n    width: ${({ level }) => (level + 1.2) * 10}%;\r\n  }\r\n`;\r\n\r\nconst blinkingAnimation = keyframes`\r\n  0%, 100% {\r\n    background-color: #ed7d66; /* Slightly less green color */\r\n  }\r\n  50% {\r\n    background-color: #66d171; /* Default green color */\r\n  }\r\n`;\r\n\r\nconst ProgressArrow = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 50px;\r\n  height: 14px;\r\n  background-color: #66d171;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: ${({ level }) => (level + 1) * 10}%;\r\n  animation: ${progressAnimation} 2s ease-in-out,\r\n    ${blinkingAnimation} 3s ease-in-out infinite;\r\n`;\r\n\r\nconst Progress = ({ userBelt }) => {\r\n  const progressLevels = [\r\n    \"Guest\",\r\n    `grey`,\r\n    `#baba30`,\r\n    `orange`,\r\n    `red`,\r\n    `purple`,\r\n    `green`,\r\n    `blue`,\r\n    `brown`,\r\n    `black`,\r\n  ];\r\n  const progress = [\r\n    \"Guest\" || undefined,\r\n    \"Beginner\",\r\n    \"Yellow\",\r\n    \"Orange\",\r\n    \"Red\",\r\n    \"Purple\",\r\n    \"Green\",\r\n    \"Blue\",\r\n    \"Brown\",\r\n    \"Black\",\r\n  ];\r\n\r\n  const level = progress.indexOf(userBelt);\r\n\r\n  return (\r\n    <ProgressContainer>\r\n      {progressLevels.map((belt, index) => (\r\n        <ProgressSlot key={index}>\r\n          <Text\r\n            marginTop={-3}\r\n            fontWeight={{ base: \"sm\", md: \"md\" }}\r\n            fontSize={{ base: \"10px\", md: \"md\" }}\r\n            textAlign=\"center\"\r\n          >\r\n            {index > 0 ? (\r\n              <GiBlackBelt style={{ color: belt, fontSize: \"1.5rem\" }} />\r\n            ) : (\r\n              belt\r\n            )}\r\n          </Text>\r\n        </ProgressSlot>\r\n      ))}\r\n      <ProgressArrow level={level}>\r\n        {\" \"}\r\n        <Text textAlign={\"center\"} fontSize={\"small\"} p={1}>\r\n          {(level + 1) * 10}%\r\n        </Text>{\" \"}\r\n      </ProgressArrow>\r\n    </ProgressContainer>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  useColorModeValue,\r\n  useToast,\r\n  Button,\r\n  Image,\r\n  Input,\r\n  ModalContent,\r\n  ModalOverlay,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Modal,\r\n  useDisclosure,\r\n  Divider,\r\n} from \"@chakra-ui/react\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport {\r\n  makePaymentMpesa,\r\n  useConnectSocket,\r\n} from \"../components/config/chatlogics\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Paycheck({ course }) {\r\n  const toast = useToast();\r\n  const { user, setUser } = ChatState();\r\n  const [show, setShow] = useState(false);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const socket = useConnectSocket(user?.token);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on(\"noPayment\", (nothing) => {\r\n      toast({\r\n        title: nothing,\r\n        description: \"Subscription unsuccessful\",\r\n        status: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom\",\r\n      });\r\n    });\r\n    socket.on(\"userUpdated\", async (update) => {\r\n      setUser((prev) => ({ ...prev, belt: update.belt }));\r\n\r\n      toast({\r\n        title: \"Successfully updated\",\r\n        description: `Ranked ${update.belt}`,\r\n        status: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom\",\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"userUpdated\");\r\n      socket.off(\"noPayment\");\r\n    };\r\n  }, [setUser, toast, socket]);\r\n\r\n  const handleAfterPay = async () => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user/update`, config);\r\n      setUser((prev) => ({ ...prev, belt: data.belt }));\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        toast({\r\n          title: \"Belt achieved!\",\r\n          description: error.response.data.message,\r\n          status: \"info\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      } else {\r\n        // Handle other errors\r\n        console.error(\"An error occurred:\", error);\r\n        toast({\r\n          title: \"An Error Occurred!\",\r\n          description: \"Please try again later.\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkAvailability = () => {\r\n    const userCertificatesLength = user && user.certificates.length;\r\n    const courseIndex = course.id - 1;\r\n\r\n    // Allow enrollment for the first/next course only if the user is a guest\r\n    const canEnroll =\r\n      (user && user.belt === \"Guest\" && courseIndex === 0) ||\r\n      userCertificatesLength + 1 === courseIndex + 1;\r\n\r\n    if (canEnroll) {\r\n      // Open the payment modal\r\n      onOpen();\r\n    } else if (user && user.belt === course.title) {\r\n      toast({\r\n        title: \"Currently on this course\",\r\n        description: \"You don't need to enroll in this course.\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      // Display a toast message indicating unavailability\r\n      toast({\r\n        title: \"Course Unavailable\",\r\n        description:\r\n          \"You don't meet the requirements to enroll in this course.\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        borderRadius={20}\r\n        fontSize={\"small\"}\r\n        background={\"#a432a8\"}\r\n        textColor={\"white\"}\r\n        _hover={{ color: \"black\" }}\r\n        m={1}\r\n        onClick={checkAvailability}\r\n      >\r\n        Enroll\r\n      </Button>\r\n      <Modal\r\n        size=\"lg\"\r\n        onClose={() => {\r\n          setShow(false);\r\n          onClose();\r\n        }}\r\n        isOpen={isOpen}\r\n        isCentered\r\n      >\r\n        <ModalOverlay\r\n          bg=\"blackAlpha.300\"\r\n          backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n        />\r\n        <ModalContent\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          width={\"100%\"}\r\n        >\r\n          <ModalHeader fontSize=\"40px\" fontFamily=\"Work sans\">\r\n            <Text\r\n              textAlign={\"center\"}\r\n              fontSize={\"sm\"}\r\n              fontWeight={500}\r\n              p={2}\r\n              px={3}\r\n              color={\"green.500\"}\r\n              rounded={\"full\"}\r\n            >\r\n              Elevate Your Craft: {course.title}\r\n            </Text>\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <PayPalScriptProvider\r\n              options={{\r\n                clientId:\r\n                  \"AZAdYFR_SbadcgOcCLYn9ajkReJTZmOCnEeAvQ3xPYAE5BMYFBHi4vDeILfNwBO-hh-8wfyGC9lNeB1I\",\r\n              }}\r\n            >\r\n              <PayPalButtons\r\n                createOrder={(data, actions) => {\r\n                  const amount = 12.0;\r\n                  return actions.order.create({\r\n                    purchase_units: [\r\n                      {\r\n                        amount: {\r\n                          currency_code: \"USD\",\r\n                          value: amount.toFixed(2),\r\n                        },\r\n                      },\r\n                    ],\r\n                  });\r\n                }}\r\n                onApprove={async (data, actions) => {\r\n                  await handleAfterPay();\r\n                  return actions.order.capture().then(function (details) {\r\n                    toast({\r\n                      title: \"Success\",\r\n                      description: data.subscriptionID,\r\n                      status: \"info\",\r\n                      duration: 3000,\r\n                      isClosable: true,\r\n                      position: \"bottom\",\r\n                    });\r\n                  });\r\n                }}\r\n                onCancel={() => {\r\n                  toast({\r\n                    title: \"Cancelled\",\r\n                    description: \"Subscription Unsuccessful\",\r\n                    status: \"info\",\r\n                    isClosable: true,\r\n                    position: \"bottom\",\r\n                  });\r\n                }}\r\n              />\r\n            </PayPalScriptProvider>\r\n            <Button\r\n              fontSize={\"small\"}\r\n              width={\"100%\"}\r\n              bg={useColorModeValue(\"green.100\", \"green.900\")}\r\n              onClick={() => {\r\n                setShow(true);\r\n              }}\r\n              p={0}\r\n            >\r\n              <Image\r\n                height={5}\r\n                width={\"auto\"}\r\n                src={\r\n                  \"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1694007922/mpesa_ppfs6p.png\"\r\n                }\r\n                alt={\"\"}\r\n                loading=\"lazy\"\r\n              />{\" \"}\r\n              Pay via Mpesa\r\n            </Button>\r\n            {show && (\r\n              <Box m={3}>\r\n                <Text\r\n                  textAlign={\"center\"}\r\n                  justifyContent={\"center\"}\r\n                  fontSize={\"2xl\"}\r\n                >\r\n                  Enter Your Mpesa Phone Number\r\n                </Text>\r\n                <Input\r\n                  fontSize={\"small\"}\r\n                  color={\"green.400\"}\r\n                  fontWeight={\"bold\"}\r\n                  placeholder=\"Enter phone number\"\r\n                  textAlign={\"center\"}\r\n                  type=\"number\"\r\n                  onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  value={phoneNumber}\r\n                  minLength={10}\r\n                  maxLength={10}\r\n                />\r\n                <Divider p={2} />\r\n                <Button\r\n                  width={\"100%\"}\r\n                  onClick={() => {\r\n                    makePaymentMpesa(\"4500\", phoneNumber, user, toast);\r\n                    setShow(false);\r\n                    toast({\r\n                      title: \"Wait as message is sent\",\r\n                      status: \"loading\",\r\n                      isClosable: true,\r\n                      position: \"bottom\",\r\n                      duration: 5000,\r\n                    });\r\n                  }}\r\n                  isDisabled={phoneNumber.length !== parseInt(10)}\r\n                  colorScheme=\"green\"\r\n                >\r\n                  Proceed\r\n                </Button>\r\n                <Text textAlign={\"center\"} justifyContent={\"center\"}>\r\n                  You'll be sent a Message\r\n                </Text>\r\n              </Box>\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter display=\"flex\"> Wait as PayPal processes...</ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  Button,\r\n  Link,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport Paycheck from \"./Payments\";\r\nimport { GiBlackBelt } from \"react-icons/gi\";\r\n\r\nconst MyPrograms = ({ courses, user }) => {\r\n  const handleDownload = (title, url) => {\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = `${title}BeltCertificate.pdf`;\r\n    a.click();\r\n  };\r\n\r\n  const progressLevels = [\r\n    `#baba30`,\r\n    `orange`,\r\n    `red`,\r\n    `purple`,\r\n    `green`,\r\n    `blue`,\r\n    `brown`,\r\n    `black`,\r\n  ];\r\n  return (\r\n    <Box \r\n      display={\"flex\"}\r\n      flexDir={\"column\"}\r\n      alignItems={\"center\"}\r\n      justifyContent={\"center\"}\r\n      width=\"100%\"\r\n      p={4}\r\n      backgroundColor={\"white\"}\r\n    >\r\n      <Text fontSize=\"20px\" fontWeight=\"medium\">\r\n        My Programs\r\n      </Text>\r\n      {courses.map((course, index) => (\r\n        <Flex\r\n          key={course.id}\r\n          display={\"flex\"}\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          m={4}\r\n          p={{ base: \"1\", md: \"4\" }}\r\n          width={{ base: \"90%\", md: \"70%\" }}\r\n          border={\"1px\"}\r\n          borderRadius={5}\r\n        >\r\n          <Box>\r\n            <Box fontSize={\"larger\"} fontWeight={\"medium\"}>\r\n              <Text>{course.title}</Text>\r\n              <GiBlackBelt\r\n                style={{ color: progressLevels[index], fontSize: \"3rem\" }}\r\n              />\r\n            </Box>\r\n            {course.title === user?.belt && (\r\n              <Link\r\n                href={`/courses/${course.id}`}\r\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                p={0}\r\n                m={0}\r\n              >\r\n                Continue\r\n              </Link>\r\n            )}\r\n          </Box>\r\n\r\n          {user && user.certificates && user.certificates[index] ? (\r\n            <Button\r\n              onClick={handleDownload(course.title, user.certificates[index])}\r\n              borderRadius={20}\r\n              fontSize={\"small\"}\r\n              border={\"none\"}\r\n            >\r\n              Download Certificate\r\n            </Button>\r\n          ) : (\r\n            <Box\r\n              display={\"flex\"}\r\n              flexDir={\"column\"}\r\n              justifyContent={\"space-between\"}\r\n              alignItems={\"center\"}\r\n            >\r\n              <Paycheck course={course} />\r\n              <Text\r\n                fontSize={\"sm\"}\r\n                fontWeight={400}\r\n                bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n                p={3}\r\n                px={3}\r\n                color={\"green.500\"}\r\n                rounded={\"full\"}\r\n              >\r\n                $12.00 only\r\n              </Text>\r\n            </Box>\r\n          )}\r\n        </Flex>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyPrograms;\r\n","// Message.js\r\nimport React from \"react\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport { Box, Text } from \"@chakra-ui/react\";\r\nimport formatMessageTime from \"../components/config/formatTime\";\r\nimport { BsSendCheck } from \"react-icons/bs\";\r\nimport { LuBadgeCheck } from \"react-icons/lu\";\r\n\r\nfunction Message({ m }) {\r\n  const { user, setSelectedChat, setSend } = ChatState();\r\n  const adminId = \"6693a995f6295b8bd90d9301\"; \r\n  const userId = user?._id;\r\n  const handleClick = () => {\r\n    if (m.sender?._id !== userId) {\r\n      setSelectedChat(m.sender?._id);\r\n      setSend(m.sender?.name);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        display={\"flex\"}\r\n        flexDir={\"column\"}\r\n        position={\"relative\"}\r\n        fontSize={\"small\"}\r\n        onClick={handleClick}\r\n      >\r\n        <Box fontSize={\"smaller\"} textDecor={\"underline\"} textAlign={\"end\"}>\r\n        {m.sender?._id === adminId && userId !== adminId && <Box display={\"flex\"} justifyContent={\"flex-end\"} alignItems={\"center\"} width={\"100%\"}>From:{'\\u00A0'}<Box display={\"flex\"}><Text fontSize={\"bold\"}>WSF</Text><LuBadgeCheck style={{color: \"blue\"}} /></Box></Box>}\r\n        {m.sender?._id === userId && m.recipient?._id === adminId && <Box display={\"flex\"} >Sent to{'\\u00A0'}WSF<LuBadgeCheck style={{color: \"blue\"}} /></Box>}\r\n        {m.sender?._id !== adminId && <Text >From{'\\u00A0'}{m.sender?.name}</Text>}\r\n        {m.sender?._id === adminId && <Text >Sent to{'\\u00A0'}{m.recipient?.name}</Text>}\r\n        </Box>\r\n\r\n        {m.content}\r\n\r\n        <Text display={\"flex\"} textAlign=\"right\" m={0} p={0} fontSize={\"2xs\"}>\r\n          {m.sender?._id === user._id ? (\r\n            <BsSendCheck />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {formatMessageTime(m.createdAt)}\r\n        </Text>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport Message from \"./Message\";\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  const { user } = ChatState();\r\n  return (\r\n    <div style={{ width: '100%', height: '90%', overflowY: 'auto' }}>\r\n      <Box \r\n        display=\"flex\" \r\n        justifyContent=\"start\" \r\n        alignItems=\"center\" \r\n        flexDir=\"column\" \r\n        background=\"white\"  \r\n        minH={\"100vh\"}\r\n        p={4} \r\n        mb={\"10\"}\r\n        width=\"100%\"\r\n      >\r\n        {messages.map((m, index) => {\r\n          if (!m && !user) {\r\n            return null;\r\n          }\r\n\r\n          const isUserMessage = m.sender?._id === user._id;\r\n\r\n          return (\r\n            <Box\r\n              bg={isUserMessage ? \"#BEE3F8\" : \"#B9F5D0\"}\r\n              borderRadius=\"20px\"\r\n              p=\"5px 15px\"\r\n              mb={\"2\"}\r\n              maxW=\"75%\"\r\n              alignSelf={isUserMessage ? \"flex-end\" : \"flex-start\"}\r\n              key={index}\r\n            >\r\n              <Message m={m} />\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport {\r\n  Box,\r\n  Input,\r\n  Button,\r\n  Text,\r\n  useToast,\r\n  IconButton,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useConnectSocket } from \"../components/config/chatlogics\";\r\nimport { IoIosSend } from \"react-icons/io\";\r\n\r\nconst FloatingChat = ({ onClose }) => {\r\n  const toast = useToast();\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [chatOptions, setChatOptions] = useState([\r\n    \"WSF\",\r\n    \"Coach\",\r\n    \"Provincial Coach\",\r\n    \"National Coach\",\r\n  ]);\r\n  const [selectedChatOption, setSelectedChatOption] = useState(null);\r\n  const [sender, setSender] = useState(null);\r\n  const [loading, setLoading] = useState();\r\n  const [rank, setRank] = useState(false);\r\n  const [sending, setSending] = useState(false);\r\n  const {\r\n    user,\r\n    selectedChat,\r\n    setSelectedChat,\r\n    send,\r\n    setSend,\r\n    messages,\r\n    setMessages,\r\n    national,\r\n    province,\r\n  } = ChatState();\r\n  const navigate = useNavigate();\r\n  const adminId = \"6693a995f6295b8bd90d9301\";\r\n  const socket = useConnectSocket(user?.token);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      user?._id === adminId ||\r\n      user?.coach ||\r\n      province?.provincialCoach._id === user?._id ||\r\n      national?.nationalCoach._id === user?._id\r\n    ) {\r\n      setRank(true);\r\n    }\r\n  }, [user, national, province, setRank]);\r\n\r\n  useEffect(() => {\r\n    if (user.provinces === undefined) {\r\n      setChatOptions((prevOptions) =>\r\n        prevOptions.filter((option) => option !== \"Provincial Coach\")\r\n      );\r\n    }\r\n  }, [user.provinces]);\r\n\r\n  useEffect(() => {\r\n    if (selectedChatOption === \"Coach\" && !user?.physicalCoach) {\r\n      navigate(\"/clubs\");\r\n      toast({\r\n        title: \"You've not joined a Club\",\r\n        description: \"Join a club or make one as you'd please\",\r\n        status: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom-left\",\r\n      });\r\n      setSelectedChatOption(null)\r\n      return;\r\n    } else if (selectedChatOption === \"Provincial Coach\" && !province) {\r\n      setSelectedChatOption(null)\r\n      navigate(\"/province\");\r\n      toast({\r\n        title: \"Provincial Samma Association seat is empty!\",\r\n        description: \"Apply for Interim\",\r\n        status: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom-left\",\r\n      });\r\n      return\r\n    } else if (selectedChatOption === \"National Coach\" && !national) {\r\n      setSelectedChatOption(null)\r\n      navigate(\"/national\");\r\n      toast({\r\n        title: \"National Samma Association seat is empty!\",\r\n        description: \"Apply for Interim\",\r\n        status: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom-left\",\r\n      });\r\n      return;\r\n    }\r\n  }, [selectedChatOption, navigate, user, national, province, toast]);\r\n\r\n  const fetchMessages = useCallback(async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(`/api/message/${user._id}`, config);\r\n\r\n      setMessages(data);\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      setLoading(false);\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  }, [toast, user]);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n  }, [fetchMessages]);\r\n\r\n  useEffect(() => {\r\n    if (selectedChatOption === \"Coach\") {\r\n      setSender(user.physicalCoach);\r\n    } else if (selectedChatOption === \"WSF\" && user) {\r\n      setSender(user.wsf);\r\n    } else if (selectedChatOption === \"Provincial Coach\" && province) {\r\n      setSender(province.provincialCoach._id);\r\n    } else if (selectedChatOption === \"National Coach\" && national) {\r\n      setSender(national.nationalCoach._id);\r\n    }\r\n  }, [selectedChatOption, national, province, user, setSender]);\r\n\r\n  useEffect(() => {\r\n    if (selectedChat) {\r\n      setSender(selectedChat);\r\n    }\r\n  }, [selectedChat, setSender]);\r\n\r\n  const sendMessage = async (event) => {\r\n    if ((event && event.type === \"click\") || (event && event.key === \"Enter\")) {\r\n      setSending(true);\r\n      const userId = user._id;\r\n  \r\n      if (!selectedChatOption && !rank) {\r\n        toast({\r\n          title: \"Select a recipient\",\r\n          description: \"Please choose whom you want to chat with.\",\r\n          status: \"info\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n        setSending(false);\r\n        return;\r\n      }\r\n  \r\n      if (rank && !selectedChat && userId !== adminId) {\r\n        toast({\r\n          title: \"Select a recipient!\",\r\n          description: \"Please choose whom you want to reply to...\",\r\n          status: \"info\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n        setSending(false);\r\n        return;\r\n      }\r\n  \r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n  \r\n        // Send message to backend\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          { sender: sender, content: newMessage, userId },\r\n          config\r\n        );\r\n  \r\n        // Update messages state based on sender\r\n        if (userId === adminId) {\r\n          // If admin, construct the new message object\r\n          const newMessageObj = {\r\n            content: newMessage.trim(),\r\n            createdAt: new Date(),\r\n            recipient: { WSF: null, _id: '65c7549721abc4f629ae5009', name: 'Broadcast', otherName: 'Ngatia', email: 'josephmpesa23@gmail.com' },\r\n            sender: { _id: '6693a995f6295b8bd90d9301', name: 'j', otherName: 'e', email: 'almanobe2@gmail.com' },\r\n            updatedAt: \"2024-07-01T16:26:45.964Z\",\r\n            __v: 0,\r\n            _id: \"6682d8c501209935692efb9e\"\r\n          };\r\n  \r\n          // Update messages state with the new message object\r\n          setMessages(prevMessages => [...prevMessages, newMessageObj]);\r\n        } else {\r\n          // If regular user, update messages state with the response data\r\n          setMessages(prevMessages => [...prevMessages, data]);\r\n          socket.emit(\"new message\", data);\r\n        }\r\n  \r\n        // Clear input and reset sending state\r\n        setSending(false);\r\n        setNewMessage(\"\");\r\n      } catch (error) {\r\n        console.error(\"Failed to send message:\", error);\r\n        setSending(false);\r\n        toast({\r\n          title: \"Failed to send the Message\",\r\n          description: \"Please try again after some time\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };  \r\n  \r\n  const handleChatClose = () => {\r\n    onClose();\r\n  };\r\n  return (\r\n    <Box\r\n      display={\"flex\"}\r\n      flexDirection={\"column\"}\r\n      position=\"fixed\"\r\n      bottom=\"0\"\r\n      right=\"1\"\r\n      height={\"90vh\"}\r\n      width={{base: \"100%\", md: \"60%\"}}\r\n      borderRadius={4}\r\n      boxShadow=\"dark-lg\"\r\n      p=\"2\"\r\n      rounded=\"md\"\r\n      bg=\"white\"\r\n      zIndex={11}\r\n    >\r\n      <Button p={2} onClick={handleChatClose} border={\"none\"}>\r\n        X\r\n      </Button>\r\n      <Box\r\n        p={2}\r\n        top=\"0\"\r\n        left=\"0\"\r\n        height=\"90%\"\r\n        display=\"flex\"\r\n        flexDir=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems={\"center\"}\r\n        width={\"100%\"}\r\n        background={\"whitesmoke\"}\r\n        \r\n      >\r\n        {!selectedChatOption && !rank && (\r\n          <Box display={\"flex\"} flexDir={\"column\"} bg=\"transparent\">\r\n            <Text>Select whom you want to chat with:</Text>\r\n            {chatOptions.map((option) => (\r\n              <Button\r\n                key={option}\r\n                bg=\"transparent\"\r\n                onClick={() => setSelectedChatOption(option)}\r\n                border={\"none\"}\r\n                p={'2'}\r\n              >\r\n                {option}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n        )}\r\n        {loading ? (\r\n          <Spinner speed='0.65s' size={\"xl\"} />\r\n        ) : (\r\n         <ScrollableChat messages={messages} />\r\n        )}\r\n        <Box position=\"absolute\" bottom={0} width=\"100%\">\r\n          {rank && (\r\n            <Box\r\n              display={\"flex\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n              width={\"100%\"}\r\n            >\r\n              Replying to {selectedChat ? send : \"(select a message please)\"}\r\n              {selectedChat && (\r\n                <Button\r\n                  onClick={() => {\r\n                    setSelectedChat(null);\r\n                    setSend(null);\r\n                  }}\r\n                  background={\"transparent\"}\r\n                  textColor={\"red\"}\r\n                  border={\"none\"}\r\n                >\r\n                  X\r\n                </Button>\r\n              )}\r\n            </Box>\r\n          )}\r\n\r\n          {selectedChatOption && (\r\n            <Box\r\n              display={\"flex\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n              width={\"100%\"}\r\n            >\r\n              Chatting with {selectedChatOption}\r\n              <Button\r\n                onClick={() => setSelectedChatOption(null)}\r\n                background={\"transparent\"}\r\n                textColor={\"red\"}\r\n                border={\"none\"}\r\n              >\r\n                X\r\n              </Button>\r\n            </Box>\r\n          )}\r\n\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            width={\"100%\"}\r\n            background={\"white\"}\r\n            p={2}\r\n          >\r\n            <Input\r\n              placeholder=\"Type your message...\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n            />\r\n            <IconButton isLoading={sending} border={\"none\"} onClick={(event) => sendMessage(event)} p={0} m={1}>\r\n            <IoIosSend/>\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FloatingChat;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport { Box, IconButton, useToast } from \"@chakra-ui/react\";\r\nimport UpperNav from \"../miscellenious/upperNav\";\r\nimport Progress from \"../miscellenious/Progress\";\r\nimport MyPrograms from \"../miscellenious/Myprograms\";\r\nimport FloatingChat from \"../miscellenious/FloatingChat\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport { useConnectSocket } from \"../components/config/chatlogics\";\r\nimport axiosInstance from \"../components/config/axios\";\r\nimport { MdOutlineMarkUnreadChatAlt } from \"react-icons/md\";\r\n//twillio code: S8ZVS4F9BYTUYWM47439RPNR\r\n\r\nconst Dashboard = ({ courses }) => {\r\n  const [chatOpen, setChatOpen] = useState(false);\r\n  const {\r\n    user,\r\n    setUser,\r\n    setClub,\r\n    setMessages,\r\n    notification,\r\n    setNotification,\r\n    setNational,\r\n    setProvince,\r\n  } = ChatState();\r\n  const navigate = useNavigate();\r\n  const [isHovered, setHovered] = useState(false);\r\n  const toast = useToast();\r\n  const socket = useConnectSocket(user);\r\n  const [isSocketConnected, setIsSocketConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      setIsSocketConnected(socket.connected);\r\n\r\n      socket.on('connect', () => {\r\n        setIsSocketConnected(true);\r\n      });\r\n\r\n      socket.on('disconnect', () => {\r\n        setIsSocketConnected(false);\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  const requestClub = useCallback(async () => {\r\n    if (!user?.coach) {\r\n      return;\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await axiosInstance.get(`/api/clubs/${user.coach}`, config);\r\n      setClub(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching Club:\", error);\r\n    }\r\n  }, [user]);\r\n\r\n  // Use another useEffect to call requestClub when user is set\r\n  useEffect(() => {\r\n    if (user) {\r\n      requestClub();\r\n    }\r\n  }, [user, requestClub]);\r\n\r\n  useEffect(() => {\r\n\r\n    if (isSocketConnected) {\r\n    const showNotification = (title, options) => {\r\n      if (Notification.permission === \"granted\") {\r\n        new Notification(title, options);\r\n        const audio = new Audio(\r\n          \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"\r\n        );\r\n        audio.addEventListener(\"error\", (error) => {\r\n          console.error(\"Audio playback error:\", error);\r\n        });\r\n\r\n        audio.play().catch((error) => {\r\n          console.error(\"Audio playback error:\", error);\r\n        });\r\n      } else if (Notification.permission !== \"denied\") {\r\n        Notification.requestPermission().then((permission) => {\r\n          if (permission === \"granted\") {\r\n            new Notification(title, options);\r\n            const audio = new Audio(\r\n              \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"\r\n            );\r\n            audio.addEventListener(\"error\", (error) => {\r\n              console.error(\"Audio playback error:\", error);\r\n            });\r\n\r\n            audio.play().catch((error) => {\r\n              console.error(\"Audio playback error:\", error);\r\n            });\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    const handleMessageReceived = (newMessageReceived) => {\r\n      setNotification([newMessageReceived, ...notification]);\r\n      showNotification(\r\n        \"New Message\",\r\n        {\r\n          body: `New message from ${newMessageReceived.sender.name}`,\r\n          icon: `${newMessageReceived.sender.pic}`,\r\n        },\r\n        () => {\r\n          navigate(\"/dashboard\");\r\n        }\r\n      );\r\n      setMessages((prevMessages) => [...prevMessages, newMessageReceived]);\r\n    };\r\n\r\n    const handleProvincialRequest = (request) => {\r\n      setUser((prevUser) => ({\r\n        ...prevUser,\r\n        provinceRequests: [\r\n          ...prevUser.provinceRequests,\r\n          request.provincialCoach,\r\n        ],\r\n      }));\r\n    };\r\n\r\n    const handleNationalRequest = (request) => {\r\n      setUser((prevUser) => ({\r\n        ...prevUser,\r\n        nationalRequests: [\r\n          ...prevUser.nationalRequests,\r\n          request.nationalCoach,\r\n        ],\r\n      }));\r\n    };\r\n\r\n    const handleCertificates = (certificates) => {\r\n      setUser((prev) => ({\r\n        ...prev,\r\n        certificates: certificates.certificates,\r\n        belt: certificates.belt,\r\n      }));\r\n    };\r\n    socket.on(\"provincial request\", handleProvincialRequest);\r\n    socket.on(\"national request\", handleNationalRequest);\r\n    socket.on(\"certificates\", handleCertificates);\r\n    socket.on(\"message received\", handleMessageReceived);\r\n\r\n    return () => {\r\n      socket.off(\"provincial request\", handleProvincialRequest);\r\n      socket.off(\"national request\", handleNationalRequest);\r\n      socket.off(\"certificates\", handleCertificates);\r\n      socket.off(\"message received\", handleMessageReceived);\r\n    };\r\n }\r\n  }, [socket, navigate, notification, isSocketConnected]);\r\n\r\n  // Combine requests and use a stable function reference\r\n  const fetchClubs = useCallback(async () => {\r\n    if (!user) {\r\n      navigate(\"/\");\r\n      return;\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const [provinceResponse, nationalResponse] = await Promise.all([\r\n        axiosInstance.get(`/api/province/officials/${user.country}/${user.provinces}`, config),\r\n        axiosInstance.get(`/api/national/officials/${user.country}/${user.provinces}`, config)\r\n      ]);\r\n\r\n      const provinceData = provinceResponse.data;\r\n      const nationalData = nationalResponse.data;\r\n\r\n      if (provinceData.length > 0) {\r\n        setProvince(provinceData);\r\n        console.log(provinceData);\r\n      }\r\n\r\n      if (nationalData.length > 0) {\r\n        setNational(nationalData);\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 401) {\r\n        toast({\r\n          title: \"Your session has expired\",\r\n          description: \"Logging out in 8 seconds\",\r\n          duration: 8000,\r\n          status: \"loading\",\r\n          position: \"bottom\",\r\n        });\r\n        console.log(error);\r\n\r\n        setTimeout(() => {\r\n          localStorage.removeItem(\"userInfo\");\r\n          navigate(\"/\");\r\n        }, 8000);\r\n      } else {\r\n        console.log(error);\r\n        toast({\r\n          title: \"An Error Occurred!\",\r\n          description: \"Try again after sometime.\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n    }\r\n  }, [user, navigate, toast]);\r\n\r\n  // Fetch data on mount and when user changes\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    fetchClubs();\r\n  }, [fetchClubs, navigate, user]);\r\n\r\n  return (\r\n    <ErrorBoundary fallback={<p style={{ color: \"white\" }}>Something went wrong</p>} userSelect=\"none\">\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" flexDir=\"column\" width=\"100%\" background=\"white\" position=\"relative\">\r\n        <UpperNav />\r\n        <Box width=\"100%\" mt={20}>\r\n          <Progress userBelt={user?.belt} />\r\n        </Box>\r\n        <MyPrograms courses={courses} user={user} />\r\n        {chatOpen && <FloatingChat onClose={() => setChatOpen(false)} />}\r\n        <IconButton\r\n          display={chatOpen ? \"none\" : \"flex\"}\r\n          position=\"fixed\"\r\n          bottom=\"8%\"\r\n          right=\"10%\"\r\n          icon={\r\n            <MdOutlineMarkUnreadChatAlt\r\n              style={{\r\n                width: isHovered ? \"60px\" : \"40px\",\r\n                transition: \"width 0.3s ease-in-out\",\r\n                color: \"teal\",\r\n                fontSize: \"40px\",\r\n                border: 'none',\r\n              }}\r\n            />\r\n          }\r\n          backgroundColor=\"orange\"\r\n          p={\"2\"}\r\n          boxSize={\"auto\"}\r\n          border=\"none\"\r\n          _hover={{ backgroundColor: \"white\" }}\r\n          onClick={() => setChatOpen(true)}\r\n          onMouseEnter={() => setHovered(true)}\r\n          onMouseLeave={() => setHovered(false)}\r\n          borderRadius=\"full\"\r\n        />\r\n      </Box>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\nexport default Dashboard;\r\n"],"names":["ErrorBoundary","_React$Component","props","_this","_classCallCheck","_callSuper","state","hasError","_inherits","_createClass","key","value","error","info","console","this","_jsxs","Box","display","justifyContent","alignItems","background","width","height","children","flexDirection","_jsx","Text","fontSize","Link","color","href","React","axiosInstance","axios","create","interceptors","response","use","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","_x","apply","arguments","Promise","reject","UserFormValidation","z","object","name","string","min","max","otherName","email","gender","enum","password","confirmPassword","refine","val","ctx","parent","message","passport","regex","selectedCountry","provinces","optional","language","pic","url","useConnectSocket","user","_useState","useState","_useState2","_slicedToArray","socket","setSocket","socketRef","useRef","useEffect","token","current","userId","_id","newSocket","io","query","on","log","reason","connect","attemptNumber","concat","disconnect","makePaymentMpesa","_x3","_x4","_x5","_x6","_makePaymentMpesa","_callee2","amount","phoneNumber","toast","config","_yield$axios$post","_context2","headers","Authorization","post","sent","data","title","status","duration","position","t0","donationsMpesa","_x7","_x8","_x9","_donationsMpesa","_callee3","_yield$axios$post2","_context3","timestamp","messageTime","Date","timeDifference","seconds","Math","floor","minutes","hours","days","toLocaleDateString","hour","minute","month","day","year","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","clubRequests","setClubRequests","_useState3","_useState4","loading","setLoading","ChatState","navigate","useNavigate","fetchClubRequests","useCallback","_yield$axios$get","get","declineRequest","_ref2","clubId","_yield$axios$get2","_Fragment","Button","backgroundColor","_hover","onClick","border","RiTeamLine","length","bottom","right","transform","bg","borderRadius","p","Modal","isCentered","size","ModalOverlay","backdropFilter","ModalContent","ModalHeader","textAlign","ModalCloseButton","ModalBody","flexDir","maxH","map","club","index","Spinner","ModalFooter","textDecor","PasskeyModal","passkey","setPasskey","setError","VStack","spacing","align","HStack","PinInput","onChange","type","autoFocus","PinInputField","colorScheme","process","_ChatState","notification","setNotification","modal","setModal","displayValue","useBreakpointValue","base","md","textVisibility","w","paddingBottom","boxShadow","zIndex","top","Image","src","logo7","visibility","variant","px","userSelect","Requests","Menu","MenuButton","BellIcon","m","Badge","MenuList","pl","notif","MenuItem","filter","n","sender","admission","as","Avatar","cursor","IconButton","icon","TiThMenuOutline","Drawer","placement","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","CloseButton","DrawerBody","padding","isDisabled","MdLiveTv","RiAdminLine","localStorage","removeItem","PiSignOutLight","ProgressContainer","styled","div","_templateObject","_taggedTemplateLiteral","ProgressSlot","_templateObject2","progressAnimation","keyframes","_templateObject3","level","blinkingAnimation","_templateObject4","ProgressArrow","_templateObject5","_ref3","userBelt","indexOf","belt","marginTop","fontWeight","GiBlackBelt","style","Paycheck","course","useToast","setUser","show","setShow","setPhoneNumber","nothing","description","update","_objectSpread","off","handleAfterPay","isClosable","textColor","userCertificatesLength","certificates","courseIndex","id","fontFamily","rounded","PayPalScriptProvider","options","clientId","PayPalButtons","createOrder","actions","order","purchase_units","currency_code","toFixed","onApprove","_ref4","capture","then","details","subscriptionID","_x2","onCancel","useColorModeValue","alt","Input","placeholder","e","target","minLength","maxLength","Divider","parseInt","courses","handleDownload","a","document","createElement","download","click","progressLevels","Flex","textDecoration","_m$sender4","_m$sender5","_m$recipient","_m$sender6","_m$sender7","_m$sender8","_m$recipient2","_m$sender9","setSelectedChat","setSend","adminId","_m$sender","_m$sender2","_m$sender3","LuBadgeCheck","recipient","content","BsSendCheck","formatMessageTime","createdAt","messages","overflowY","minH","mb","isUserMessage","maxW","alignSelf","Message","newMessage","setNewMessage","chatOptions","setChatOptions","_useState5","_useState6","selectedChatOption","setSelectedChatOption","_useState7","_useState8","setSender","_useState9","_useState10","_useState11","_useState12","rank","setRank","_useState13","_useState14","sending","setSending","selectedChat","send","setMessages","national","province","coach","provincialCoach","nationalCoach","undefined","prevOptions","option","physicalCoach","fetchMessages","wsf","sendMessage","event","newMessageObj","trim","WSF","updatedAt","__v","prevMessages","_toConsumableArray","emit","left","speed","ScrollableChat","isLoading","IoIosSend","chatOpen","setChatOpen","setClub","setNational","setProvince","isHovered","setHovered","isSocketConnected","setIsSocketConnected","connected","requestClub","handleMessageReceived","newMessageReceived","Notification","permission","audio","Audio","addEventListener","play","catch","requestPermission","showNotification","body","handleProvincialRequest","request","prevUser","provinceRequests","handleNationalRequest","nationalRequests","handleCertificates","fetchClubs","_yield$Promise$all","_yield$Promise$all2","provinceResponse","nationalResponse","provinceData","nationalData","all","country","setTimeout","fallback","UpperNav","mt","Progress","MyPrograms","FloatingChat","MdOutlineMarkUnreadChatAlt","transition","boxSize","onMouseEnter","onMouseLeave"],"sourceRoot":""}