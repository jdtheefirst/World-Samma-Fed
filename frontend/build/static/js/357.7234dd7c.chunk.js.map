{"version":3,"file":"static/js/357.7234dd7c.chunk.js","mappings":"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","sources":["components/config/axios.js","pages/AdminWorkSlot.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create();\r\naxiosInstance.interceptors.response.use(\r\n  async (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Flex,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Heading,\r\n  Image,\r\n  Input,\r\n  Spinner,\r\n  Text,\r\n  Textarea,\r\n  VStack,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport UpperNav from \"../miscellenious/upperNav\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axiosInstance from \"../components/config/axios\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport { GrUserAdmin } from \"react-icons/gr\";\r\nimport { MdLiveTv } from \"react-icons/md\";\r\n\r\nconst AdminWorkSlot = () => {\r\n  const [submissions, setSubmissions] = useState([]);\r\n  const [reject, setReject] = useState(false);\r\n  const [approaved, setApproaved] = useState(false);\r\n  const [certificate, setCertificate] = useState(undefined);\r\n  const [sendCertificate, setSendCertificate] = useState(undefined);\r\n  const [certificateLoading, setCertificateLoading] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [receiver, setReceiver] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const toast = useToast();\r\n  const navigate = useNavigate();\r\n  const { setMessages, user } = ChatState();\r\n\r\n  const handleReject = (submissionId, passport, video) => {\r\n    console.log(`Rejected submission with ID: ${submissionId}`);\r\n    setLoading(true);\r\n    if (!submissionId || !user) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const publicPassportId = passport.split(\"/\").pop().split(\".\")[0];\r\n      const publicVideoId = video.split(\"/\").pop().split(\".\")[0];\r\n\r\n      const data = {\r\n        publicIds: [publicPassportId, publicVideoId],\r\n      };\r\n\r\n      axiosInstance\r\n        .post(`/api/submit/delete/${submissionId}`, data, config)\r\n        .then(async (response) => {\r\n          setSubmissions(response.data);\r\n          setLoading(true);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          if (error.response && error.response.status === 401) {\r\n            toast({\r\n              title: \"Your session has expired\",\r\n              description: \"Logging out in less than 8 seconds\",\r\n              duration: 8000,\r\n              status: \"loading\",\r\n              position: \"bottom\",\r\n            });\r\n\r\n            setTimeout(() => {\r\n              localStorage.removeItem(\"userInfo\");\r\n              navigate(\"/\");\r\n            }, 8000);\r\n          }\r\n        });\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(\"Error fetching Club:\", error);\r\n    }\r\n  };\r\n\r\n  const submitHandler = useCallback(async () => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    if (sendCertificate && receiver) {\r\n      try {\r\n        await axios.get(\r\n          `/api/user/certificate/${receiver}`,\r\n          { sendCertificate },\r\n          config\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      return;\r\n    }\r\n    try {\r\n      const { data } = await axios.get(`/api/submit`, config);\r\n      setSubmissions(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  }, [toast, user, receiver, sendCertificate]);\r\n\r\n  useEffect(() => {\r\n    submitHandler();\r\n  }, [submitHandler]);\r\n\r\n  const handleCertificate = () => {\r\n    if (!certificate) {\r\n      toast({\r\n        title: \"Select a certificate please.\",\r\n        status: \"info\",\r\n      });\r\n    }\r\n    setCertificateLoading(true);\r\n\r\n    let data = new FormData();\r\n    data.append(\"file\", certificate);\r\n    data.append(\"upload_preset\", \"worldsamma\");\r\n\r\n    fetch(\"https://api.cloudinary.com/v1_1/dsdlgmgwi/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setSendCertificate(data.url);\r\n        setCertificateLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setCertificateLoading(false);\r\n        toast({\r\n          title: \"Error Occurred uploading your passport photo.\",\r\n          description: \"Please try again later.\",\r\n          duration: 5000,\r\n          status: \"error\",\r\n        });\r\n      });\r\n  };\r\n  const sendMessage = async () => {\r\n    if (!message || !user || !receiver) {\r\n      return;\r\n    }\r\n    try {\r\n      const userId = user._id;\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/message\",\r\n        { sender: receiver, content: message, userId },\r\n        config\r\n      );\r\n      setMessage(\"\");\r\n      setMessages((prevMessages) => [...prevMessages, data]);\r\n\r\n      socket.emit(\"new message\", data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({\r\n        title: \"Failed to send the Message\",\r\n        description: \"Please try again after some time\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n  const goToLivePage = () => {\r\n    navigate(`/live`);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display={\"flex\"}\r\n      width={\"100%\"}\r\n      justifyContent={\"start\"}\r\n      alignItems={\"center\"}\r\n      flexDir={\"column\"}\r\n      overflowY={\"auto\"}\r\n      background={\"white\"}\r\n      p={\"6\"}\r\n    >\r\n      {\" \"}\r\n      <UpperNav />\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent={\"start\"}\r\n        alignItems={\"center\"}\r\n        flexDir={\"column\"}\r\n        overflow={\"auto\"}\r\n        width={\"100%\"}\r\n        minH={\"100vh\"}\r\n      >\r\n        <Box\r\n          mt={20}\r\n          display={\"flex\"}\r\n          justifyContent={\"space-around\"}\r\n          alignItems={\"center\"}\r\n          width={\"100%\"}\r\n          mb={\"4\"}\r\n        >\r\n          <Heading>W.S.F</Heading>\r\n          <Flex>\r\n            <GrUserAdmin /> &nbsp; <>Admin</>\r\n          </Flex>\r\n        </Box>\r\n\r\n        <Divider mb={\"4\"} />\r\n\r\n        <Box\r\n          display={\"flex\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          mb={\"4\"}\r\n        >\r\n          <Text p={\"6\"}>Go Live Now</Text>\r\n          <MdLiveTv\r\n            onClick={goToLivePage}\r\n            fontSize={\"100px\"}\r\n            color=\"red\"\r\n            cursor=\"pointer\"\r\n          />\r\n        </Box>\r\n\r\n        <Divider mb={\"4\"} />\r\n        <Text\r\n          textAlign={\"center\"}\r\n          fontSize={\"sm\"}\r\n          fontWeight={500}\r\n          bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n          p={2}\r\n          width={{ base: \"100%\", md: \"60%\" }}\r\n          color={\"green.500\"}\r\n          rounded={\"full\"}\r\n          mb={\"4\"}\r\n        >\r\n          {submissions.length} submissions.\r\n        </Text>\r\n        {submissions.length === 0 && (\r\n          <Text mb={\"4\"} textAlign={\"center\"}>\r\n            Work will be posted here.\r\n          </Text>\r\n        )}\r\n        {submissions.length > 0 &&\r\n          submissions.map((submission) => (\r\n            <VStack key={submission._id} m={3} spacing={4}>\r\n              <Box\r\n                display={\"flex\"}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n                ml={2}\r\n                width={\"100%\"}\r\n              >\r\n                {submission.coachAssisted && (\r\n                  <Text\r\n                    fontSize={\"sm\"}\r\n                    fontWeight={500}\r\n                    bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n                    px={6}\r\n                    p={\"3\"}\r\n                    m={1}\r\n                    color={\"green.500\"}\r\n                    rounded={\"full\"}\r\n                  >\r\n                    Coach's assisted student rank upgrading\r\n                  </Text>\r\n                )}\r\n                <Image\r\n                  src={submission.passport}\r\n                  alt=\"Passport\"\r\n                  width=\"100\"\r\n                  height=\"100\"\r\n                />\r\n                <Box justifyContent={\"start\"} ml={2} textAlign={\"start\"}>\r\n                  <Heading size=\"md\">\r\n                    Name: {submission.student.name}{\" \"}\r\n                    {submission.student.otherName}\r\n                  </Heading>\r\n                  <Text>Admission: {submission.student.admission}</Text>\r\n                  <Text>Current Rank: {submission.student.belt}</Text>\r\n                </Box>\r\n              </Box>\r\n              <Box>\r\n                <video controls width=\"300\" height=\"200\">\r\n                  <source src={submission.video} type=\"video/mp4\" />\r\n                </video>\r\n              </Box>\r\n              <Box\r\n                display={\"flex\"}\r\n                width={{ base: \"90%\", md: \"60%\" }}\r\n                justifyContent={\"space-between\"}\r\n              >\r\n                {\" \"}\r\n                <Button\r\n                  isDisabled={reject}\r\n                  onClick={() => {\r\n                    setApproaved(true);\r\n                  }}\r\n                  colorScheme=\"green\"\r\n                >\r\n                  Approve\r\n                </Button>\r\n                <Button\r\n                  isDisabled={approaved || submission.coachAssisted}\r\n                  onClick={() => {\r\n                    setReject(true);\r\n                  }}\r\n                  colorScheme=\"red\"\r\n                >\r\n                  {loading && <Spinner size={\"sm\"} />}\r\n                  Reject\r\n                </Button>\r\n              </Box>\r\n              {reject && (\r\n                <>\r\n                  <Textarea\r\n                    placeholder=\"Please leave a message for student...\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    onClick={() => {\r\n                      sendMessage();\r\n                      handleReject(\r\n                        submission._id,\r\n                        submission.passport,\r\n                        submission.video\r\n                      );\r\n                      setReceiver(submission.student._id);\r\n                    }}\r\n                  >\r\n                    Send Message\r\n                  </Button>\r\n                </>\r\n              )}\r\n              {approaved && (\r\n                <>\r\n                  {\" \"}\r\n                  <FormControl isInvalid={!certificate}>\r\n                    <FormLabel>Certificate</FormLabel>\r\n                    <Input\r\n                      type=\"file\"\r\n                      accept=\"application/pdf\"\r\n                      onChange={(e) => setCertificate(e.target.files[0])}\r\n                    />\r\n                    {certificateLoading && <p>Uploading passport photo...</p>}\r\n                    <FormErrorMessage>\r\n                      Please select a certificate.\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                  <Button\r\n                    onClick={() => {\r\n                      handleCertificate();\r\n                      handleReject(\r\n                        submission._id,\r\n                        submission.passport,\r\n                        submission.video\r\n                      );\r\n                      setReceiver(submission.student._id);\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </VStack>\r\n          ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AdminWorkSlot;\r\n"],"names":["axiosInstance","axios","create","interceptors","response","use","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","_x","apply","arguments","error","Promise","reject","_useState","useState","_useState2","_slicedToArray","submissions","setSubmissions","_useState3","_useState4","setReject","_useState5","_useState6","approaved","setApproaved","_useState7","undefined","_useState8","certificate","setCertificate","_useState9","_useState10","sendCertificate","setSendCertificate","_useState11","_useState12","certificateLoading","setCertificateLoading","_useState13","_useState14","loading","setLoading","_useState15","_useState16","receiver","setReceiver","_useState17","_useState18","message","setMessage","toast","useToast","navigate","useNavigate","_ChatState","ChatState","setMessages","user","handleReject","submissionId","passport","video","console","log","concat","config","headers","Authorization","token","data","publicIds","split","pop","post","then","catch","status","title","description","duration","position","setTimeout","localStorage","removeItem","submitHandler","useCallback","_callee2","_yield$axios$get","_context2","get","t0","sent","t1","isClosable","useEffect","sendMessage","_ref3","_callee3","userId","_yield$axios$post","_context3","_id","sender","content","prevMessages","_toConsumableArray","socket","emit","_jsxs","Box","display","width","justifyContent","alignItems","flexDir","overflowY","background","p","children","_jsx","UpperNav","overflow","minH","mt","mb","Heading","Flex","GrUserAdmin","_Fragment","Divider","Text","MdLiveTv","onClick","fontSize","color","cursor","textAlign","fontWeight","bg","useColorModeValue","base","md","rounded","length","map","submission","VStack","m","spacing","ml","coachAssisted","px","Image","src","alt","height","size","student","name","otherName","admission","belt","controls","type","Button","isDisabled","colorScheme","Spinner","Textarea","placeholder","value","onChange","e","target","FormControl","isInvalid","FormLabel","Input","accept","files","FormErrorMessage","FormData","append","fetch","method","body","res","json","url","err","handleCertificate"],"sourceRoot":""}