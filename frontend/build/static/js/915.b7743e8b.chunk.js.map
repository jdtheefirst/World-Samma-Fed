{"version":3,"file":"static/js/915.b7743e8b.chunk.js","mappings":"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","sources":["components/FooterAchieves.js","components/config/chatlogics.js","miscellenious/Requests.js","miscellenious/Password.jsx","miscellenious/upperNav.js","Authentication/club.js","pages/Clubs.js","../node_modules/@chakra-ui/react/dist/esm/grid/grid-item.mjs","../node_modules/@chakra-ui/react/dist/esm/grid/grid.mjs","../node_modules/@chakra-ui/react/dist/esm/link/link.mjs"],"sourcesContent":["import React from 'react';\r\nimport { Grid, GridItem, Box, Text, Link } from '@chakra-ui/react';\r\n\r\nconst FooterAchieves = () => {\r\n  const data = [\r\n    {\r\n      title: \"National Coach Role:\",\r\n      items: [\r\n        {\r\n          subtitle: \"Qualification Requirements:\",\r\n          description: \"To become a national coach, one must first be a WSF registered province coach or lead a WSF registered club in a country without provinces. They must be approved by other province coaches to become their national leader. Responsibilities include managing national funds and organizing international tournaments, national seminars and black belt graduation ceremonies in conjuction with the WSF national committee.\",\r\n        },\r\n        {\r\n          subtitle: \"Interim Appointment:\",\r\n          description: \"The interim role lasts for a maximum of one year(then elections), during which the coach is responsible for managing national-level activities, funds and ensuring smooth operations.\",\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Province Coach Role:\",\r\n      items: [\r\n        {\r\n          subtitle: \"Qualification Criteria:\",\r\n          description: \"A province coach must be approved by 20 other WSF registered coaches in his/her province, hold a black belt and lead a WSF registered club. Responsibilities include organizing local tournaments, seminars and under-belts graduation ceremonies in conjuction with the WSF province committee.\",\r\n        },\r\n        {\r\n          subtitle: \"Interim Appointment:\",\r\n          description: \"The interim role also lasts for a maximum of one year(then elections), during which the coach is responsible for managing province-level activities, funds and ensuring smooth operations.\",\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Club Creation and Student Training Role:\",\r\n      items: [\r\n        {\r\n          subtitle: \"Club Establishment:\",\r\n          description: \"Students can create clubs after Orange belt certification. A club can only be WSF registered (badged) once it has 20 registered students.\",\r\n        },\r\n        {\r\n          subtitle: \"Student Registration and Training:\",\r\n          description: \"Coaches can register students and earn income per student. They can train students up to the belt levels they have achieved.\",\r\n        }\r\n      ]\r\n    }\r\n  ];  \r\n  return (\r\n    <Grid \r\n      templateColumns={{ base: '1fr', md: 'repeat(6, 1fr)' }} \r\n      gap={2} \r\n      m={2} \r\n      mt={0}\r\n      userSelect=\"none\"\r\n    >\r\n      {data.map((section, index) => (\r\n        <GridItem \r\n          key={index} \r\n          colSpan={{ base: 6, md: 2 }} \r\n          h='auto' \r\n          bg='tomato' \r\n          p={4} \r\n          borderRadius={4}\r\n        >\r\n          <Box fontSize=\"small\">\r\n            <Text fontSize=\"xl\" fontWeight=\"bold\" mb={2}>{section.title}</Text>\r\n            {section.items.map((item, idx) => (\r\n              <Text mb={3} key={idx}>\r\n                <strong style={{ padding: 2 }}>{item.subtitle}</strong>\r\n                {item.description} \r\n                {item.link && (\r\n                  <Link p={1} color=\"blue.500\" href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    here\r\n                  </Link>\r\n                )}\r\n              </Text>\r\n            ))}\r\n          </Box>\r\n        </GridItem>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FooterAchieves;","import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { z } from \"zod\";\r\n\r\nexport const UserFormValidation = z.object({\r\n  name: z\r\n    .string()\r\n    .min(2, \"Name must be at least 2 characters\")\r\n    .max(50, \"Name must be at most 50 characters\"),\r\n  otherName: z\r\n    .string()\r\n    .min(2, \"Other name must be at least 2 characters\")\r\n    .max(50, \"Other name must be at most 50 characters\"),\r\n  email: z.string().email(\"Invalid email address\"),\r\n  gender: z.enum([\"male\", \"female\", \"other\"]),\r\n  password: z\r\n    .string()\r\n    .min(4, \"Password must be at least 8 characters long\")\r\n    .max(100, \"Password must be at most 100 characters\"),\r\n  confirmPassword: z\r\n    .string()\r\n    .min(4, \"Confirm password must be at least 8 characters long\")\r\n    .max(100, \"Confirm password must be at most 100 characters\")\r\n    .refine((val, ctx) => val === ctx.parent.password, {\r\n      message: \"Passwords do not match\",\r\n    }),\r\n  passport: z.string().regex(/^\\d{8,15}$/, \"Invalid passport/ID number\"),\r\n  selectedCountry: z.string().min(2, \"Country is required\"),\r\n  provinces: z.string().optional(),\r\n  language: z.string().min(2, \"Language is required\"),\r\n  pic: z.string().url(\"Profile picture is required\"),\r\n});\r\n\r\nexport const isSameSenderMargin = (messages, m, i, userId) => {\r\n  const isCurrentUserSender = m.sender?.$oid === userId;\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender?.$oid === m.sender?.$oid &&\r\n    !isCurrentUserSender\r\n  ) {\r\n    return 33;\r\n  } else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender?.$oid !== m.sender?.$oid &&\r\n      !isCurrentUserSender) ||\r\n    (i === messages.length - 1 && !isCurrentUserSender)\r\n  ) {\r\n    return 0;\r\n  } else {\r\n    return \"auto\";\r\n  }\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1]?.sender?._id !== m.sender?._id ||\r\n      messages[i + 1]?.sender?._id === undefined) &&\r\n    messages[i]?.sender?._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  const lastMessageSenderId = messages[messages.length - 1].sender?.$oid;\r\n  return (\r\n    i === messages.length - 1 &&\r\n    lastMessageSenderId !== userId &&\r\n    lastMessageSenderId\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender?.$oid === m.sender?.$oid;\r\n};\r\n\r\nexport const getSenderName = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n};\r\nexport const getSenderId = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1]._id : users[0]._id;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, user) => {\r\n  return user[0]._id === loggedUser._id ? user[1] : user[0];\r\n};\r\n\r\nexport async function getUserById(userId, token) {\r\n  if (!userId && !token) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/user/getuserid/${userId}`, config);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function useConnectSocket(user) {\r\n  const [socket, setSocket] = useState(null);\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!user || !user.token) {\r\n      return;\r\n    }\r\n\r\n    // Check if the socket already exists\r\n    if (socketRef.current) {\r\n      setSocket(socketRef.current);\r\n      return;\r\n    }\r\n\r\n    const userId = user._id;\r\n    const newSocket = io(\"/\", {\r\n      query: { token: user.token, userId },\r\n    });\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"connected\");\r\n      setSocket(newSocket); // Set socket state after connection\r\n    });\r\n\r\n    newSocket.on(\"disconnect\", (reason) => {\r\n      console.log(\"Socket.IO disconnected due to:\", reason);\r\n      if (reason === \"io server disconnect\") {\r\n        // Handle server-side disconnections\r\n        newSocket.connect();\r\n      }\r\n    });\r\n\r\n    newSocket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      console.log(`Reconnection attempt ${attemptNumber}`);\r\n    });\r\n\r\n    newSocket.on(\"error\", (error) => {\r\n      console.error(\"Socket.IO error:\", error);\r\n    });\r\n\r\n    // Update socketRef with the new socket instance\r\n    socketRef.current = newSocket;\r\n\r\n    // Clean up function to disconnect socket when the component unmounts\r\n    return () => {\r\n      if (newSocket) {\r\n        newSocket.disconnect();\r\n      }\r\n      socketRef.current = null;\r\n    };\r\n  }, [user]); // Only rerun if user changes\r\n\r\n  return socket;\r\n}\r\n\r\nexport async function makePaymentMpesa(amount, phoneNumber, user, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/makepaymentmpesa/${user._id}?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {}\r\n}\r\n\r\nexport async function donationsMpesa(amount, phoneNumber, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/donationsmpesa?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function handleApprove(accountType, type, user, setUser) {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/paycheck/${user._id}/${type}/${accountType}`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    const userData = await {\r\n      ...user,\r\n      accountType: data.accountType,\r\n      subscription: data.subscription,\r\n      day: data.day,\r\n    };\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(userData));\r\n    setUser(userData);\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw new Error(\"Error occurred\", error);\r\n  }\r\n}\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  Button,\r\n  Text,\r\n  Box,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RiTeamLine } from \"react-icons/ri\";\r\n\r\nconst Requests = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [clubRequests, setClubRequests] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { user } = ChatState();\r\n  const navigate = useNavigate();\r\n\r\n  const fetchClubRequests = useCallback(async () => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/github/something/${user._id}`,\r\n        config\r\n      );\r\n      setClubRequests(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching club requests:\", error);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchClubRequests();\r\n    }\r\n  }, [user, fetchClubRequests]);\r\n  const declineRequest = async (clubId) => {\r\n    if (!user || !clubId) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/decline/request/${clubId}/${user._id}`,\r\n        config\r\n      );\r\n      setClubRequests(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(\"Error fetching club requests/decline:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        backgroundColor={\"white\"}\r\n        _hover={{ backgroundColor: \"transparent\" }}\r\n        onClick={onOpen}\r\n        border={\"none\"}\r\n      >\r\n        <RiTeamLine fontSize={\"20px\"} border={\"none\"} />\r\n        {clubRequests && clubRequests.length > 0 && (\r\n          <Text\r\n            position=\"absolute\"\r\n            bottom=\"70%\"\r\n            right=\"70%\"\r\n            transform=\"translate(50%, 0)\"\r\n            bg=\"red.500\"\r\n            borderRadius=\"50%\"\r\n            width=\"2px\"\r\n            height=\"2px\"\r\n            p={1.5}\r\n          ></Text>\r\n        )}\r\n        <Text />\r\n      </Button>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose} isCentered size={\"sm\"}>\r\n        <ModalOverlay\r\n          bg=\"blackAlpha.300\"\r\n          backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n        />\r\n        <ModalContent>\r\n          <ModalHeader textAlign={\"center\"}>Clubs Requests</ModalHeader>\r\n          <ModalCloseButton border={\"none\"} />\r\n          <ModalBody\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            flexDir={\"column\"}\r\n            maxH={\"300px\"}\r\n          >\r\n            {clubRequests && clubRequests.length > 0 ? (\r\n              clubRequests.map((club, index) => (\r\n                <Box\r\n                  display={\"flex\"}\r\n                  justifyContent={\"space-between\"}\r\n                  alignItems={\"center\"}\r\n                  width={\"100%\"}\r\n                  key={index}\r\n                >\r\n                  <Button\r\n                    key={club._id}\r\n                    justifyContent={\"space-between\"}\r\n                    onClick={() => navigate(`/showclub/${club._id}`)}\r\n                    border={\"none\"}\r\n                  >\r\n                    {index + 1}. Club Name: {club.name}\r\n                  </Button>\r\n                  <Button\r\n                    background={\"#f05e56\"}\r\n                    onClick={() => declineRequest(club._id)}\r\n                    border={\"none\"}\r\n                  >\r\n                    {loading ? <Spinner size={\"small\"} /> : `Decline`}\r\n                  </Button>\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <>\r\n                <Text>All club requests have been replied to.</Text>\r\n              </>\r\n            )}\r\n          </ModalBody>\r\n\r\n          <ModalFooter fontSize={\"small\"} textDecor={\"underline\"}>\r\n            These requests were made by club coaches.\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default Requests;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalCloseButton,\r\n  Button,\r\n  HStack,\r\n  PinInput,\r\n  PinInputField,\r\n  Text,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const PasskeyModal = ({ isOpen, onClose }) => {\r\n  const [passkey, setPasskey] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const validatePasskey = () => {\r\n    if (passkey === process.env.REACT_APP_ADMIN_PASSKEY) {\r\n      navigate(\"/admin\");\r\n      onClose(); // Close the modal after successful validation\r\n    } else {\r\n      setError(\"Invalid passkey. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader textAlign=\"center\">Admin Access Verification</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <VStack spacing={4} align=\"center\">\r\n            <Text>To access the admin page, please enter the passkey.</Text>\r\n            <HStack>\r\n              <PinInput\r\n                value={passkey}\r\n                onChange={(value) => {\r\n                  setPasskey(value);\r\n                  setError(\"\"); // Clear error on input change\r\n                }}\r\n                type=\"number\"\r\n                autoFocus\r\n              >\r\n                <PinInputField />\r\n                <PinInputField />\r\n                <PinInputField />\r\n                <PinInputField />\r\n                <PinInputField />\r\n                <PinInputField />\r\n              </PinInput>\r\n            </HStack>\r\n            {error && <Text color=\"red.500\">{error}</Text>}\r\n          </VStack>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button colorScheme=\"blue\" onClick={validatePasskey} width=\"full\">\r\n            Enter Admin Passkey\r\n          </Button>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Badge,\r\n  Image,\r\n  useBreakpointValue,\r\n  IconButton,\r\n  CloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { TiThMenuOutline } from \"react-icons/ti\";\r\nimport { BellIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport Requests from \"./Requests\";\r\nimport logo7 from \"../assets/images/final.jpeg\";\r\nimport { PiSignOutLight } from \"react-icons/pi\";\r\nimport { PasskeyModal } from \"./Password\";\r\nimport { useState } from \"react\";\r\nimport { RiAdminLine } from \"react-icons/ri\";\r\nimport { MdLiveTv } from \"react-icons/md\";\r\n\r\nfunction UpperNav() {\r\n  const { user, notification, setNotification } = ChatState();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const navigate = useNavigate();\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    setNotification([]);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const displayValue = useBreakpointValue({ base: \"none\", md: \"flex\" });\r\n\r\n  const textVisibility = useBreakpointValue({\r\n    base: \"hidden\",\r\n    md: \"visible\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p={3}\r\n        paddingBottom={2}\r\n        boxShadow=\"2xl\"\r\n        zIndex={10}\r\n        top={0}\r\n        position={\"fixed\"}\r\n      >\r\n        <Image src={logo7} height={12} />\r\n        <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n          <Button\r\n            backgroundColor={\"transparent\"}\r\n            border={\"none\"}\r\n            display={displayValue}\r\n            visibility={textVisibility}\r\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\r\n            onClick={() => {\r\n              navigate(\"/dashboard\");\r\n            }}\r\n          >\r\n            My Programs\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            display={{ base: \"none\", md: \"flex\" }}\r\n            border={\"none\"}\r\n            onClick={onOpen}\r\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\r\n          >\r\n            <Text px={4} userSelect={\"none\"}>\r\n              Discover\r\n            </Text>\r\n          </Button>\r\n          <Requests />\r\n        </Box>\r\n\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1} position=\"relative\" border={\"none\"}>\r\n              <BellIcon fontSize=\"2xl\" p={0} m={0} />\r\n              {notification.length > 0 && (\r\n                <Badge\r\n                  variant=\"subtle\"\r\n                  position=\"absolute\"\r\n                  top=\"-3px\"\r\n                  right=\"-3px\"\r\n                  backgroundColor={\"red\"}\r\n                  zIndex={1}\r\n                  borderRadius={\"50%\"}\r\n                  color=\"white\"\r\n                >\r\n                  {notification.length}\r\n                </Badge>\r\n              )}\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                  p={\"4\"}\r\n                >\r\n                  {`New message from ${\r\n                    notif.sender ? notif.sender.name : \"Coach\"\r\n                  } ADM: ${notif.sender ? notif.sender.admission : \" \"}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton\r\n              as={Button}\r\n              bg=\"white\"\r\n              border={\"none\"}\r\n              _hover={{ backgroundColor: \"transparent\" }}\r\n              onClick={onOpen}\r\n            >\r\n              {displayValue === \"flex\" ? (\r\n                <Avatar\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={user?.name}\r\n                  src={user?.pic}\r\n                />\r\n              ) : (\r\n                <IconButton\r\n                  backgroundColor={\"transparent\"}\r\n                  border={\"none\"}\r\n                  icon={<TiThMenuOutline />}\r\n                />\r\n              )}\r\n            </MenuButton>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <PasskeyModal isOpen={modal} onClose={() => setModal(false)} />\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay\r\n          bg=\"blackAlpha.300\"\r\n          backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n        />\r\n        <DrawerContent>\r\n          <DrawerHeader\r\n            borderBottomWidth=\"1px\"\r\n            display={\"flex\"}\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            Dashboard\r\n            <CloseButton onClick={onClose} border={\"none\"} />\r\n          </DrawerHeader>\r\n          <DrawerBody\r\n            display={\"flex\"}\r\n            flexDir={\"column\"}\r\n            justifyContent={\"start\"}\r\n            width={\"100%\"}\r\n            padding={3}\r\n          >\r\n            <Button\r\n              display={\"flex\"}\r\n              justifyContent={\"left\"}\r\n              alignItems={\"center\"}\r\n              border={\"none\"}\r\n              fontSize={\"medium\"}\r\n              background={\"white\"}\r\n              _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n              onClick={() => navigate(\"/profile\")}\r\n            >\r\n              <Avatar\r\n                size=\"sm\"\r\n                cursor=\"pointer\"\r\n                name={user?.name}\r\n                src={user?.pic}\r\n              />\r\n              <Text p={2} m={1}>\r\n                Profile\r\n              </Text>\r\n            </Button>\r\n            <Button\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              background={\"white\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/dashboard\");\r\n                onClose();\r\n              }}\r\n            >\r\n              My Programs\r\n            </Button>\r\n            <Button\r\n              justifyContent={\"start\"}\r\n              background={\"white\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/clubs\");\r\n                onClose();\r\n              }}\r\n            >\r\n              Clubs\r\n            </Button>\r\n            <Button\r\n              justifyContent={\"left\"}\r\n              background={\"white\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              isDisabled={!user?.provinces}\r\n              onClick={() => {\r\n                navigate(\"/province\");\r\n                onClose();\r\n              }}\r\n            >\r\n              Provincial level\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/national\");\r\n                onClose();\r\n              }}\r\n            >\r\n              National level\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/championships\");\r\n                onClose();\r\n              }}\r\n            >\r\n              International Championship\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              isDisabled\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/stream\");\r\n                onClose();\r\n              }}\r\n            >\r\n              <MdLiveTv /> &nbsp; Streams\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                setModal(true);\r\n                onClose();\r\n              }}\r\n            >\r\n              <RiAdminLine /> &nbsp; Admin\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={logoutHandler}\r\n            >\r\n              <PiSignOutLight /> &nbsp; Sign out\r\n            </Button>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpperNav;\r\n","import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Image,\r\n  Input,\r\n  Select,\r\n  Text,\r\n  VStack,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport { countries } from \"countries-list\";\r\nimport { getStatesOfCountry } from \"../assets/state\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useConnectSocket } from \"../components/config/chatlogics\";\r\n\r\nexport const ClubRegistration = ({ onClose }) => {\r\n  const { user, club, setClub, setRequests, setUser } = ChatState();\r\n  const [name, setName] = useState(null);\r\n  const [selectedCountry, setSelectedCountry] = useState(user?.country);\r\n  const [provience, setProvience] = useState(user.provinces);\r\n  const [chairperson, setChairperson] = useState(\"\");\r\n  const [viceChair, setViceChair] = useState(\"\");\r\n  const [secretary, setSecretary] = useState(\"\");\r\n  const [subdivisions, setSubdivisions] = useState([]);\r\n  const [suggest, setSuggest] = useState([]);\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n\r\n  const socket = useConnectSocket(user?.token);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"sent request\", (club) => {\r\n        setUser((prevUser) => ({\r\n          ...prevUser,\r\n          clubRequests: [...prevUser.clubRequests, club._id],\r\n        }));\r\n\r\n        setRequests((prev) => ({ ...prev, club }));\r\n      });\r\n    }\r\n  }, [socket, setRequests, setUser]);\r\n\r\n  const countryOptions = Object.entries(countries).map(([code, country]) => ({\r\n    value: country.name,\r\n    label: country.name,\r\n  }));\r\n\r\n  const getUsersWithNoClub = useCallback(async () => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/user/${user.country}/${provience}`,\r\n        config\r\n      );\r\n\r\n      setSuggest(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users with no clubs:\", error);\r\n    }\r\n  }, [user.token, user._id, setSuggest, provience]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    getUsersWithNoClub();\r\n  }, [getUsersWithNoClub, navigate, user]);\r\n\r\n  useEffect(() => {\r\n    if (!user) navigate(\"/dashboard\");\r\n\r\n    const fetchSubdivisions = async () => {\r\n      const states = getStatesOfCountry(selectedCountry);\r\n      setSubdivisions(states);\r\n    };\r\n\r\n    fetchSubdivisions();\r\n  }, [user]);\r\n\r\n  const handleFormClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  const requestClubRequest = useCallback(\r\n    async (userId, event) => {\r\n      if (event) {\r\n        event.preventDefault();\r\n      }\r\n      if (!name) {\r\n        toast({\r\n          title: \"Give your Club a name please\",\r\n        });\r\n        return;\r\n      }\r\n      if (!user) {\r\n        navigate(\"/dashboard\");\r\n        return;\r\n      }\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.get(\r\n          `/api/user/${user.country}/${user.provinces}/${name}/${userId}`,\r\n          config\r\n        );\r\n        setClub(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching Club:\", error);\r\n      }\r\n    },\r\n    [user.token, user._id, setClub]\r\n  );\r\n  const handleCreateClub = async (e) => {\r\n    e.preventDefault();\r\n    if (!chairperson || !secretary || !viceChair || !user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const info = { chairperson, secretary, viceChair };\r\n      const { data } = await axios.post(`/api/club/register`, info, config);\r\n      console.log(data);\r\n      setClub(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack\r\n      backgroundColor={\"whitesmoke\"}\r\n      width={\"100%\"}\r\n      boxShadow=\"dark-lg\"\r\n      p=\"6\"\r\n      rounded=\"md\"\r\n      bg=\"white\"\r\n    >\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent={\"center\"}\r\n        alignItems={\"center\"}\r\n        fontSize={\"large\"}\r\n        width={\"100%\"}\r\n        mt={20}\r\n      >\r\n        <Button fontSize={\"x-large\"} onClick={handleFormClose} width={\"10px\"}>\r\n          X\r\n        </Button>\r\n        <Text fontWeight={\"bold\"} m={1}>\r\n          Club Form\r\n        </Text>\r\n        <Text\r\n          fontSize={\"sm\"}\r\n          fontWeight={500}\r\n          bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n          p={2}\r\n          px={3}\r\n          color={\"green.500\"}\r\n          rounded={\"full\"}\r\n        >\r\n          Status (*{club && club.registration ? \"Registered\" : \"Not registered\"}\r\n          )\r\n        </Text>\r\n      </Box>\r\n      <Box\r\n        m={3}\r\n        p={3}\r\n        borderRadius={3}\r\n        width={{ base: \"97%\", md: \"60%\" }}\r\n        border={\"1px solid #c255ed\"}\r\n      >\r\n        <FormControl id=\"first-name\" isRequired>\r\n          <FormLabel textColor={\"#c255ed\"}>Club name</FormLabel>\r\n          <Input\r\n            placeholder=\"Enter Club Name\"\r\n            value={name || (club && club.name) || \"\"}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"country\" isRequired>\r\n          <FormLabel textColor=\"#c255ed\">Country</FormLabel>\r\n          <Select\r\n            placeholder=\"Select Club country\"\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            width={\"100%\"}\r\n            value={user?.country}\r\n            isDisabled={true}\r\n            onChange={(e) => setSelectedCountry(e.target.value)}\r\n          >\r\n            {countryOptions.map((option) => (\r\n              <option\r\n                key={option.value}\r\n                value={option.value}\r\n                style={{ color: \"black\" }}\r\n              >\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        {selectedCountry && subdivisions ? (\r\n          <FormControl id=\"provinces\" isRequired>\r\n            <FormLabel textColor={\"#c255ed\"}>County/Province</FormLabel>\r\n            <Select\r\n              placeholder=\"Select Club province\"\r\n              display={\"flex\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n              width={\"100%\"}\r\n              value={provience}\r\n              isDisabled={true}\r\n              onChange={(e) => setProvience(e.target.value)}\r\n            >\r\n              {subdivisions &&\r\n                subdivisions.map((subdivision) => (\r\n                  <option\r\n                    key={subdivision.value}\r\n                    value={subdivision.value}\r\n                    style={{ color: \"black\" }}\r\n                  >\r\n                    {subdivision.name}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n        ) : (\r\n          <FormControl id=\"provinces\" isRequired>\r\n            <FormLabel textColor={\"#c255ed\"}>County/Province</FormLabel>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Province\"\r\n              onChange={(e) => setProvience(e.target.value)}\r\n            />\r\n          </FormControl>\r\n        )}\r\n        <FormControl id=\"first-name\" isRequired>\r\n          <FormLabel textColor={\"#c255ed\"}>\r\n            Make requests to members around you.\r\n          </FormLabel>\r\n        </FormControl>\r\n        <Box\r\n          display={\"flex\"}\r\n          flexDir={\"column\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          borderRadius={3}\r\n          width={\"100%\"}\r\n          height={\"200px\"}\r\n          overflow=\"auto\"\r\n        >\r\n          {!suggest && (\r\n            <Text textAlign={\"center\"}>\r\n              No student without a club in this region.\r\n            </Text>\r\n          )}\r\n          {suggest.length > 0 &&\r\n            suggest.map((suggestion) => (\r\n              <Box\r\n                display={\"flex\"}\r\n                justifyContent={\"space-between\"}\r\n                alignItems={\"center\"}\r\n                key={suggestion._id}\r\n                style={{ color: \"black\" }}\r\n                width={\"90%\"}\r\n                m={1}\r\n              >\r\n                <Text fontSize={\"small\"} fontWeight={\"bold\"}>\r\n                  Name: {suggestion.name}, Adm: {suggestion.admission}\r\n                </Text>\r\n                <Button\r\n                  borderRadius={20}\r\n                  isDisabled={\r\n                    club && club.clubRequests.includes(suggestion._id)\r\n                  }\r\n                  onClick={(event) => requestClubRequest(suggestion._id, event)}\r\n                  backgroundColor={\"#c255ed\"}\r\n                >\r\n                  {club && club.clubRequests.includes(suggestion._id)\r\n                    ? \"Request sent\"\r\n                    : \"Send Request\"}\r\n                </Button>\r\n              </Box>\r\n            ))}\r\n        </Box>\r\n        <FormControl id=\"members\" isRequired>\r\n          <FormLabel textColor={\"#c255ed\"}>\r\n            Students enrolled {club && club.members.length}/20\r\n          </FormLabel>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            borderRadius={3}\r\n            width={\"100%\"}\r\n            height={\"100px\"}\r\n            overflow=\"auto\"\r\n            borderTop={\"1px solid #c255ed\"}\r\n            borderBottom={\"1px solid #c255ed\"}\r\n          >\r\n            {club && club.members.length === 0 && (\r\n              <Text textAlign={\"center\"}>\r\n                No members available for this club.\r\n              </Text>\r\n            )}\r\n            {club &&\r\n              club.members.length > 0 &&\r\n              club.members.map((member) => (\r\n                <Button fontSize={\"small\"} fontWeight={\"bold\"} m={1}>\r\n                  Adm: {member.admission}\r\n                </Button>\r\n              ))}\r\n          </Box>\r\n        </FormControl>\r\n        <FormControl id=\"chairman\" isRequired>\r\n          <FormLabel>Chairperson</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"chairman\"\r\n            value={chairperson}\r\n            onChange={(e) => setChairperson(e.target.chairperson)}\r\n            placeholder=\"Input valid adm of the party\"\r\n            isInvalid={\r\n              !club?.members.some((adm) => adm.admission === chairperson)\r\n            }\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"secretary\" isRequired>\r\n          <FormLabel>Secretary</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"secretary\"\r\n            value={secretary}\r\n            placeholder=\"Input valid adm of the party\"\r\n            isInvalid={\r\n              !club?.members.some((adm) => adm.admission === secretary)\r\n            }\r\n            onChange={(e) => setSecretary(e.target.secretary)}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"vice-chairman\" isRequired>\r\n          <FormLabel>Vice Chairperson</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"viceChairman\"\r\n            value={viceChair}\r\n            placeholder=\"Input valid adm of the party\"\r\n            isInvalid={\r\n              !club?.members.some((adm) => adm.admission === viceChair)\r\n            }\r\n            onChange={(e) => setViceChair(e.target.viceChair)}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"provincial-coach\">\r\n          <FormLabel>Coach</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"provincialCoach\"\r\n            value={user?.admission}\r\n            isDisabled={true}\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          colorScheme=\"blue\"\r\n          width=\"100%\"\r\n          style={{ marginTop: 15 }}\r\n          isDisabled={\r\n            club?.members.length < 20 ||\r\n            !chairperson ||\r\n            !secretary ||\r\n            !viceChair\r\n          }\r\n          onClick={() => handleCreateClub()}\r\n        >\r\n          <Text> Register Club </Text>\r\n        </Button>{\" \"}\r\n      </Box>\r\n    </VStack>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Select,\r\n  Spinner,\r\n  Text,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { RxEyeNone } from \"react-icons/rx\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport { getStatesOfCountry, getCountryFlag } from \"../assets/state\";\r\nimport UpperNav from \"../miscellenious/upperNav\";\r\nimport axios from \"axios\";\r\nimport { ClubRegistration } from \"../Authentication/club\";\r\nimport FooterAchieves from \"../components/FooterAchieves\";\r\n\r\nconst Clubs = () => {\r\n  const { user, club } = ChatState();\r\n  const [subdivisions, setSubdivisions] = useState([]);\r\n  const [clubs, setClubs] = useState([]);\r\n  const [province, setProvince] = useState(user?.provinces);\r\n  const [fillForm, setFillForm] = useState(false);\r\n  const navigate = useNavigate();\r\n  const flag = getCountryFlag(user?.country);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const fetchClubs = useCallback(async () => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setClubs([]);\r\n    \r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/${user.country}/${province}`,\r\n        config\r\n      );\r\n      setClubs(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setClubs([]);\r\n      setLoading(false);\r\n    }\r\n  }, [user, setClubs, province ]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    fetchClubs();\r\n  }, [fetchClubs, navigate, user]);\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchSubdivisions = async () => {\r\n      const states = getStatesOfCountry(user?.country);\r\n      setSubdivisions(states);\r\n    };\r\n\r\n    fetchSubdivisions();\r\n  }, [user?.country]);\r\n\r\n  const handleCreateClub = () => {\r\n    const belts = [\r\n      \"Guest\",\r\n      \"Yellow\",\r\n      \"Orange\",\r\n      \"Red\",\r\n      \"Purple\",\r\n      \"Green\",\r\n      \"Blue\",\r\n      \"Brown\",\r\n      \"Black\",\r\n    ];\r\n\r\n    if (user && belts.indexOf(user.belt) >= belts.indexOf(\"Orange\")) {\r\n      setFillForm(true);\r\n    } else {\r\n      toast({\r\n        title: \"You need to elevate your craft to at least Orange Belt!\",\r\n        description: \"Requirements not attained yet\",\r\n        status: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDir=\"column\"\r\n      backgroundColor=\"whitesmoke\"\r\n      width=\"100%\"\r\n      overflowX={\"auto\"}\r\n      justifyContent={\"start\"}\r\n      alignItems={\"center\"}\r\n      minH={\"100vh\"}\r\n    >\r\n        <UpperNav />\r\n      <Text\r\n        textAlign=\"center\"\r\n        fontSize={\"large\"}\r\n        fontWeight={\"bold\"}\r\n        p={3}\r\n        mt={20}\r\n      >\r\n        Country: {user?.country} {flag}\r\n      </Text>\r\n      <Box\r\n        display={\"flex\"}\r\n        flexDir={\"column\"}\r\n        justifyContent={\"center\"}\r\n        alignItems={\"center\"}\r\n        width={{ base: \"97%\", md: \"70%\" }}\r\n        boxShadow=\"dark-lg\"\r\n        p=\"6\"\r\n        rounded=\"md\"\r\n        bg=\"white\"\r\n        fontStyle={\"italic\"}\r\n        mb={\"6\"}\r\n      >\r\n        <FormControl\r\n          id=\"provinces\"\r\n          isRequired\r\n          textAlign={\"center\"}\r\n          width={{ base: \"100%\", md: \"60%\" }}\r\n          p={3}\r\n        >\r\n          <FormLabel textAlign={\"center\"}>Select State</FormLabel>\r\n          <Select\r\n            placeholder=\"Select your province\"\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            width={\"100%\"}\r\n            isDisabled={loading}\r\n            value={province}\r\n            onChange={(e) => {\r\n              setProvince(e.target.value);\r\n              fetchClubs(e.target.value);\r\n            }}\r\n          >\r\n            {subdivisions &&\r\n              subdivisions.map((subdivision, index) => (\r\n                <option\r\n                  key={index}\r\n                  value={subdivision.value}\r\n                  style={{ color: \"black\" }}\r\n                >\r\n                  {subdivision.name}\r\n                </option>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n        <Text fontSize={\"larger\"} fontWeight={\"bold\"} textColor={\"darkgreen\"}>\r\n          Available Clubs in {province}\r\n        </Text>\r\n\r\n        <Box\r\n          display={\"flex\"}\r\n          flexDir={\"column\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          height={\"10rem\"}\r\n          m={1}\r\n          p={0}\r\n          borderRadius={3}\r\n          width={{ base: \"100%\", md: \"80%\" }}\r\n         >\r\n          {\" \"}\r\n          {loading ? (\r\n            <Spinner size={\"xl\"} speed=\"0.65s\" />\r\n          ) : (\r\n            <Box\r\n              display={\"flex\"}\r\n              flexDir={\"column\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n              maxH={\"300px\"}\r\n              width={\"100%\"}\r\n            >\r\n              {clubs.length > 0 ? (\r\n                clubs.map((club, index) => (\r\n                  <Button\r\n                    key={index}\r\n                    width={\"100%\"}\r\n                    border={\"none\"}\r\n                    onClick={() => navigate(`/showclub/${club._id}/${false}`)}\r\n                    mb={\"2\"}\r\n                    justifyContent={\"space-around\"}\r\n                  >\r\n                <Text fontSize={\"xs\"}>{club.name}</Text>\r\n                <Text\r\n                  fontSize={\"xs\"}\r\n                  bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n                  color={\"green.500\"}\r\n                  rounded={\"full\"}\r\n                  p={\"2\"}\r\n                >\r\n                  {club?.registered ? \"Registered\" : \"Unregistered\"}\r\n                </Text>\r\n                  </Button>\r\n                ))\r\n              ) : (\r\n                <>\r\n                  <Text textAlign={\"center\"}>\r\n                  <RxEyeNone />\r\n                  </Text>\r\n\r\n                  <Text fontWeight={\"bold\"}>\r\n                    No clubs available in this region yet.\r\n                  </Text>\r\n                  <Text>Start your own club below and lead the way!</Text>\r\n                </>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </Box>\r\n\r\n        {user?.couch ? (\r\n          <Box m={2}>Your Club</Box>\r\n        ) : (\r\n          <Button\r\n            display={\"flex\"}\r\n            backgroundColor={\"#c255ed\"}\r\n            borderRadius={20}\r\n            fontSize={\"small\"}\r\n            border={\"none\"}\r\n            onClick={() => {\r\n              handleCreateClub();\r\n            }}\r\n            m={2}\r\n          >\r\n              {club && club.registered\r\n                ? \"Continue Registering\"\r\n                : \"Register Club\"}\r\n          </Button>\r\n        )}\r\n      </Box>\r\n      {fillForm && <ClubRegistration onClose={() => setFillForm(false)} />}\r\n      <FooterAchieves/>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Clubs;\r\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { compact, mapResponsive } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nconst GridItem = forwardRef(\n  function GridItem2(props, ref) {\n    const {\n      area,\n      colSpan,\n      colStart,\n      colEnd,\n      rowEnd,\n      rowSpan,\n      rowStart,\n      ...rest\n    } = props;\n    const styles = compact({\n      gridArea: area,\n      gridColumn: spanFn(colSpan),\n      gridRow: spanFn(rowSpan),\n      gridColumnStart: colStart,\n      gridColumnEnd: colEnd,\n      gridRowStart: rowStart,\n      gridRowEnd: rowEnd\n    });\n    return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n  }\n);\nGridItem.displayName = \"GridItem\";\n\nexport { GridItem };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport { Grid };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport { Link };\n"],"names":["_jsx","Grid","templateColumns","base","md","gap","m","mt","userSelect","children","title","items","subtitle","description","map","section","index","GridItem","colSpan","h","bg","p","borderRadius","_jsxs","Box","fontSize","Text","fontWeight","mb","item","idx","style","padding","link","Link","color","href","target","rel","UserFormValidation","z","object","name","string","min","max","otherName","email","gender","enum","password","confirmPassword","refine","val","ctx","parent","message","passport","regex","selectedCountry","provinces","optional","language","pic","url","useConnectSocket","user","_useState","useState","_useState2","_slicedToArray","socket","setSocket","socketRef","useRef","useEffect","token","current","userId","_id","newSocket","io","query","on","console","log","reason","connect","attemptNumber","concat","error","disconnect","makePaymentMpesa","_x3","_x4","_x5","_x6","_makePaymentMpesa","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","amount","phoneNumber","toast","config","_yield$axios$post","wrap","_context2","prev","next","abrupt","headers","Authorization","axios","post","sent","data","status","duration","position","t0","stop","donationsMpesa","_x7","_x8","_x9","_donationsMpesa","_callee3","_yield$axios$post2","_context3","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","clubRequests","setClubRequests","_useState3","_useState4","loading","setLoading","ChatState","navigate","useNavigate","fetchClubRequests","useCallback","_callee","_yield$axios$get","_context","get","declineRequest","_ref2","clubId","_yield$axios$get2","_x","_Fragment","Button","backgroundColor","_hover","onClick","border","RiTeamLine","length","bottom","right","transform","width","height","Modal","isCentered","size","ModalOverlay","backdropFilter","ModalContent","ModalHeader","textAlign","ModalCloseButton","ModalBody","display","justifyContent","alignItems","flexDir","maxH","club","background","Spinner","ModalFooter","textDecor","PasskeyModal","_ref","passkey","setPasskey","setError","VStack","spacing","align","HStack","PinInput","value","onChange","type","autoFocus","PinInputField","colorScheme","process","_ChatState","notification","setNotification","modal","setModal","displayValue","useBreakpointValue","textVisibility","w","paddingBottom","boxShadow","zIndex","top","Image","src","logo7","visibility","variant","px","Requests","Menu","MenuButton","BellIcon","Badge","MenuList","pl","notif","MenuItem","filter","n","sender","admission","as","Avatar","cursor","IconButton","icon","TiThMenuOutline","Drawer","placement","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","CloseButton","DrawerBody","isDisabled","MdLiveTv","RiAdminLine","localStorage","removeItem","PiSignOutLight","ClubRegistration","setClub","setRequests","setUser","setName","country","setSelectedCountry","_useState5","_useState6","provience","setProvience","_useState7","_useState8","chairperson","setChairperson","_useState9","_useState10","viceChair","setViceChair","_useState11","_useState12","secretary","setSecretary","_useState13","_useState14","subdivisions","setSubdivisions","_useState15","_useState16","suggest","setSuggest","useToast","prevUser","_objectSpread","_toConsumableArray","countryOptions","Object","entries","countries","_ref3","label","getUsersWithNoClub","fetchSubdivisions","_ref5","states","getStatesOfCountry","requestClubRequest","_ref6","event","preventDefault","_x2","handleCreateClub","_ref7","_callee4","e","info","_context4","rounded","useColorModeValue","registration","FormControl","id","isRequired","FormLabel","textColor","Input","placeholder","Select","option","subdivision","overflow","suggestion","includes","members","borderTop","borderBottom","member","isInvalid","some","adm","marginTop","clubs","setClubs","province","setProvince","fillForm","setFillForm","flag","getCountryFlag","fetchClubs","overflowX","minH","UpperNav","fontStyle","speed","registered","RxEyeNone","couch","belts","indexOf","belt","FooterAchieves","_excluded","spanFn","span","mapResponsive","forwardRef","props","ref","area","colStart","colEnd","rowEnd","rowSpan","rowStart","rest","_objectWithoutProperties","styles","compact","gridArea","gridColumn","gridRow","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","jsx","chakra","div","__css","displayName","templateAreas","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","useStyleConfig","_omitThemingProps","omitThemingProps","className","isExternal","a","cx"],"sourceRoot":""}