{"version":3,"file":"static/js/820.c81e5078.chunk.js","mappings":"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","sources":["components/config/axios.js","components/config/chatlogics.js","components/config/formatTime.js","miscellenious/PicLogic.js","miscellenious/Skeleton.js","miscellenious/AdmissionForm.js","pages/ProfilePage.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create();\r\naxiosInstance.interceptors.response.use(\r\n  async (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { z } from \"zod\";\r\n\r\nexport const cn = (...inputs) => {\r\n  return twMerge(clsx(inputs));\r\n};\r\n\r\nexport const UserFormValidation = z.object({\r\n  name: z\r\n    .string()\r\n    .min(2, \"Name must be at least 2 characters\")\r\n    .max(50, \"Name must be at most 50 characters\"),\r\n  otherName: z\r\n    .string()\r\n    .min(2, \"Other name must be at least 2 characters\")\r\n    .max(50, \"Other name must be at most 50 characters\"),\r\n  email: z.string().email(\"Invalid email address\"),\r\n  gender: z.enum([\"male\", \"female\", \"other\"]),\r\n  password: z\r\n    .string()\r\n    .min(4, \"Password must be at least 8 characters long\")\r\n    .max(100, \"Password must be at most 100 characters\"),\r\n  confirmPassword: z\r\n    .string()\r\n    .min(4, \"Confirm password must be at least 8 characters long\")\r\n    .max(100, \"Confirm password must be at most 100 characters\")\r\n    .refine((val, ctx) => val === ctx.parent.password, {\r\n      message: \"Passwords do not match\",\r\n    }),\r\n  passport: z.string().regex(/^\\d{8,15}$/, \"Invalid passport/ID number\"),\r\n  selectedCountry: z.string().min(2, \"Country is required\"),\r\n  provinces: z.string().optional(),\r\n  language: z.string().min(2, \"Language is required\"),\r\n  pic: z.string().url(\"Profile picture is required\"),\r\n});\r\n\r\nexport const isSameSenderMargin = (messages, m, i, userId) => {\r\n  const isCurrentUserSender = m.sender?.$oid === userId;\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender?.$oid === m.sender?.$oid &&\r\n    !isCurrentUserSender\r\n  ) {\r\n    return 33;\r\n  } else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender?.$oid !== m.sender?.$oid &&\r\n      !isCurrentUserSender) ||\r\n    (i === messages.length - 1 && !isCurrentUserSender)\r\n  ) {\r\n    return 0;\r\n  } else {\r\n    return \"auto\";\r\n  }\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1]?.sender?._id !== m.sender?._id ||\r\n      messages[i + 1]?.sender?._id === undefined) &&\r\n    messages[i]?.sender?._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  const lastMessageSenderId = messages[messages.length - 1].sender?.$oid;\r\n  return (\r\n    i === messages.length - 1 &&\r\n    lastMessageSenderId !== userId &&\r\n    lastMessageSenderId\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender?.$oid === m.sender?.$oid;\r\n};\r\n\r\nexport const getSenderName = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n};\r\nexport const getSenderId = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1]._id : users[0]._id;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, user) => {\r\n  return user[0]._id === loggedUser._id ? user[1] : user[0];\r\n};\r\n\r\nexport async function getUserById(userId, token) {\r\n  if (!userId && !token) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/user/getuserid/${userId}`, config);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function useConnectSocket(user) {\r\n  const [socket, setSocket] = useState(null);\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!user || !user.token) {\r\n      return;\r\n    }\r\n\r\n    // Check if the socket already exists\r\n    if (socketRef.current) {\r\n      setSocket(socketRef.current);\r\n      return;\r\n    }\r\n\r\n    const userId = user._id;\r\n    const newSocket = io(\"/\", {\r\n      query: { token: user.token, userId },\r\n    });\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"connected\");\r\n      setSocket(newSocket); // Set socket state after connection\r\n    });\r\n\r\n    newSocket.on(\"disconnect\", (reason) => {\r\n      console.log(\"Socket.IO disconnected due to:\", reason);\r\n      if (reason === \"io server disconnect\") {\r\n        // Handle server-side disconnections\r\n        newSocket.connect();\r\n      }\r\n    });\r\n\r\n    newSocket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      console.log(`Reconnection attempt ${attemptNumber}`);\r\n    });\r\n\r\n    newSocket.on(\"error\", (error) => {\r\n      console.error(\"Socket.IO error:\", error);\r\n    });\r\n\r\n    // Update socketRef with the new socket instance\r\n    socketRef.current = newSocket;\r\n\r\n    // Clean up function to disconnect socket when the component unmounts\r\n    return () => {\r\n      if (newSocket) {\r\n        newSocket.disconnect();\r\n      }\r\n      socketRef.current = null;\r\n    };\r\n  }, [user]); // Only rerun if user changes\r\n\r\n  return socket;\r\n}\r\n\r\nexport async function makePaymentMpesa(amount, phoneNumber, user, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/makepaymentmpesa/${user._id}?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {}\r\n}\r\n\r\nexport async function donationsMpesa(amount, phoneNumber, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/donationsmpesa?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function handleApprove(accountType, type, user, setUser) {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/paycheck/${user._id}/${type}/${accountType}`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    const userData = await {\r\n      ...user,\r\n      accountType: data.accountType,\r\n      subscription: data.subscription,\r\n      day: data.day,\r\n    };\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(userData));\r\n    setUser(userData);\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw new Error(\"Error occurred\", error);\r\n  }\r\n}\r\n","const formatMessageTime = (timestamp) => {\r\n  const messageTime = new Date(timestamp);\r\n  const currentTime = new Date();\r\n\r\n  const timeDifference = currentTime - messageTime;\r\n  const seconds = Math.floor(timeDifference / 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  const hours = Math.floor(minutes / 60);\r\n  const days = Math.floor(hours / 24);\r\n\r\n  if (seconds < 60) {\r\n    return \"Just now\";\r\n  } else if (minutes < 60) {\r\n    return `${minutes} minute${minutes === 1 ? \"\" : \"s\"} ago`;\r\n  } else if (hours < 24) {\r\n    return `${hours} hour${hours === 1 ? \"\" : \"s\"} ago`;\r\n  } else if (days === 1) {\r\n    return \"Yesterday\";\r\n  } else if (days < 7) {\r\n    return `${days} day${days === 1 ? \"\" : \"s\"} ago`;\r\n  } else {\r\n    const options = {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n    };\r\n    return messageTime.toLocaleDateString(\"en-US\", options);\r\n  }\r\n};\r\nexport default formatMessageTime;\r\n","import React, { useState } from \"react\";\r\nimport { FormControl, FormLabel, Input, useToast } from \"@chakra-ui/react\";\r\n\r\nconst UploadPicture = ({ setPicLoading, color, setPic }) => {\r\n  const toast = useToast();\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    setPicLoading(true);\r\n\r\n    if (!file) {\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (file.type === \"image/jpeg\" || file.type === \"image/png\") {\r\n      let data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"upload_preset\", \"WorldSamma\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dsdlgmgwi/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          setPicLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setPicLoading(false);\r\n        });\r\n    } else {\r\n      setPicLoading(false);\r\n\r\n      toast({\r\n        title: \"Invalid file type\",\r\n        status: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl id=\"pic\">\r\n      <FormLabel textColor={color} fontSize=\"small\">Upload your Passport Photo</FormLabel>\r\n      <Input\r\n        type=\"file\"\r\n        p={1.5}\r\n        textColor={color}\r\n        fontSize=\"small\"\r\n        placeholder=\"Select a passport photo\"\r\n        accept=\"image/*\"\r\n        onChange={handleFileChange}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default UploadPicture;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\n\r\nconst UserListItem = ({ handleFunction, user }) => {\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38B2AC\",\r\n        color: \"white\",\r\n      }}\r\n      width=\"100%\"\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Email : </b>\r\n          {user.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  Image,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { getStatesOfCountry } from \"../assets/state\";\r\nimport { countries, languages } from \"countries-list\";\r\nimport formatMessageTime from \"../components/config/formatTime\";\r\nimport {\r\n  makePaymentMpesa,\r\n  useConnectSocket,\r\n} from \"../components/config/chatlogics\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport UploadPicture from \"./PicLogic\";\r\n\r\nconst AdmissionForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    otherName: \"\",\r\n    id: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n    selectedCountry: \"\",\r\n    provinces: \"\",\r\n    language: \"\",\r\n    password: \"\",\r\n    confirmpassword: \"\",\r\n    gender: \"\",\r\n  });\r\n  const [showPaypal, setShowPaypal] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [subdivisions, setSubdivisions] = useState([]);\r\n  const [student, setStudent] = useState(null);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [pic, setPic] = useState(\"\");\r\n  const { user } = ChatState();\r\n  const [picLoading, setPicLoading] = useState(false);\r\n  const toast = useToast();\r\n  const socket = useConnectSocket(user?.token);\r\n\r\n  const handleClick = () => setShow(!show);\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"Event:\", e);\r\n    if (!e || !e.target) {\r\n      console.log(\"Event or target is undefined.\");\r\n      return;\r\n    }\r\n\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n    if (name === \"selectedCountry\") {\r\n      const states = getStatesOfCountry(value);\r\n      setSubdivisions(states);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user/admission\",\r\n        {\r\n          ...formData,\r\n          pic: pic,\r\n        },\r\n        config\r\n      );\r\n      setStudent(data);\r\n      setFormData({\r\n        name: \"\",\r\n        otherName: \"\",\r\n        id: \"\",\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n        selectedCountry: \"\",\r\n        provinces: \"\",\r\n        language: \"\",\r\n        password: \"\",\r\n        confirmpassword: \"\",\r\n        gender: \"\",\r\n      });\r\n      setPic(\"\");\r\n      setShowPaypal(false);\r\n      setSubdivisions([]);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast({\r\n        title: \"Error occurred!\",\r\n        description: error.response.data.message || \"Something went wrong.\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const countryOptions = Object.entries(countries).map(([code, country]) => ({\r\n    value: country.name,\r\n    label: country.name,\r\n  }));\r\n  const languageOptions = Object.keys(languages).map((code) => ({\r\n    code,\r\n    name: languages[code].name,\r\n  }));\r\n  useEffect(() => {\r\n    if (!formData.selectedCountry) {\r\n      return;\r\n    }\r\n    const fetchSubdivisions = async () => {\r\n      const states = getStatesOfCountry(formData.selectedCountry);\r\n      setSubdivisions(states);\r\n    };\r\n\r\n    fetchSubdivisions();\r\n  }, [formData.selectedCountry]);\r\n\r\n  useEffect(() => {\r\n    if (!socket) {\r\n      return;\r\n    }\r\n    const handleManualRegister = async () => {\r\n      await handleSubmit();\r\n    };\r\n\r\n    socket.on(\"manualRegister\", handleManualRegister);\r\n\r\n    return () => {\r\n      socket.off(\"manualRegister\", handleManualRegister);\r\n    };\r\n  }, [socket]);\r\n\r\n  const handleShow = () => {\r\n    const {\r\n      name,\r\n      otherName,\r\n      selectedCountry,\r\n      provinces,\r\n      language,\r\n      password,\r\n      confirmpassword,\r\n      gender,\r\n    } = formData;\r\n\r\n    if (\r\n      !name ||\r\n      !otherName ||\r\n      !selectedCountry ||\r\n      !provinces ||\r\n      !language ||\r\n      !password ||\r\n      !confirmpassword ||\r\n      !gender ||\r\n      !pic\r\n    ) {\r\n      toast({\r\n        title: \"Please fill all the required fields.\",\r\n        status: \"warning\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Do Not Match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setShowPaypal(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!showPaypal && (\r\n        <Box\r\n          display=\"flex\"\r\n          flexDir=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          overflow=\"auto\"\r\n          width={{ base: \"100%\", md: \"80%\" }}\r\n          boxShadow=\"base\"\r\n          p=\"4\"\r\n          rounded=\"md\"\r\n          bg=\"white\"\r\n        >\r\n          <form style={{ width: \"100%\" }}>\r\n            <Text\r\n              fontSize={\"sm\"}\r\n              fontWeight={500}\r\n              bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n              px={6}\r\n              p={\"3\"}\r\n              m={1}\r\n              color={\"green.500\"}\r\n              rounded={\"full\"}\r\n            >\r\n              Register Students Manually\r\n            </Text>\r\n            {student && (\r\n              <Text textAlign={\"center\"}>\r\n                ⚠️Student Code: {student?.admission}, Name: {student?.name},\r\n                createdAt: {formatMessageTime(student?.createdAt)}{\" \"}\r\n              </Text>\r\n            )}\r\n            <FormControl id=\"name\" isRequired>\r\n              <FormLabel>First Name </FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Student's first name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"otherName\" isRequired>\r\n              <FormLabel>Last Name </FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"otherName\"\r\n                placeholder=\"Student's last name\"\r\n                value={formData.otherName}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"country\" isRequired>\r\n              <FormLabel>Country</FormLabel>\r\n              <Select\r\n                placeholder=\"Select your country\"\r\n                display={\"flex\"}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n                width={\"100%\"}\r\n                value={formData.selectedCountry}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, selectedCountry: e.target.value })\r\n                }\r\n              >\r\n                {countryOptions.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                    style={{ color: \"black\" }}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {formData.selectedCountry && subdivisions.length > 0 ? (\r\n              <FormControl id=\"provinces\" isRequired>\r\n                <FormLabel>County/Province</FormLabel>\r\n                <Select\r\n                  placeholder=\"Select your province\"\r\n                  display={\"flex\"}\r\n                  justifyContent={\"center\"}\r\n                  alignItems={\"center\"}\r\n                  width={\"100%\"}\r\n                  value={formData.provinces}\r\n                  onChange={(e) =>\r\n                    setFormData({ ...formData, provinces: e.target.value })\r\n                  }\r\n                >\r\n                  {subdivisions &&\r\n                    subdivisions.map((subdivision) => (\r\n                      <option\r\n                        key={subdivision.value}\r\n                        value={subdivision.value}\r\n                        style={{ color: \"black\" }}\r\n                      >\r\n                        {subdivision.name}\r\n                      </option>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n            ) : (\r\n              <FormControl id=\"province\" isRequired>\r\n                <FormLabel>County/Province/state</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Province\"\r\n                  value={formData.provinces}\r\n                  onChange={(e) =>\r\n                    setFormData({ ...formData, provinces: e.target.value })\r\n                  }\r\n                />\r\n              </FormControl>\r\n            )}\r\n            <FormControl id=\"language\" isRequired>\r\n              <FormLabel>Language</FormLabel>\r\n              <Select\r\n                placeholder=\"Select language\"\r\n                textColor={\"grey\"}\r\n                value={formData.language}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, language: e.target.value })\r\n                }\r\n              >\r\n                {languageOptions.map((option) => (\r\n                  <option key={option.code} value={option.code}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <FormControl id=\"id\">\r\n              <FormLabel>ID</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"id\"\r\n                placeholder=\"Student's ID (optional)\"\r\n                value={formData.id}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"phoneNumber\">\r\n              <FormLabel>Phone Number</FormLabel>\r\n              <Input\r\n                type=\"number\"\r\n                name=\"phoneNumber\"\r\n                placeholder=\"Student's phone number (optional)\"\r\n                value={formData.phoneNumber}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"email\">\r\n              <FormLabel>Email</FormLabel>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Student's email address (optional)\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"password\" isRequired>\r\n              <FormLabel>Password</FormLabel>\r\n              <InputGroup size=\"md\">\r\n                <Input\r\n                  type={show ? \"text\" : \"password\"}\r\n                  placeholder=\"Enter Password\"\r\n                  value={formData.password}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      password: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <InputRightElement width=\"4.5rem\">\r\n                  <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                    {show ? \"Hide\" : \"Show\"}\r\n                  </Button>\r\n                </InputRightElement>\r\n              </InputGroup>\r\n            </FormControl>\r\n            <FormControl id=\"confirmPassword\" isRequired>\r\n              <FormLabel>Confirm Password</FormLabel>\r\n              <InputGroup size=\"md\">\r\n                <Input\r\n                  type={show ? \"text\" : \"password\"}\r\n                  placeholder=\"Confirm password\"\r\n                  value={formData.confirmpassword}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      confirmpassword: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <InputRightElement width=\"4.5rem\">\r\n                  <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                    {show ? \"Hide\" : \"Show\"}\r\n                  </Button>\r\n                </InputRightElement>\r\n              </InputGroup>\r\n            </FormControl>\r\n            <RadioGroup\r\n              value={formData.gender}\r\n              onChange={(value) =>\r\n                setFormData({\r\n                  ...formData,\r\n                  gender: value,\r\n                })\r\n              }\r\n              isRequired\r\n            >\r\n              <Stack direction=\"row\">\r\n                <Radio value=\"male\">Male</Radio>\r\n                <Radio value=\"female\">Female</Radio>\r\n              </Stack>\r\n            </RadioGroup>\r\n\r\n            <UploadPicture\r\n              setPic={setPic}\r\n              setPicLoading={setPicLoading}\r\n              color={\"black\"}\r\n            />\r\n\r\n            <Button\r\n              onClick={() => handleShow()}\r\n              mt={4}\r\n              colorScheme=\"teal\"\r\n              isDisabled={!formData.name || !formData.otherName || picLoading}\r\n              isLoading={picLoading}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n      )}\r\n      {showPaypal && (\r\n        <Box\r\n          display=\"flex\"\r\n          flexDir={\"column\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          overflow={\"auto\"}\r\n          width={\"100%\"}\r\n          boxShadow=\"base\"\r\n          p=\"6\"\r\n          rounded=\"md\"\r\n          bg=\"white\"\r\n        >\r\n          {\" \"}\r\n          <PayPalScriptProvider\r\n            options={{\r\n              clientId:\r\n                \"AZ5Pdn0aioG6OzW6n4Q7W64LxkdOhS0wEIOAn_UmF5askK41E72ejdrsHPJoFIcg0atbN-WZG14fd6oc\",\r\n            }}\r\n          >\r\n            <PayPalButtons\r\n              createOrder={(data, actions) => {\r\n                const amount = 4.0;\r\n                return actions.order.create({\r\n                  purchase_units: [\r\n                    {\r\n                      amount: {\r\n                        currency_code: \"USD\",\r\n                        value: amount.toFixed(2),\r\n                      },\r\n                    },\r\n                  ],\r\n                });\r\n              }}\r\n              onApprove={async (data, actions) => {\r\n                await handleSubmit();\r\n                return actions.order.capture().then(function (details) {\r\n                  setShowPaypal(false);\r\n                  toast({\r\n                    title: \"Success\",\r\n                    status: \"success\",\r\n                    duration: 3000,\r\n                    isClosable: true,\r\n                    position: \"bottom\",\r\n                  });\r\n                });\r\n              }}\r\n              onCancel={() => {\r\n                setShowPaypal(false);\r\n                toast({\r\n                  title: \"Cancelled\",\r\n                  status: \"info\",\r\n                  isClosable: true,\r\n                  position: \"bottom\",\r\n                });\r\n              }}\r\n            />\r\n          </PayPalScriptProvider>\r\n          <Button\r\n            fontSize={\"small\"}\r\n            width={{ base: \"80%\", md: \"25%\" }}\r\n            backgroundColor={\"green.400\"}\r\n            color={\"white\"}\r\n            onClick={() => {\r\n              setShow(true);\r\n            }}\r\n            p={0}\r\n          >\r\n            <Image\r\n              height={5}\r\n              width={\"auto\"}\r\n              src={\r\n                \"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1694007922/mpesa_ppfs6p.png\"\r\n              }\r\n              alt={\"\"}\r\n              loading=\"lazy\"\r\n            />{\" \"}\r\n            Pay via Mpesa\r\n          </Button>\r\n          {show && (\r\n            <Box m={3} width={{ base: \"80%\", md: \"50%\" }}>\r\n              <Input\r\n                fontSize={\"small\"}\r\n                color={\"green.400\"}\r\n                fontWeight={\"bold\"}\r\n                placeholder=\"Enter Your Mpesa Phone Number\"\r\n                textAlign={\"center\"}\r\n                type=\"text\"\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                value={phone}\r\n                minLength={10}\r\n                maxLength={10}\r\n              />\r\n              <Divider p={2} />\r\n              <Button\r\n                width={\"100%\"}\r\n                onClick={() => {\r\n                  makePaymentMpesa(\"500\", phone, user, toast);\r\n                  setShow(false);\r\n                  toast({\r\n                    title: \"Wait as message is sent\",\r\n                    status: \"loading\",\r\n                    isClosable: true,\r\n                    position: \"bottom\",\r\n                    duration: 5000,\r\n                  });\r\n                }}\r\n                isDisabled={phone.length !== parseInt(10)}\r\n                colorScheme=\"green\"\r\n              >\r\n                Proceed\r\n              </Button>\r\n              <Text textAlign={\"center\"} justifyContent={\"center\"}>\r\n                You'll be sent a Message\r\n              </Text>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdmissionForm;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  FormLabel,\r\n  Heading,\r\n  Image,\r\n  Input,\r\n  Skeleton,\r\n  SkeletonCircle,\r\n  SkeletonText,\r\n  Stack,\r\n  Text,\r\n  Textarea,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport UpperNav from \"../miscellenious/upperNav\";\r\nimport axiosInstance from \"../components/config/axios\";\r\nimport axios from \"axios\";\r\nimport UserListItem from \"../miscellenious/Skeleton\";\r\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\r\nimport AdmissionForm from \"../miscellenious/AdmissionForm\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport { FaLock, FaLockOpen } from \"react-icons/fa\";\r\nimport {\r\n  makePaymentMpesa,\r\n  useConnectSocket,\r\n} from \"../components/config/chatlogics\";\r\n\r\nconst ProfilePage = ({ user }) => {\r\n  const navigate = useNavigate();\r\n  const [club, setClub] = useState();\r\n  const toast = useToast();\r\n  const [showFollowers, setShowFollowers] = useState(false);\r\n  const handleMembers = () => {\r\n    setShowFollowers(!showFollowers);\r\n  };\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [student, setStudent] = useState(null);\r\n  const [payment, setPayment] = useState(false);\r\n  const [register, setRegister] = useState(false);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [savePhoto, setSavePhoto] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [photoLoading, setPhotoLoading] = useState(false);\r\n  const [passportPhoto, setPassportPhoto] = useState(null);\r\n  const [studentId, setStudentId] = useState(\"\");\r\n  const adminId = \"6693a995f6295b8bd90d9301\";\r\n\r\n  const socket = useConnectSocket(user);\r\n  const [isSocketConnected, setIsSocketConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      setIsSocketConnected(socket.connected);\r\n\r\n      socket.on(\"connect\", () => {\r\n        setIsSocketConnected(true);\r\n      });\r\n\r\n      socket.on(\"disconnect\", () => {\r\n        setIsSocketConnected(false);\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    if (isSocketConnected) {\r\n      socket.on(\"Upgrade\", async () => {\r\n        await submitDetails();\r\n        toast({\r\n          title: \"Submitting details!\",\r\n          status: \"loading\",\r\n          duration: 5000,\r\n          position: \"bottom\",\r\n        });\r\n      });\r\n      return () => {\r\n        socket.off(\"Upgrade\");\r\n      };\r\n    }\r\n  });\r\n\r\n  const requestClub = useCallback(async () => {\r\n    if (!user.coach) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n\r\n    try {\r\n      const clubId = user.coach;\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      axiosInstance\r\n        .get(`/api/clubs/${clubId}`, config)\r\n        .then(async (response) => {\r\n          setClub(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          if (error.response && error.response.status === 401) {\r\n            toast({\r\n              title: \"Your session has expired\",\r\n              description: \"Logging out in less than 8 seconds\",\r\n              duration: 8000,\r\n              status: \"loading\",\r\n              position: \"bottom\",\r\n            });\r\n\r\n            setTimeout(() => {\r\n              localStorage.removeItem(\"userInfo\");\r\n              navigate(\"/\");\r\n            }, 8000);\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.error(\"Error fetching Club:\", error);\r\n      setLoading(false);\r\n    }\r\n  }, [user?.token, setClub, setLoading]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      requestClub();\r\n    } else {\r\n      navigate(\"/dashboard\");\r\n    }\r\n  }, [user, navigate]);\r\n  const handleAcceptDecline = async (provinceId, accept) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\r\n        `/api/province/accept/decline/${provinceId}?accept=${accept}`,\r\n        config\r\n      );\r\n\r\n      setUser((prevUser) => ({\r\n        ...prevUser,\r\n        provinceRequests: data.provinceRequests,\r\n      }));\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: \"Try again after sometime.\",\r\n        status: \"error\",\r\n      });\r\n    }\r\n  };\r\n  const handleAcceptDeclineNational = async (nationalId, accept) => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\r\n        `/api/national/accept/decline/${nationalId}?accept=${accept}`,\r\n        config\r\n      );\r\n\r\n      setUser((prevUser) => ({\r\n        ...prevUser,\r\n        nationalRequests: data.nationalRequests,\r\n      }));\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: \"Try again after sometime.\",\r\n        status: \"error\",\r\n      });\r\n    }\r\n  };\r\n  const handleSearch = async () => {\r\n    setPayment(false);\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePhotoChange = (event) => {\r\n    setPassportPhoto(event.target.files[0]);\r\n  };\r\n  const submitHandler = useCallback(\r\n    async (studentId) => {\r\n      if (!user) {\r\n        return;\r\n      }\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n\r\n        await axios.post(\r\n          `/api/submit/${user._id}?studentId=${studentId}`,\r\n          {\r\n            savePhoto,\r\n            details,\r\n          },\r\n          config\r\n        );\r\n        toast({\r\n          title: \"Submission successful!\",\r\n          description: \"Wait for your results under 24hrs\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n        toast({\r\n          title: \"Error occurred trying to send your work!\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    },\r\n    [toast, user, savePhoto, details]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (savePhoto || studentId) {\r\n      submitHandler(studentId);\r\n    }\r\n  }, [savePhoto, studentId]);\r\n\r\n  const submitDetails = () => {\r\n    if (passportPhoto) {\r\n      setPhotoLoading(true);\r\n\r\n      let data = new FormData();\r\n      data.append(\"file\", passportPhoto);\r\n      data.append(\"upload_preset\", \"worldsamma\");\r\n\r\n      fetch(\"https://api.cloudinary.com/v1_1/dsdlgmgwi/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setSavePhoto(data.url);\r\n          setPhotoLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setPhotoLoading(false);\r\n          toast({\r\n            title: \"Error Occurred uploading your passport photo.\",\r\n            description: \"Please try again later.\",\r\n            duration: 5000,\r\n            status: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display={\"flex\"}\r\n      width={\"100%\"}\r\n      minH={\"100vh\"}\r\n      justifyContent={\"start\"}\r\n      flexDir={\"column\"}\r\n      overflow={\"auto\"}\r\n      alignItems={\"center\"}\r\n      bg={\"whitesmoke\"}\r\n    >\r\n      <UpperNav />\r\n      <Box\r\n        display={\"flex\"}\r\n        flexDir={\"column\"}\r\n        width={{ base: \"100%\", md: \"80%\" }}\r\n        bg=\"whitesmoke\"\r\n        mt={20}\r\n        fontFamily=\"Arial, sans-serif\"\r\n        overflow=\"auto\"\r\n      >\r\n        <Box\r\n          display={\"flex\"}\r\n          flexWrap={\"wrap\"}\r\n          textAlign={\"start\"}\r\n          boxShadow=\"base\"\r\n          width={\"100%\"}\r\n          p=\"2\"\r\n          rounded=\"md\"\r\n          bg=\"whitesmoke\"\r\n        >\r\n          {\" \"}\r\n          <Image\r\n            src={user?.pic}\r\n            alt={`Profile*`}\r\n            borderRadius=\"full\"\r\n            boxSize={{ base: \"100px\", md: \"200px\" }}\r\n            border=\"4px solid white\"\r\n          />\r\n          <Box fontSize={\"md\"}>\r\n            {\" \"}\r\n            <Heading textAlign={\"center\"} mb={4} color={\"teal\"}>\r\n              Profile\r\n            </Heading>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Name:\r\n              </Text>\r\n              {user?.name} {user?.otherName}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Code:\r\n              </Text>{\" \"}\r\n              {user?.admission\r\n                ? user?.admission\r\n                : `Not enrolled: ${user?.belt}`}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Email:\r\n              </Text>{\" \"}\r\n              {user?.email}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Country:\r\n              </Text>{\" \"}\r\n              {user?.country}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Province:\r\n              </Text>{\" \"}\r\n              {user?.provinces}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Coach:\r\n              </Text>\r\n              {user?.coach ? \" ✔️\" : \"Not a coach\"}\r\n            </Box>\r\n            <Box display={\"flex\"} flexWrap={\"wrap\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Highest Level Attained:\r\n              </Text>{\" \"}\r\n              {user?.belt}\r\n            </Box>\r\n            {user?._id === adminId && (\r\n              <Box display={\"flex\"} flexWrap={\"wrap\"}>\r\n                <Button\r\n                  colorScheme=\"teal\"\r\n                  onClick={() => navigate(\"/admin-work-slot\")}\r\n                  border={\"none\"}\r\n                  m={1}\r\n                >\r\n                  Admin Work Slot\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>{\" \"}\r\n        <Text width={\"100%\"} textAlign={\"center\"} p={\"3\"}>\r\n          Access all features in one place\r\n        </Text>\r\n        <Box\r\n          display={\"flex\"}\r\n          flexWrap={\"wrap\"}\r\n          width={\"100%\"}\r\n          p={\"3\"}\r\n          fontSize={\"small\"}\r\n        >\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            border={\"1px solid grey\"}\r\n            borderRadius={\"5px\"}\r\n            p={\"1\"}\r\n            m={\"1\"}\r\n          >\r\n            <GoDotFill />\r\n            <Text p={\"1\"}>Live stream competitions</Text>\r\n            <FaLockOpen style={{ color: \"green\" }} />\r\n          </Box>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            border={\"1px solid grey\"}\r\n            borderRadius={\"5px\"}\r\n            p={\"1\"}\r\n            m={\"1\"}\r\n          >\r\n            <GoDotFill />\r\n            <Text p={\"1\"}>Become a coach = 50%+ Revenue</Text>\r\n            {user?.coach ? (\r\n              <FaLockOpen style={{ color: \"green\" }} />\r\n            ) : (\r\n              <FaLock />\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            border={\"1px solid grey\"}\r\n            borderRadius={\"5px\"}\r\n            p={\"1\"}\r\n            m={\"1\"}\r\n          >\r\n            <GoDotFill />\r\n            <Text p={\"1\"}>Become a provincial coach = 70%+ Revenue</Text>\r\n            {user?.coach ? (\r\n              <FaLockOpen style={{ color: \"green\" }} />\r\n            ) : (\r\n              <FaLock />\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            border={\"1px solid grey\"}\r\n            borderRadius={\"5px\"}\r\n            p={\"1\"}\r\n            m={\"1\"}\r\n          >\r\n            <GoDotFill />\r\n            <Text p={\"1\"}>Become a national coach = 90%+ Revenue</Text>\r\n            {user?.coach ? (\r\n              <FaLockOpen style={{ color: \"green\" }} />\r\n            ) : (\r\n              <FaLock />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        {user?.coach && (\r\n          <>\r\n            <Box\r\n              display=\"flex\"\r\n              flexDir=\"column\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              width={\"100%\"}\r\n              minH={\"200px\"}\r\n              overflow={\"auto\"}\r\n            >\r\n              {loading ? (\r\n                <Stack width={\"100%\"}>\r\n                  <Skeleton height=\"20px\" />\r\n                  <Skeleton height=\"20px\" />\r\n                  <Skeleton height=\"20px\" />\r\n                </Stack>\r\n              ) : (\r\n                <Box\r\n                  display=\"flex\"\r\n                  flexDir=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  overflow=\"auto\"\r\n                  width={{ base: \"100%\", md: \"60%\" }}\r\n                  boxShadow=\"base\"\r\n                  mt={2}\r\n                  p=\"4\"\r\n                  rounded=\"md\"\r\n                  bg=\"whitesmoke\"\r\n                >\r\n                  <Heading mb={2}>Club Details</Heading>\r\n                  <Text\r\n                    fontSize={\"sm\"}\r\n                    fontWeight={500}\r\n                    bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n                    p={2}\r\n                    px={3}\r\n                    color={\"green.500\"}\r\n                    rounded={\"full\"}\r\n                    margin={1}\r\n                    width={\"90%\"}\r\n                  >\r\n                    Status (*\r\n                    {club && club.registered ? \"Registered\" : \"Not registered\"})\r\n                  </Text>\r\n                  <Text>Club Name: {club?.name}</Text>\r\n                  <Text>Club Code: {club?.code}</Text>\r\n                  <Button\r\n                    background={\"transparent\"}\r\n                    _hover={{ background: \"transparent\", color: \"green\" }}\r\n                    onClick={handleMembers}\r\n                    fontStyle={\"italic\"}\r\n                  >\r\n                    Members: {club?.members.length}\r\n                  </Button>\r\n                  <Text>Followers: {club?.followers.length}</Text>\r\n                  <Text>Received Likes: {club?.likes.length}</Text>\r\n                </Box>\r\n              )}\r\n\r\n              {showFollowers && (\r\n                <Box\r\n                  display={\"flex\"}\r\n                  flexDir=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  background={\"white\"}\r\n                  overflow={\"auto\"}\r\n                  boxShadow=\"base\"\r\n                  p=\"6\"\r\n                  mt={2}\r\n                  rounded=\"md\"\r\n                  bg=\"whitesmoke\"\r\n                  width={{ base: \"100%\", md: \"60%\" }}\r\n                >\r\n                  <Heading mb={2}>Members List</Heading>\r\n                  {club.members.length > 0 &&\r\n                    club.members.map((member, index) => (\r\n                      <Text fontSize={\"small\"} key={member._id}>\r\n                        {index + 1}. Name: {member.name} Adm: {member.admission}\r\n                      </Text>\r\n                    ))}\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </>\r\n        )}\r\n        {user?.coach && (\r\n          <Box\r\n            display=\"flex\"\r\n            flexDir={\"column\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            overflow={\"auto\"}\r\n            width={\"100%\"}\r\n            boxShadow=\"base\"\r\n            p=\"6\"\r\n            rounded=\"md\"\r\n            bg=\"whitesmoke\"\r\n          >\r\n            <Box textAlign={\"center\"} width={\"100%\"} mb={\"4\"}>\r\n              <Button\r\n                background={\"purple.400\"}\r\n                onClick={() => setRegister(!register)}\r\n              >\r\n                Register Students Manually\r\n              </Button>\r\n              {register && `↓`}\r\n            </Box>\r\n            {register && (\r\n              <Box\r\n                display=\"flex\"\r\n                flexDir=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                overflow=\"auto\"\r\n                width=\"100%\"\r\n                boxShadow=\"base\"\r\n                p=\"4\"\r\n                rounded=\"md\"\r\n                background=\"whitesmoke\"\r\n              >\r\n                {\" \"}\r\n                <AdmissionForm />\r\n              </Box>\r\n            )}\r\n            <Text\r\n              fontSize={\"sm\"}\r\n              fontWeight={500}\r\n              bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n              px={6}\r\n              p={\"3\"}\r\n              mb={\"4\"}\r\n              color={\"green.500\"}\r\n              rounded={\"full\"}\r\n            >\r\n              Coach's assisted student rank upgrading\r\n            </Text>\r\n            {!details || !passportPhoto}\r\n            <Box\r\n              display=\"flex\"\r\n              pb={2}\r\n              width={{ base: \"100%\", md: \"60%\" }}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n            >\r\n              <Input\r\n                placeholder=\"Search by name, email, or admission\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                fontSize={\"small\"}\r\n              />\r\n              <Button borderRadius={20} onClick={handleSearch}>\r\n                🔍Search\r\n              </Button>\r\n            </Box>\r\n            <Text>Or</Text>\r\n            {!student && (\r\n              <Box\r\n                display=\"flex\"\r\n                pb={2}\r\n                width={{ base: \"100%\", md: \"60%\" }}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n              >\r\n                <Textarea\r\n                  placeholder=\"Enter student details\"\r\n                  mr={2}\r\n                  value={details}\r\n                  onChange={(e) => setDetails(e.target.value)}\r\n                  fontSize={\"small\"}\r\n                />\r\n                <FormLabel>Picture</FormLabel>\r\n                <Input\r\n                  type=\"file\"\r\n                  accept=\"image/*\" // Only accept image files\r\n                  borderRadius={20}\r\n                  fontSize={\"small\"}\r\n                  onChange={handlePhotoChange}\r\n                  isDisabled={photoLoading}\r\n                />\r\n              </Box>\r\n            )}\r\n            <Box\r\n              display={\"flex\"}\r\n              flexDir={\"column\"}\r\n              overflow={\"auto\"}\r\n              width={\"100%\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n              overflowY={\"auto\"}\r\n            >\r\n              <Box\r\n                display={payment ? \"none\" : \"flex\"}\r\n                flexDir={\"column\"}\r\n                width={\"100%\"}\r\n                maxH={\"300px\"}\r\n                overflow={\"auto\"}\r\n              >\r\n                {loading ? (\r\n                  <Box\r\n                    display={\"flex\"}\r\n                    width={\"100%\"}\r\n                    padding=\"6\"\r\n                    boxShadow=\"lg\"\r\n                    bg=\"whitesmoke\"\r\n                  >\r\n                    <SkeletonCircle size=\"10\" />\r\n                    <SkeletonText\r\n                      mt=\"4\"\r\n                      noOfLines={4}\r\n                      spacing=\"4\"\r\n                      skeletonHeight=\"2\"\r\n                    />\r\n                  </Box>\r\n                ) : (\r\n                  searchResult?.map((user) => (\r\n                    <UserListItem\r\n                      key={user._id}\r\n                      user={user}\r\n                      handleFunction={() => {\r\n                        setStudent({\r\n                          id: user._id,\r\n                          name: user.name,\r\n                          email: user.email,\r\n                          pic: user.pic,\r\n                        });\r\n                        setPayment(true);\r\n                      }}\r\n                    />\r\n                  ))\r\n                )}\r\n              </Box>\r\n              {(payment || (details && passportPhoto)) && (\r\n                <Box p={\"6\"}>\r\n                  <Text\r\n                    textAlign={\"center\"}\r\n                    fontSize={\"sm\"}\r\n                    fontWeight={500}\r\n                    bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n                    px={3}\r\n                    p=\"2.5\"\r\n                    mb={\"4\"}\r\n                    color={\"purple.500\"}\r\n                    rounded={\"full\"}\r\n                  >\r\n                    Upgrading: {student?.name} {student?.email} {details}\r\n                    ($5 Fee)\r\n                  </Text>{\" \"}\r\n                  <PayPalScriptProvider\r\n                    options={{\r\n                      clientId:\r\n                        \"AZAdYFR_SbadcgOcCLYn9ajkReJTZmOCnEeAvQ3xPYAE5BMYFBHi4vDeILfNwBO-hh-8wfyGC9lNeB1I\",\r\n                    }}\r\n                  >\r\n                    <PayPalButtons\r\n                      createOrder={(data, actions) => {\r\n                        const amount = 5.0;\r\n                        return actions.order.create({\r\n                          purchase_units: [\r\n                            {\r\n                              amount: {\r\n                                currency_code: \"USD\",\r\n                                value: amount.toFixed(2),\r\n                              },\r\n                            },\r\n                          ],\r\n                        });\r\n                      }}\r\n                      onApprove={async (data, actions) => {\r\n                        await submitDetails();\r\n                        await setStudentId(student._id);\r\n                        return actions.order.capture().then(function (details) {\r\n                          toast({\r\n                            title: \"Success\",\r\n                            description:\r\n                              \"Wait for WSF to send certificate to particulars.\",\r\n                            status: \"success\",\r\n                            duration: 3000,\r\n                            isClosable: true,\r\n                            position: \"bottom\",\r\n                          });\r\n                        });\r\n                      }}\r\n                      onCancel={() => {\r\n                        setPayment(false);\r\n                        toast({\r\n                          title: \"Cancelled\",\r\n                          status: \"info\",\r\n                          isClosable: true,\r\n                          position: \"bottom\",\r\n                        });\r\n                      }}\r\n                    />\r\n                  </PayPalScriptProvider>\r\n                  <Button\r\n                    fontSize={\"small\"}\r\n                    width={\"100%\"}\r\n                    bg={useColorModeValue(\"green.100\", \"green.900\")}\r\n                    onClick={() => {\r\n                      setShow(true);\r\n                    }}\r\n                    p={0}\r\n                  >\r\n                    <Image\r\n                      height={5}\r\n                      width={\"auto\"}\r\n                      src={\r\n                        \"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1694007922/mpesa_ppfs6p.png\"\r\n                      }\r\n                      alt={\"\"}\r\n                      loading=\"lazy\"\r\n                    />{\" \"}\r\n                    Pay via Mpesa\r\n                  </Button>\r\n                  {show && (\r\n                    <Box padding={\"6\"}>\r\n                      <Text\r\n                        textAlign={\"center\"}\r\n                        justifyContent={\"center\"}\r\n                        fontSize={\"xl\"}\r\n                      >\r\n                        Enter Your Mpesa Phone Number (KSH 450/=)\r\n                      </Text>\r\n                      <Input\r\n                        fontSize={\"small\"}\r\n                        color={\"green.400\"}\r\n                        fontWeight={\"bold\"}\r\n                        placeholder=\"Enter phone number\"\r\n                        textAlign={\"center\"}\r\n                        type=\"number\"\r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n                        value={phoneNumber}\r\n                        minLength={10}\r\n                        maxLength={10}\r\n                      />\r\n                      <Divider p={2} />\r\n                      <Button\r\n                        width={\"100%\"}\r\n                        onClick={() => {\r\n                          makePaymentMpesa(\"450\", phoneNumber, user, toast);\r\n                          setShow(false);\r\n                          toast({\r\n                            title: \"Wait as message is sent\",\r\n                            status: \"loading\",\r\n                            isClosable: true,\r\n                            position: \"bottom\",\r\n                            duration: 5000,\r\n                          });\r\n                        }}\r\n                        isDisabled={phoneNumber.length !== parseInt(10)}\r\n                        colorScheme=\"green\"\r\n                      >\r\n                        Proceed\r\n                      </Button>\r\n                      <Text textAlign={\"center\"} justifyContent={\"center\"}>\r\n                        You'll be sent a Message\r\n                      </Text>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        {user?.provinceRequests?.length > 0 && (\r\n          <Box\r\n            textAlign={\"start\"}\r\n            fontSize={\"medium\"}\r\n            fontWeight={\"bold\"}\r\n            background={\"white\"}\r\n            overflow={\"auto\"}\r\n            boxShadow=\"base\"\r\n            p=\"4\"\r\n            height={\"200px\"}\r\n            rounded=\"md\"\r\n            bg=\"whitesmoke\"\r\n            width={\"100%\"}\r\n          >\r\n            <Heading mb={4}>Province Requests</Heading>\r\n            {user?.provinceRequests.map((member, index) => (\r\n              <Text\r\n                display={\"flex\"}\r\n                justifyContent={\"space-between\"}\r\n                alignItems={\"center\"}\r\n                key={member._id}\r\n                width={\"100%\"}\r\n              >\r\n                <Text\r\n                  p={1}\r\n                  fontStyle={\"italic\"}\r\n                  width={\"100%\"}\r\n                  fontSize={\"x-small\"}\r\n                >\r\n                  {\" \"}\r\n                  {index + 1}.{member.provincialCoach?.name} Adm:\r\n                  {member.provincialCoach?.admission} Approvals:{\" \"}\r\n                  {member.approvals?.length}\r\n                </Text>\r\n                <Button\r\n                  borderRadius={20}\r\n                  background={\"#A020F0\"}\r\n                  color={\"white\"}\r\n                  _hover={{ color: \"black\" }}\r\n                  fontSize={\"x-small\"}\r\n                  onClick={() => handleAcceptDecline(member._id, true)}\r\n                >\r\n                  Approve✔️\r\n                </Button>\r\n                <Button\r\n                  borderRadius={20}\r\n                  fontSize={\"x-small\"}\r\n                  color={\"white\"}\r\n                  _hover={{ color: \"black\" }}\r\n                  background={\"#A020F0\"}\r\n                  m={1}\r\n                  onClick={() => handleAcceptDecline(member._id, false)}\r\n                >\r\n                  Decline\r\n                </Button>\r\n              </Text>\r\n            ))}\r\n          </Box>\r\n        )}\r\n        {user?.nationalRequests?.length > 0 && (\r\n          <Box\r\n            textAlign={\"start\"}\r\n            fontSize={\"medium\"}\r\n            fontWeight={\"bold\"}\r\n            background={\"white\"}\r\n            overflow={\"auto\"}\r\n            boxShadow=\"base\"\r\n            p=\"4\"\r\n            height={\"200px\"}\r\n            rounded=\"md\"\r\n            bg=\"whitesmoke\"\r\n            width={\"100%\"}\r\n          >\r\n            <Heading mb={4}>National Requests</Heading>\r\n            {user?.nationalRequests.map((member, index) => (\r\n              <Box\r\n                display={\"flex\"}\r\n                justifyContent={\"space-between\"}\r\n                alignItems={\"center\"}\r\n                key={member._id}\r\n                width={\"100%\"}\r\n              >\r\n                <Text\r\n                  p={1}\r\n                  fontStyle={\"italic\"}\r\n                  width={\"100%\"}\r\n                  fontSize={\"x-small\"}\r\n                >\r\n                  {\" \"}\r\n                  {index + 1}.{member.nationalCoach.name} Adm:\r\n                  {member.nationalCoach.admission}\r\n                </Text>\r\n                <Button\r\n                  borderRadius={20}\r\n                  background={\"#A020F0\"}\r\n                  color={\"white\"}\r\n                  _hover={{ color: \"black\" }}\r\n                  fontSize={\"x-small\"}\r\n                  onClick={() => handleAcceptDeclineNational(member._id, true)}\r\n                >\r\n                  Approve✔️\r\n                </Button>\r\n                <Button\r\n                  borderRadius={20}\r\n                  fontSize={\"x-small\"}\r\n                  color={\"white\"}\r\n                  _hover={{ color: \"black\" }}\r\n                  background={\"#A020F0\"}\r\n                  m={1}\r\n                  onClick={() => handleAcceptDeclineNational(member._id, false)}\r\n                >\r\n                  Decline\r\n                </Button>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["axiosInstance","axios","create","interceptors","response","use","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","_x","apply","arguments","error","Promise","reject","UserFormValidation","z","object","name","string","min","max","otherName","email","gender","enum","password","confirmPassword","refine","val","ctx","parent","message","passport","regex","selectedCountry","provinces","optional","language","pic","url","useConnectSocket","user","_useState","useState","_useState2","_slicedToArray","socket","setSocket","socketRef","useRef","useEffect","token","current","userId","_id","newSocket","io","query","on","console","log","reason","connect","attemptNumber","concat","disconnect","makePaymentMpesa","_x3","_x4","_x5","_x6","_makePaymentMpesa","_callee2","amount","phoneNumber","toast","config","_yield$axios$post","_context2","headers","Authorization","post","sent","data","title","status","duration","position","t0","donationsMpesa","_x7","_x8","_x9","_donationsMpesa","_callee3","_yield$axios$post2","_context3","timestamp","messageTime","Date","timeDifference","seconds","Math","floor","minutes","hours","days","toLocaleDateString","hour","minute","month","day","year","setPicLoading","color","setPic","useToast","_jsxs","FormControl","id","children","_jsx","FormLabel","textColor","fontSize","Input","type","p","placeholder","accept","onChange","event","file","target","files","FormData","append","fetch","method","body","then","res","json","toString","catch","err","handleFunction","Box","onClick","cursor","bg","_hover","background","width","display","alignItems","px","py","mb","borderRadius","Avatar","mr","size","src","Text","confirmpassword","formData","setFormData","_useState3","_useState4","showPaypal","setShowPaypal","_useState5","_useState6","show","setShow","_useState7","_useState8","subdivisions","setSubdivisions","_useState9","_useState10","student","setStudent","_useState11","_useState12","phone","setPhone","_useState13","_useState14","ChatState","_useState15","_useState16","picLoading","handleClick","handleChange","e","_e$target","value","prevData","_objectSpread","_defineProperty","states","getStatesOfCountry","handleSubmit","preventDefault","description","isClosable","countryOptions","Object","entries","countries","map","_ref2","_ref3","country","label","languageOptions","keys","languages","code","fetchSubdivisions","_ref4","handleManualRegister","_ref5","off","_Fragment","flexDir","justifyContent","overflow","base","md","boxShadow","rounded","style","fontWeight","useColorModeValue","m","textAlign","admission","formatMessageTime","createdAt","isRequired","Select","option","length","subdivision","InputGroup","InputRightElement","Button","h","RadioGroup","Stack","direction","Radio","UploadPicture","handleShow","mt","colorScheme","isDisabled","isLoading","PayPalScriptProvider","options","clientId","PayPalButtons","createOrder","actions","order","purchase_units","currency_code","toFixed","onApprove","_ref6","_callee4","_context4","capture","details","_x2","onCancel","backgroundColor","Image","height","alt","loading","minLength","maxLength","Divider","parseInt","_user$provinceRequest","_user$nationalRequest","navigate","useNavigate","club","setClub","showFollowers","setShowFollowers","search","setSearch","setLoading","searchResult","setSearchResult","payment","setPayment","register","setRegister","_useState17","_useState18","setPhoneNumber","_useState19","_useState20","_useState21","_useState22","savePhoto","setSavePhoto","_useState23","_useState24","setDetails","_useState25","_useState26","photoLoading","setPhotoLoading","_useState27","_useState28","passportPhoto","setPassportPhoto","_useState29","_useState30","studentId","setStudentId","_useState31","_useState32","isSocketConnected","setIsSocketConnected","connected","submitDetails","requestClub","useCallback","clubId","coach","get","setTimeout","localStorage","removeItem","handleAcceptDecline","provinceId","_yield$axios$get","setUser","prevUser","provinceRequests","handleAcceptDeclineNational","_callee5","nationalId","_yield$axios$get2","_context5","nationalRequests","handleSearch","_ref7","_callee6","_yield$axios$get3","_context6","submitHandler","_ref8","_callee7","_context7","minH","UpperNav","fontFamily","flexWrap","boxSize","border","Heading","belt","GoDotFill","FaLockOpen","FaLock","Skeleton","margin","registered","fontStyle","members","followers","likes","member","index","AdmissionForm","pb","Textarea","overflowY","maxH","padding","SkeletonCircle","SkeletonText","noOfLines","spacing","skeletonHeight","UserListItem","_ref9","_callee8","_context8","_member$provincialCoa","_member$provincialCoa2","_member$approvals","provincialCoach","approvals","nationalCoach"],"sourceRoot":""}