{"version":3,"file":"static/js/900.4e4bcb2d.chunk.js","mappings":"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","sources":["pages/NotFound.js","../node_modules/@chakra-ui/react/dist/esm/flex/flex.mjs","../node_modules/@chakra-ui/react/dist/esm/image/native-image.mjs","../node_modules/@chakra-ui/react/dist/esm/image/use-image.mjs","../node_modules/@chakra-ui/react/dist/esm/image/image.mjs"],"sourcesContent":["// NotFound.js\r\nimport { Box, Button, Flex, Image, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Flex\r\n      display=\"flex\"\r\n      justifyContent={\"center\"}\r\n      alignItems={\"center\"}\r\n      width={\"100%\"}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection={\"column\"}\r\n        justifyContent={\"space-between\"}\r\n        alignItems={\"center\"}\r\n        backgroundColor={\"Background\"}\r\n        padding={8}\r\n        width={\"98%\"}\r\n      >\r\n        <Image\r\n          src=\"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1696073349/icons8-not-found-64_rxa6yk.png\"\r\n          loading=\"lazy\"\r\n          alt=\"Not Found\"\r\n        />\r\n        <Text fontSize={\"2xl\"}>404 - Page Not Found</Text>\r\n        <Text textAlign={\"center\"}>\r\n          {\" \"}\r\n          The page you are looking for does not exist.\r\n        </Text>\r\n        <Button\r\n          margin={3}\r\n          backgroundColor={\"green.400\"}\r\n          onClick={() => navigate(\"/dashboard\")}\r\n        >\r\n          Return back to my programs.\r\n        </Button>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Flex = forwardRef(function Flex2(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nFlex.displayName = \"Flex\";\n\nexport { Flex };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport { NativeImage };\n","'use client';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\nimport { useState, useEffect, useRef, useCallback } from 'react';\n\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad?.(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError?.(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nconst shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport { shouldShowFallbackImage, useImage };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omit } from '@chakra-ui/utils';\nimport { NativeImage } from './native-image.mjs';\nimport { useImage, shouldShowFallbackImage } from './use-image.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || // use can opt out of fallback image\n  ignoreFallback || // if the user doesn't provide any kind of fallback we should ignore it\n  !providedFallback;\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport { Image };\n"],"names":["navigate","useNavigate","_jsx","Flex","display","justifyContent","alignItems","width","children","_jsxs","Box","flexDirection","backgroundColor","padding","Image","src","loading","alt","Text","fontSize","textAlign","Button","margin","onClick","_excluded","forwardRef","props","ref","direction","align","justify","wrap","basis","grow","shrink","rest","_objectWithoutProperties","styles","flexWrap","flexBasis","flexGrow","flexShrink","jsx","chakra","div","_objectSpread","__css","displayName","NativeImage","htmlWidth","htmlHeight","height","fallbackSrc","fallback","srcSet","fit","ignoreFallback","crossOrigin","_props$fallbackStrate","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","_useState","useState","_useState2","_slicedToArray","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","omit","as","className"],"sourceRoot":""}