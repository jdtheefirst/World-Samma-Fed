{"version":3,"file":"static/js/915.da47c2e1.chunk.js","mappings":"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","sources":["components/FooterAchieves.js","Authentication/club.js","pages/Clubs.js","../node_modules/@chakra-ui/react/dist/esm/grid/grid-item.mjs","../node_modules/@chakra-ui/react/dist/esm/grid/grid.mjs","../node_modules/@chakra-ui/react/dist/esm/link/link.mjs"],"sourcesContent":["import React from 'react';\r\nimport { Grid, GridItem, Box, Text, Link } from '@chakra-ui/react';\r\n\r\nconst FooterAchieves = () => {\r\n  const data = [\r\n    {\r\n      title: \"National Coach Role:\",\r\n      items: [\r\n        {\r\n          subtitle: \"Qualification Requirements:\",\r\n          description: \"To become a national coach, one must first be a WSF registered province coach or lead a WSF registered club in a country without provinces. They must be approved by other province coaches to become their national leader. Responsibilities include managing national funds and organizing international tournaments, national seminars and black belt graduation ceremonies in conjuction with the WSF national committee.\",\r\n        },\r\n        {\r\n          subtitle: \"Interim Appointment:\",\r\n          description: \"The interim role lasts for a maximum of one year(then elections), during which the coach is responsible for managing national-level activities, funds and ensuring smooth operations.\",\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Province Coach Role:\",\r\n      items: [\r\n        {\r\n          subtitle: \"Qualification Criteria:\",\r\n          description: \"A province coach must be approved by 20 other WSF registered coaches in his/her province, hold a black belt and lead a WSF registered club. Responsibilities include organizing local tournaments, seminars and under-belts graduation ceremonies in conjuction with the WSF province committee.\",\r\n        },\r\n        {\r\n          subtitle: \"Interim Appointment:\",\r\n          description: \"The interim role also lasts for a maximum of one year(then elections), during which the coach is responsible for managing province-level activities, funds and ensuring smooth operations.\",\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Club Creation and Student Training Role:\",\r\n      items: [\r\n        {\r\n          subtitle: \"Club Establishment:\",\r\n          description: \"Students can create clubs after Orange belt certification. A club can only be WSF registered (badged) once it has 20 registered students.\",\r\n        },\r\n        {\r\n          subtitle: \"Student Registration and Training:\",\r\n          description: \"Coaches can register students and earn income per student. They can train students up to the belt levels they have achieved.\",\r\n        }\r\n      ]\r\n    }\r\n  ];  \r\n  return (\r\n    <Grid \r\n      templateColumns={{ base: '1fr', md: 'repeat(6, 1fr)' }} \r\n      gap={2} \r\n      m={2} \r\n      mt={0}\r\n      userSelect=\"none\"\r\n    >\r\n      {data.map((section, index) => (\r\n        <GridItem \r\n          key={index} \r\n          colSpan={{ base: 6, md: 2 }} \r\n          h='auto' \r\n          bg='tomato' \r\n          p={4} \r\n          borderRadius={4}\r\n        >\r\n          <Box fontSize=\"small\">\r\n            <Text fontSize=\"xl\" fontWeight=\"bold\" mb={2}>{section.title}</Text>\r\n            {section.items.map((item, idx) => (\r\n              <Text mb={3} key={idx}>\r\n                <strong style={{ padding: 2 }}>{item.subtitle}</strong>\r\n                {item.description} \r\n                {item.link && (\r\n                  <Link p={1} color=\"blue.500\" href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    here\r\n                  </Link>\r\n                )}\r\n              </Text>\r\n            ))}\r\n          </Box>\r\n        </GridItem>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FooterAchieves;","import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Image,\r\n  Input,\r\n  Select,\r\n  Text,\r\n  VStack,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport { countries } from \"countries-list\";\r\nimport { getStatesOfCountry } from \"../assets/state\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useConnectSocket } from \"../components/config/chatlogics\";\r\n\r\nexport const ClubRegistration = ({ onClose }) => {\r\n  const { user, club, setClub, setRequests, setUser } = ChatState();\r\n  const [name, setName] = useState(null);\r\n  const [selectedCountry, setSelectedCountry] = useState(user?.country);\r\n  const [provience, setProvience] = useState(user.provinces);\r\n  const [chairperson, setChairperson] = useState(\"\");\r\n  const [viceChair, setViceChair] = useState(\"\");\r\n  const [secretary, setSecretary] = useState(\"\");\r\n  const [subdivisions, setSubdivisions] = useState([]);\r\n  const [suggest, setSuggest] = useState([]);\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n\r\n  const socket = useConnectSocket(user?.token);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"sent request\", (club) => {\r\n        setUser((prevUser) => ({\r\n          ...prevUser,\r\n          clubRequests: [...prevUser.clubRequests, club._id],\r\n        }));\r\n\r\n        setRequests((prev) => ({ ...prev, club }));\r\n      });\r\n    }\r\n  }, [socket, setRequests, setUser]);\r\n\r\n  const countryOptions = Object.entries(countries).map(([code, country]) => ({\r\n    value: country.name,\r\n    label: country.name,\r\n  }));\r\n\r\n  const getUsersWithNoClub = useCallback(async () => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/user/${user.country}/${provience}`,\r\n        config\r\n      );\r\n\r\n      setSuggest(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users with no clubs:\", error);\r\n    }\r\n  }, [user.token, user._id, setSuggest, provience]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    getUsersWithNoClub();\r\n  }, [getUsersWithNoClub, navigate, user]);\r\n\r\n  useEffect(() => {\r\n    if (!user) navigate(\"/dashboard\");\r\n\r\n    const fetchSubdivisions = async () => {\r\n      const states = getStatesOfCountry(selectedCountry);\r\n      setSubdivisions(states);\r\n    };\r\n\r\n    fetchSubdivisions();\r\n  }, [user]);\r\n\r\n  const handleFormClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  const requestClubRequest = useCallback(\r\n    async (userId, event) => {\r\n      if (event) {\r\n        event.preventDefault();\r\n      }\r\n      if (!name) {\r\n        toast({\r\n          title: \"Give your Club a name please\",\r\n        });\r\n        return;\r\n      }\r\n      if (!user) {\r\n        navigate(\"/dashboard\");\r\n        return;\r\n      }\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.get(\r\n          `/api/user/${user.country}/${user.provinces}/${name}/${userId}`,\r\n          config\r\n        );\r\n        setClub(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching Club:\", error);\r\n      }\r\n    },\r\n    [user.token, user._id, setClub]\r\n  );\r\n  const handleCreateClub = async (e) => {\r\n    e.preventDefault();\r\n    if (!chairperson || !secretary || !viceChair || !user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const info = { chairperson, secretary, viceChair };\r\n      const { data } = await axios.post(`/api/club/register`, info, config);\r\n      console.log(data);\r\n      setClub(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack\r\n      backgroundColor={\"whitesmoke\"}\r\n      width={\"100%\"}\r\n      boxShadow=\"dark-lg\"\r\n      p=\"6\"\r\n      rounded=\"md\"\r\n      bg=\"white\"\r\n    >\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent={\"center\"}\r\n        alignItems={\"center\"}\r\n        fontSize={\"large\"}\r\n        width={\"100%\"}\r\n        mt={20}\r\n      >\r\n        <Button fontSize={\"x-large\"} onClick={handleFormClose} width={\"10px\"}>\r\n          X\r\n        </Button>\r\n        <Text fontWeight={\"bold\"} m={1}>\r\n          Club Form\r\n        </Text>\r\n        <Text\r\n          fontSize={\"sm\"}\r\n          fontWeight={500}\r\n          bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n          p={2}\r\n          px={3}\r\n          color={\"green.500\"}\r\n          rounded={\"full\"}\r\n        >\r\n          Status (*{club && club.registration ? \"Registered\" : \"Not registered\"}\r\n          )\r\n        </Text>\r\n      </Box>\r\n      <Box\r\n        m={3}\r\n        p={3}\r\n        borderRadius={3}\r\n        width={{ base: \"97%\", md: \"60%\" }}\r\n        border={\"1px solid #c255ed\"}\r\n      >\r\n        <FormControl id=\"first-name\" isRequired>\r\n          <FormLabel textColor={\"#c255ed\"}>Club name</FormLabel>\r\n          <Input\r\n            placeholder=\"Enter Club Name\"\r\n            value={name || (club && club.name) || \"\"}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"country\" isRequired>\r\n          <FormLabel textColor=\"#c255ed\">Country</FormLabel>\r\n          <Select\r\n            placeholder=\"Select Club country\"\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            width={\"100%\"}\r\n            value={user?.country}\r\n            isDisabled={true}\r\n            onChange={(e) => setSelectedCountry(e.target.value)}\r\n          >\r\n            {countryOptions.map((option) => (\r\n              <option\r\n                key={option.value}\r\n                value={option.value}\r\n                style={{ color: \"black\" }}\r\n              >\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        {selectedCountry && subdivisions ? (\r\n          <FormControl id=\"provinces\" isRequired>\r\n            <FormLabel textColor={\"#c255ed\"}>County/Province</FormLabel>\r\n            <Select\r\n              placeholder=\"Select Club province\"\r\n              display={\"flex\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n              width={\"100%\"}\r\n              value={provience}\r\n              isDisabled={true}\r\n              onChange={(e) => setProvience(e.target.value)}\r\n            >\r\n              {subdivisions &&\r\n                subdivisions.map((subdivision) => (\r\n                  <option\r\n                    key={subdivision.value}\r\n                    value={subdivision.value}\r\n                    style={{ color: \"black\" }}\r\n                  >\r\n                    {subdivision.name}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n        ) : (\r\n          <FormControl id=\"provinces\" isRequired>\r\n            <FormLabel textColor={\"#c255ed\"}>County/Province</FormLabel>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Province\"\r\n              onChange={(e) => setProvience(e.target.value)}\r\n            />\r\n          </FormControl>\r\n        )}\r\n        <FormControl id=\"first-name\" isRequired>\r\n          <FormLabel textColor={\"#c255ed\"}>\r\n            Make requests to members around you.\r\n          </FormLabel>\r\n        </FormControl>\r\n        <Box\r\n          display={\"flex\"}\r\n          flexDir={\"column\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          borderRadius={3}\r\n          width={\"100%\"}\r\n          height={\"200px\"}\r\n          overflow=\"auto\"\r\n        >\r\n          {!suggest && (\r\n            <Text textAlign={\"center\"}>\r\n              No student without a club in this region.\r\n            </Text>\r\n          )}\r\n          {suggest.length > 0 &&\r\n            suggest.map((suggestion) => (\r\n              <Box\r\n                display={\"flex\"}\r\n                justifyContent={\"space-between\"}\r\n                alignItems={\"center\"}\r\n                key={suggestion._id}\r\n                style={{ color: \"black\" }}\r\n                width={\"90%\"}\r\n                m={1}\r\n              >\r\n                <Text fontSize={\"small\"} fontWeight={\"bold\"}>\r\n                  Name: {suggestion.name}, Adm: {suggestion.admission}\r\n                </Text>\r\n                <Button\r\n                  borderRadius={20}\r\n                  isDisabled={\r\n                    club && club.clubRequests.includes(suggestion._id)\r\n                  }\r\n                  onClick={(event) => requestClubRequest(suggestion._id, event)}\r\n                  backgroundColor={\"#c255ed\"}\r\n                >\r\n                  {club && club.clubRequests.includes(suggestion._id)\r\n                    ? \"Request sent\"\r\n                    : \"Send Request\"}\r\n                </Button>\r\n              </Box>\r\n            ))}\r\n        </Box>\r\n        <FormControl id=\"members\" isRequired>\r\n          <FormLabel textColor={\"#c255ed\"}>\r\n            Students enrolled {club && club.members.length}/20\r\n          </FormLabel>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            borderRadius={3}\r\n            width={\"100%\"}\r\n            height={\"100px\"}\r\n            overflow=\"auto\"\r\n            borderTop={\"1px solid #c255ed\"}\r\n            borderBottom={\"1px solid #c255ed\"}\r\n          >\r\n            {club && club.members.length === 0 && (\r\n              <Text textAlign={\"center\"}>\r\n                No members available for this club.\r\n              </Text>\r\n            )}\r\n            {club &&\r\n              club.members.length > 0 &&\r\n              club.members.map((member) => (\r\n                <Button fontSize={\"small\"} fontWeight={\"bold\"} m={1}>\r\n                  Adm: {member.admission}\r\n                </Button>\r\n              ))}\r\n          </Box>\r\n        </FormControl>\r\n        <FormControl id=\"chairman\" isRequired>\r\n          <FormLabel>Chairperson</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"chairman\"\r\n            value={chairperson}\r\n            onChange={(e) => setChairperson(e.target.chairperson)}\r\n            placeholder=\"Input valid adm of the party\"\r\n            isInvalid={\r\n              !club?.members.some((adm) => adm.admission === chairperson)\r\n            }\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"secretary\" isRequired>\r\n          <FormLabel>Secretary</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"secretary\"\r\n            value={secretary}\r\n            placeholder=\"Input valid adm of the party\"\r\n            isInvalid={\r\n              !club?.members.some((adm) => adm.admission === secretary)\r\n            }\r\n            onChange={(e) => setSecretary(e.target.secretary)}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"vice-chairman\" isRequired>\r\n          <FormLabel>Vice Chairperson</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"viceChairman\"\r\n            value={viceChair}\r\n            placeholder=\"Input valid adm of the party\"\r\n            isInvalid={\r\n              !club?.members.some((adm) => adm.admission === viceChair)\r\n            }\r\n            onChange={(e) => setViceChair(e.target.viceChair)}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"provincial-coach\">\r\n          <FormLabel>Coach</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"provincialCoach\"\r\n            value={user?.admission}\r\n            isDisabled={true}\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          colorScheme=\"blue\"\r\n          width=\"100%\"\r\n          style={{ marginTop: 15 }}\r\n          isDisabled={\r\n            club?.members.length < 20 ||\r\n            !chairperson ||\r\n            !secretary ||\r\n            !viceChair\r\n          }\r\n          onClick={() => handleCreateClub()}\r\n        >\r\n          <Text> Register Club </Text>\r\n        </Button>{\" \"}\r\n      </Box>\r\n    </VStack>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Select,\r\n  Spinner,\r\n  Text,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { RxEyeNone } from \"react-icons/rx\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport { getStatesOfCountry, getCountryFlag } from \"../assets/state\";\r\nimport UpperNav from \"../miscellenious/upperNav\";\r\nimport axios from \"axios\";\r\nimport { ClubRegistration } from \"../Authentication/club\";\r\nimport FooterAchieves from \"../components/FooterAchieves\";\r\n\r\nconst Clubs = () => {\r\n  const { user, club } = ChatState();\r\n  const [subdivisions, setSubdivisions] = useState([]);\r\n  const [clubs, setClubs] = useState([]);\r\n  const [province, setProvince] = useState(user?.provinces);\r\n  const [fillForm, setFillForm] = useState(false);\r\n  const navigate = useNavigate();\r\n  const flag = getCountryFlag(user?.country);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const fetchClubs = useCallback(async () => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setClubs([]);\r\n    \r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/${user.country}/${province}`,\r\n        config\r\n      );\r\n      setClubs(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setClubs([]);\r\n      setLoading(false);\r\n    }\r\n  }, [user, setClubs, province ]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/dashboard\");\r\n      return;\r\n    }\r\n    fetchClubs();\r\n  }, [fetchClubs, navigate, user]);\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchSubdivisions = async () => {\r\n      const states = getStatesOfCountry(user?.country);\r\n      setSubdivisions(states);\r\n    };\r\n\r\n    fetchSubdivisions();\r\n  }, [user?.country]);\r\n\r\n  const handleCreateClub = () => {\r\n    const belts = [\r\n      \"Guest\",\r\n      \"Yellow\",\r\n      \"Orange\",\r\n      \"Red\",\r\n      \"Purple\",\r\n      \"Green\",\r\n      \"Blue\",\r\n      \"Brown\",\r\n      \"Black\",\r\n    ];\r\n\r\n    if (user && belts.indexOf(user.belt) >= belts.indexOf(\"Orange\")) {\r\n      setFillForm(true);\r\n    } else {\r\n      toast({\r\n        title: \"You need to elevate your craft to at least Orange Belt!\",\r\n        description: \"Requirements not attained yet\",\r\n        status: \"info\",\r\n        duration: 5000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDir=\"column\"\r\n      backgroundColor=\"whitesmoke\"\r\n      width=\"100%\"\r\n      overflowX={\"auto\"}\r\n      justifyContent={\"start\"}\r\n      alignItems={\"center\"}\r\n      minH={\"100vh\"}\r\n    >\r\n        <UpperNav />\r\n      <Text\r\n        textAlign=\"center\"\r\n        fontSize={\"large\"}\r\n        fontWeight={\"bold\"}\r\n        p={3}\r\n        mt={20}\r\n      >\r\n        Country: {user?.country} {flag}\r\n      </Text>\r\n      <Box\r\n        display={\"flex\"}\r\n        flexDir={\"column\"}\r\n        justifyContent={\"center\"}\r\n        alignItems={\"center\"}\r\n        width={{ base: \"97%\", md: \"70%\" }}\r\n        boxShadow=\"dark-lg\"\r\n        p=\"6\"\r\n        rounded=\"md\"\r\n        bg=\"white\"\r\n        fontStyle={\"italic\"}\r\n        mb={\"6\"}\r\n      >\r\n        <FormControl\r\n          id=\"provinces\"\r\n          isRequired\r\n          textAlign={\"center\"}\r\n          width={{ base: \"100%\", md: \"60%\" }}\r\n          p={3}\r\n        >\r\n          <FormLabel textAlign={\"center\"}>Select State</FormLabel>\r\n          <Select\r\n            placeholder=\"Select your province\"\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            width={\"100%\"}\r\n            isDisabled={loading}\r\n            value={province}\r\n            onChange={(e) => {\r\n              setProvince(e.target.value);\r\n              fetchClubs(e.target.value);\r\n            }}\r\n          >\r\n            {subdivisions &&\r\n              subdivisions.map((subdivision, index) => (\r\n                <option\r\n                  key={index}\r\n                  value={subdivision.value}\r\n                  style={{ color: \"black\" }}\r\n                >\r\n                  {subdivision.name}\r\n                </option>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n        <Text fontSize={\"larger\"} fontWeight={\"bold\"} textColor={\"darkgreen\"}>\r\n          Available Clubs in {province}\r\n        </Text>\r\n\r\n        <Box\r\n          display={\"flex\"}\r\n          flexDir={\"column\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          height={\"10rem\"}\r\n          m={1}\r\n          p={0}\r\n          borderRadius={3}\r\n          width={{ base: \"100%\", md: \"80%\" }}\r\n         >\r\n          {\" \"}\r\n          {loading ? (\r\n            <Spinner size={\"xl\"} speed=\"0.65s\" />\r\n          ) : (\r\n            <Box\r\n              display={\"flex\"}\r\n              flexDir={\"column\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n              maxH={\"300px\"}\r\n              width={\"100%\"}\r\n            >\r\n              {clubs.length > 0 ? (\r\n                clubs.map((club, index) => (\r\n                  <Button\r\n                    key={index}\r\n                    width={\"100%\"}\r\n                    border={\"none\"}\r\n                    onClick={() => navigate(`/showclub/${club._id}/${false}`)}\r\n                    mb={\"2\"}\r\n                    justifyContent={\"space-around\"}\r\n                  >\r\n                <Text fontSize={\"xs\"}>{club.name}</Text>\r\n                <Text\r\n                  fontSize={\"xs\"}\r\n                  bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n                  color={\"green.500\"}\r\n                  rounded={\"full\"}\r\n                  p={\"2\"}\r\n                >\r\n                  {club?.registered ? \"Registered\" : \"Unregistered\"}\r\n                </Text>\r\n                  </Button>\r\n                ))\r\n              ) : (\r\n                <>\r\n                  <Text textAlign={\"center\"}>\r\n                  <RxEyeNone />\r\n                  </Text>\r\n\r\n                  <Text fontWeight={\"bold\"}>\r\n                    No clubs available in this region yet.\r\n                  </Text>\r\n                  <Text>Start your own club below and lead the way!</Text>\r\n                </>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </Box>\r\n\r\n        {user?.couch ? (\r\n          <Box m={2}>Your Club</Box>\r\n        ) : (\r\n          <Button\r\n            display={\"flex\"}\r\n            backgroundColor={\"#c255ed\"}\r\n            borderRadius={20}\r\n            fontSize={\"small\"}\r\n            border={\"none\"}\r\n            onClick={() => {\r\n              handleCreateClub();\r\n            }}\r\n            m={2}\r\n          >\r\n              {club && club.registered\r\n                ? \"Continue Registering\"\r\n                : \"Register Club\"}\r\n          </Button>\r\n        )}\r\n      </Box>\r\n      {fillForm && <ClubRegistration onClose={() => setFillForm(false)} />}\r\n      <FooterAchieves/>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Clubs;\r\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { compact, mapResponsive } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nconst GridItem = forwardRef(\n  function GridItem2(props, ref) {\n    const {\n      area,\n      colSpan,\n      colStart,\n      colEnd,\n      rowEnd,\n      rowSpan,\n      rowStart,\n      ...rest\n    } = props;\n    const styles = compact({\n      gridArea: area,\n      gridColumn: spanFn(colSpan),\n      gridRow: spanFn(rowSpan),\n      gridColumnStart: colStart,\n      gridColumnEnd: colEnd,\n      gridRowStart: rowStart,\n      gridRowEnd: rowEnd\n    });\n    return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n  }\n);\nGridItem.displayName = \"GridItem\";\n\nexport { GridItem };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport { Grid };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport { Link };\n"],"names":["_jsx","Grid","templateColumns","base","md","gap","m","mt","userSelect","children","title","items","subtitle","description","map","section","index","GridItem","colSpan","h","bg","p","borderRadius","_jsxs","Box","fontSize","Text","fontWeight","mb","item","idx","style","padding","link","Link","color","href","target","rel","ClubRegistration","_ref","onClose","_ChatState","ChatState","user","club","setClub","setRequests","setUser","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","country","_useState4","selectedCountry","setSelectedCountry","_useState5","provinces","_useState6","provience","setProvience","_useState7","_useState8","chairperson","setChairperson","_useState9","_useState10","viceChair","setViceChair","_useState11","_useState12","secretary","setSecretary","_useState13","_useState14","subdivisions","setSubdivisions","_useState15","_useState16","suggest","setSuggest","navigate","useNavigate","toast","useToast","socket","useConnectSocket","token","useEffect","on","prevUser","_objectSpread","clubRequests","concat","_toConsumableArray","_id","prev","countryOptions","Object","entries","countries","_ref2","_ref3","value","label","getUsersWithNoClub","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$get","data","wrap","_context","next","abrupt","headers","Authorization","axios","get","sent","t0","console","error","stop","fetchSubdivisions","_ref5","_callee2","states","_context2","getStatesOfCountry","apply","arguments","requestClubRequest","_ref6","_callee3","userId","event","_yield$axios$get2","_context3","preventDefault","_x","_x2","handleCreateClub","_ref7","_callee4","e","info","_yield$axios$post","_context4","post","log","_x3","VStack","backgroundColor","width","boxShadow","rounded","display","justifyContent","alignItems","Button","onClick","useColorModeValue","px","registration","border","FormControl","id","isRequired","FormLabel","textColor","Input","placeholder","onChange","Select","isDisabled","option","subdivision","type","flexDir","height","overflow","textAlign","length","suggestion","admission","includes","members","borderTop","borderBottom","member","isInvalid","some","adm","colorScheme","marginTop","clubs","setClubs","province","setProvince","fillForm","setFillForm","flag","getCountryFlag","loading","setLoading","fetchClubs","overflowX","minH","UpperNav","fontStyle","Spinner","size","speed","maxH","registered","_Fragment","RxEyeNone","couch","belts","indexOf","belt","status","duration","position","FooterAchieves","_excluded","spanFn","span","mapResponsive","forwardRef","props","ref","area","colStart","colEnd","rowEnd","rowSpan","rowStart","rest","_objectWithoutProperties","styles","compact","gridArea","gridColumn","gridRow","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","jsx","chakra","div","__css","displayName","templateAreas","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","useStyleConfig","_omitThemingProps","omitThemingProps","className","isExternal","a","cx"],"sourceRoot":""}