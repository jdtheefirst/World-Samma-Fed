{"version":3,"file":"static/js/820.0265f07d.chunk.js","mappings":"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","sources":["components/config/axios.js","components/config/chatlogics.js","components/config/formatTime.js","miscellenious/PicLogic.js","miscellenious/Requests.js","miscellenious/upperNav.js","miscellenious/Skeleton.js","miscellenious/AdmissionForm.js","pages/ProfilePage.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create();\r\naxiosInstance.interceptors.response.use(\r\n  async (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { z } from \"zod\";\r\n\r\nexport const UserFormValidation = z.object({\r\n  name: z\r\n    .string()\r\n    .min(2, \"Name must be at least 2 characters\")\r\n    .max(50, \"Name must be at most 50 characters\"),\r\n  otherName: z\r\n    .string()\r\n    .min(2, \"Other name must be at least 2 characters\")\r\n    .max(50, \"Other name must be at most 50 characters\"),\r\n  email: z.string().email(\"Invalid email address\"),\r\n  gender: z.enum([\"male\", \"female\", \"other\"]),\r\n  password: z\r\n    .string()\r\n    .min(4, \"Password must be at least 8 characters long\")\r\n    .max(100, \"Password must be at most 100 characters\"),\r\n  confirmPassword: z\r\n    .string()\r\n    .min(4, \"Confirm password must be at least 8 characters long\")\r\n    .max(100, \"Confirm password must be at most 100 characters\")\r\n    .refine((val, ctx) => val === ctx.parent.password, {\r\n      message: \"Passwords do not match\",\r\n    }),\r\n  passport: z.string().regex(/^\\d{8,15}$/, \"Invalid passport/ID number\"),\r\n  selectedCountry: z.string().min(2, \"Country is required\"),\r\n  provinces: z.string().optional(),\r\n  language: z.string().min(2, \"Language is required\"),\r\n  pic: z.string().url(\"Profile picture is required\"),\r\n});\r\n\r\nexport const isSameSenderMargin = (messages, m, i, userId) => {\r\n  const isCurrentUserSender = m.sender?.$oid === userId;\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender?.$oid === m.sender?.$oid &&\r\n    !isCurrentUserSender\r\n  ) {\r\n    return 33;\r\n  } else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender?.$oid !== m.sender?.$oid &&\r\n      !isCurrentUserSender) ||\r\n    (i === messages.length - 1 && !isCurrentUserSender)\r\n  ) {\r\n    return 0;\r\n  } else {\r\n    return \"auto\";\r\n  }\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1]?.sender?._id !== m.sender?._id ||\r\n      messages[i + 1]?.sender?._id === undefined) &&\r\n    messages[i]?.sender?._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  const lastMessageSenderId = messages[messages.length - 1].sender?.$oid;\r\n  return (\r\n    i === messages.length - 1 &&\r\n    lastMessageSenderId !== userId &&\r\n    lastMessageSenderId\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender?.$oid === m.sender?.$oid;\r\n};\r\n\r\nexport const getSenderName = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n};\r\nexport const getSenderId = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1]._id : users[0]._id;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, user) => {\r\n  return user[0]._id === loggedUser._id ? user[1] : user[0];\r\n};\r\n\r\nexport async function getUserById(userId, token) {\r\n  if (!userId && !token) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/user/getuserid/${userId}`, config);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function useConnectSocket(user) {\r\n  const [socket, setSocket] = useState(null);\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!user || !user.token) {\r\n      return;\r\n    }\r\n\r\n    // Check if the socket already exists\r\n    if (socketRef.current) {\r\n      setSocket(socketRef.current);\r\n      return;\r\n    }\r\n\r\n    const userId = user._id;\r\n    const newSocket = io(\"/\", {\r\n      query: { token: user.token, userId },\r\n    });\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"connected\");\r\n      setSocket(newSocket); // Set socket state after connection\r\n    });\r\n\r\n    newSocket.on(\"disconnect\", () => {\r\n      console.log(\"Socket disconnected\");\r\n    });\r\n\r\n    // Update socketRef with the new socket instance\r\n    socketRef.current = newSocket;\r\n\r\n    // Clean up function to disconnect socket when the component unmounts\r\n    return () => {\r\n      if (newSocket) {\r\n        newSocket.disconnect();\r\n      }\r\n      socketRef.current = null;\r\n    };\r\n  }, [user]); // Only rerun if user changes\r\n\r\n  return socket;\r\n}\r\n\r\nexport async function makePaymentMpesa(amount, phoneNumber, user, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/makepaymentmpesa/${user._id}?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {}\r\n}\r\n\r\nexport async function donationsMpesa(amount, phoneNumber, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/donationsmpesa?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function handleApprove(accountType, type, user, setUser) {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/paycheck/${user._id}/${type}/${accountType}`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    const userData = await {\r\n      ...user,\r\n      accountType: data.accountType,\r\n      subscription: data.subscription,\r\n      day: data.day,\r\n    };\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(userData));\r\n    setUser(userData);\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw new Error(\"Error occurred\", error);\r\n  }\r\n}\r\n","const formatMessageTime = (timestamp) => {\r\n  const messageTime = new Date(timestamp);\r\n  const currentTime = new Date();\r\n\r\n  const timeDifference = currentTime - messageTime;\r\n  const seconds = Math.floor(timeDifference / 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  const hours = Math.floor(minutes / 60);\r\n  const days = Math.floor(hours / 24);\r\n\r\n  if (seconds < 60) {\r\n    return \"Just now\";\r\n  } else if (minutes < 60) {\r\n    return `${minutes} minute${minutes === 1 ? \"\" : \"s\"} ago`;\r\n  } else if (hours < 24) {\r\n    return `${hours} hour${hours === 1 ? \"\" : \"s\"} ago`;\r\n  } else if (days === 1) {\r\n    return \"Yesterday\";\r\n  } else if (days < 7) {\r\n    return `${days} day${days === 1 ? \"\" : \"s\"} ago`;\r\n  } else {\r\n    const options = {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n    };\r\n    return messageTime.toLocaleDateString(\"en-US\", options);\r\n  }\r\n};\r\nexport default formatMessageTime;\r\n","import React, { useState } from \"react\";\r\nimport { FormControl, FormLabel, Input, useToast } from \"@chakra-ui/react\";\r\n\r\nconst UploadPicture = ({ setPicLoading, color, setPic }) => {\r\n  const toast = useToast();\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    setPicLoading(true);\r\n\r\n    if (!file) {\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (file.type === \"image/jpeg\" || file.type === \"image/png\") {\r\n      let data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"upload_preset\", \"WorldSamma\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dsdlgmgwi/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          setPicLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setPicLoading(false);\r\n        });\r\n    } else {\r\n      setPicLoading(false);\r\n\r\n      toast({\r\n        title: \"Invalid file type\",\r\n        status: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl id=\"pic\">\r\n      <FormLabel textColor={color} fontSize=\"small\">Upload your Passport Photo</FormLabel>\r\n      <Input\r\n        type=\"file\"\r\n        p={1.5}\r\n        textColor={color}\r\n        fontSize=\"small\"\r\n        placeholder=\"Select a passport photo\"\r\n        accept=\"image/*\"\r\n        onChange={handleFileChange}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default UploadPicture;\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  Button,\r\n  Text,\r\n  Box,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RiTeamLine } from \"react-icons/ri\";\r\n\r\nconst Requests = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [clubRequests, setClubRequests] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { user } = ChatState();\r\n  const navigate = useNavigate();\r\n\r\n  const fetchClubRequests = useCallback(async () => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/github/something/${user._id}`,\r\n        config\r\n      );\r\n      setClubRequests(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching club requests:\", error);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchClubRequests();\r\n    }\r\n  }, [user, fetchClubRequests]);\r\n  const declineRequest = async (clubId) => {\r\n    if (!user || !clubId) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/decline/request/${clubId}/${user._id}`,\r\n        config\r\n      );\r\n      setClubRequests(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(\"Error fetching club requests/decline:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        backgroundColor={\"white\"}\r\n        _hover={{ backgroundColor: \"transparent\" }}\r\n        onClick={onOpen}\r\n        border={\"none\"}\r\n      >\r\n        <RiTeamLine fontSize={\"20px\"} border={\"none\"}/>\r\n        {clubRequests && clubRequests.length > 0 && (\r\n          <Text\r\n            position=\"absolute\"\r\n            bottom=\"70%\"\r\n            right=\"70%\"\r\n            transform=\"translate(50%, 0)\"\r\n            bg=\"red.500\"\r\n            borderRadius=\"50%\"\r\n            width=\"2px\"\r\n            height=\"2px\"\r\n            p={1.5}\r\n          ></Text>\r\n        )}\r\n        <Text />\r\n      </Button>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalOverlay\r\n      bg=\"blackAlpha.300\"\r\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n    />\r\n        <ModalContent>\r\n          <ModalHeader textAlign={\"center\"}>Clubs Requests</ModalHeader>\r\n          <ModalCloseButton border={\"none\"} />\r\n          <ModalBody\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            flexDir={\"column\"}\r\n            maxH={\"300px\"}\r\n          >\r\n            {clubRequests && clubRequests.length > 0 ? (\r\n              clubRequests.map((club, index) => (\r\n                <Box\r\n                  display={\"flex\"}\r\n                  justifyContent={\"space-between\"}\r\n                  alignItems={\"center\"}\r\n                  width={\"100%\"}\r\n                  key={index}\r\n                >\r\n                  <Button\r\n                    key={club._id}\r\n                    justifyContent={\"space-between\"}\r\n                    onClick={() => navigate(`/showclub/${club._id}`)}\r\n                    border={\"none\"}\r\n                  >\r\n                    {index + 1}. Club Name: {club.name}\r\n                  </Button>\r\n                  <Button\r\n                    background={\"#f05e56\"}\r\n                    onClick={() => declineRequest(club._id)}\r\n                    border={\"none\"}\r\n                  >\r\n                    {loading ? <Spinner size={\"small\"} /> : `Decline`}\r\n                  </Button>\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <>\r\n                <Text>All club requests have been replied to.</Text>\r\n              </>\r\n            )}\r\n          </ModalBody>\r\n\r\n          <ModalFooter fontSize={\"small\"} textDecor={\"underline\"}>\r\n            These requests were made by club coaches.\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default Requests;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Badge,\r\n  Image,\r\n  useBreakpointValue,\r\n  IconButton,\r\n  CloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { TiThMenuOutline } from \"react-icons/ti\";\r\nimport { BellIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport Requests from \"./Requests\";\r\nimport React from \"react\";\r\nimport logo7 from \"../final.jpeg\";\r\n\r\nfunction UpperNav() {\r\n  const { user, notification, setNotification } = ChatState();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const navigate = useNavigate();\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    setNotification([]);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const displayValue = useBreakpointValue({ base: \"none\", md: \"flex\" });\r\n\r\n  const textVisibility = useBreakpointValue({\r\n    base: \"hidden\",\r\n    md: \"visible\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p={3}\r\n        paddingBottom={2}\r\n        boxShadow=\"2xl\"\r\n        zIndex={10}\r\n        top={0}\r\n        position={\"fixed\"}\r\n      >\r\n        <Image src={logo7} height={12}/>\r\n        <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n          <Button\r\n            backgroundColor={\"transparent\"}\r\n            border={\"none\"}\r\n            display={displayValue}\r\n            visibility={textVisibility}\r\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\r\n            onClick={() => {\r\n              navigate(\"/dashboard\");\r\n            }}\r\n          >\r\n            My Programs\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            display={{ base: \"none\", md: \"flex\" }}\r\n            border={\"none\"}\r\n            onClick={onOpen}\r\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\r\n          >\r\n            <Text\r\n              px={4}\r\n              userSelect={\"none\"}\r\n            >\r\n              Discover\r\n            </Text>\r\n          </Button>\r\n          <Requests />\r\n        </Box>\r\n\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1} position=\"relative\" border={\"none\"}>\r\n              <BellIcon fontSize=\"2xl\" p={0} m={0} />\r\n              {notification.length > 0 && (\r\n                <Badge\r\n                  variant=\"subtle\"\r\n                  position=\"absolute\"\r\n                  top=\"-3px\"\r\n                  right=\"-3px\"\r\n                  backgroundColor={\"red\"}\r\n                  zIndex={1}\r\n                  borderRadius={\"50%\"}\r\n                  color=\"white\"\r\n                >\r\n                  {notification.length}\r\n                </Badge>\r\n              )}\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                >\r\n                  {`New Message from ${\r\n                    notif.sender ? notif.sender.name : \"Coach\"\r\n                  } ADM: ${notif.sender ? notif.sender.admission : \" \"}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton\r\n              as={Button}\r\n              bg=\"white\"\r\n              border={\"none\"}\r\n              _hover={{ backgroundColor: \"transparent\" }}\r\n              onClick={onOpen}\r\n            >\r\n              {displayValue === \"flex\" ? (\r\n                <Avatar\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={user?.name}\r\n                  src={user?.pic}\r\n                />\r\n              ) : (\r\n                <IconButton\r\n                  backgroundColor={\"transparent\"}\r\n                  border={\"none\"}\r\n                  icon={\r\n                    <TiThMenuOutline />\r\n                  }\r\n                />\r\n              )}\r\n            </MenuButton>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n      <DrawerOverlay\r\n      bg=\"blackAlpha.300\"\r\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n    />\r\n        <DrawerContent>\r\n          <DrawerHeader\r\n            borderBottomWidth=\"1px\"\r\n            display={\"flex\"}\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            Dashboard\r\n            <CloseButton onClick={onClose} border={\"none\"} />\r\n          </DrawerHeader>\r\n          <DrawerBody\r\n            display={\"flex\"}\r\n            flexDir={\"column\"}\r\n            justifyContent={\"space-between\"}\r\n            width={\"100%\"}\r\n          >\r\n            <Box\r\n              padding={3}\r\n              display={\"flex\"}\r\n              justifyContent={\"space-around\"}\r\n              flexDir={\"column\"}\r\n            >\r\n              <Button\r\n                display={\"flex\"}\r\n                justifyContent={\"left\"}\r\n                alignItems={\"center\"}\r\n                border={\"none\"}\r\n                background={\"white\"}\r\n                m={1}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={() => navigate(\"/profile\")}\r\n              >\r\n                <Avatar\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={user?.name}\r\n                  src={user?.pic}\r\n                />\r\n                <Text p={2} m={1}>\r\n                  Profile\r\n                </Text>\r\n              </Button>\r\n              <Button\r\n                justifyContent={\"left\"}\r\n                border={\"none\"}\r\n                background={\"white\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={() => {\r\n                  navigate(\"/dashboard\");\r\n                  onClose();\r\n                }}\r\n              >\r\n                My Programs\r\n              </Button>\r\n              <Button\r\n                justifyContent={\"start\"}\r\n                background={\"white\"}\r\n                border={\"none\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={() => {\r\n                  navigate(\"/clubs\");\r\n                  onClose();\r\n                }}\r\n              >\r\n                Clubs\r\n              </Button>\r\n              <Button\r\n                justifyContent={\"left\"}\r\n                background={\"white\"}\r\n                border={\"none\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                isDisabled={!user?.provinces}\r\n                onClick={() => {\r\n                  navigate(\"/province\");\r\n                  onClose();\r\n                }}\r\n              >\r\n                Provincial level\r\n              </Button>\r\n              <Button\r\n                background={\"white\"}\r\n                justifyContent={\"left\"}\r\n                border={\"none\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={() => {\r\n                  navigate(\"/national\");\r\n                  onClose();\r\n                }}\r\n              >\r\n                National level\r\n              </Button>\r\n              <Button\r\n                background={\"white\"}\r\n                justifyContent={\"left\"}\r\n                border={\"none\"}\r\n                _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n                onClick={()=> {\r\n                  navigate(\"/championships\")\r\n                }}\r\n              >\r\n                International Championship\r\n              </Button>\r\n            </Box>\r\n            <Button border={\"none\"} onClick={logoutHandler}>Log out</Button>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpperNav;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\n\r\nconst UserListItem = ({ handleFunction, user }) => {\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38B2AC\",\r\n        color: \"white\",\r\n      }}\r\n      width=\"100%\"\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Email : </b>\r\n          {user.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  Image,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { getStatesOfCountry } from \"../assets/state\";\r\nimport { countries, languages } from \"countries-list\";\r\nimport formatMessageTime from \"../components/config/formatTime\";\r\nimport {\r\n  makePaymentMpesa,\r\n  useConnectSocket,\r\n} from \"../components/config/chatlogics\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport UploadPicture from \"./PicLogic\";\r\n\r\nconst AdmissionForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    otherName: \"\",\r\n    id: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n    selectedCountry: \"\",\r\n    provinces: \"\",\r\n    language: \"\",\r\n    password: \"\",\r\n    confirmpassword: \"\",\r\n    gender: \"\",\r\n  });\r\n  const [showPaypal, setShowPaypal] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [subdivisions, setSubdivisions] = useState([]);\r\n  const [student, setStudent] = useState(null);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [pic, setPic] = useState(\"\");\r\n  const { user } = ChatState();\r\n  const [picLoading, setPicLoading] = useState(false);\r\n  const toast = useToast();\r\n  const socket = useConnectSocket(user?.token);\r\n\r\n  const handleClick = () => setShow(!show);\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"Event:\", e);\r\n    if (!e || !e.target) {\r\n      console.log(\"Event or target is undefined.\");\r\n      return;\r\n    }\r\n\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n    if (name === \"selectedCountry\") {\r\n      const states = getStatesOfCountry(value);\r\n      setSubdivisions(states);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user/admission\",\r\n        {\r\n          ...formData,\r\n          pic: pic,\r\n        },\r\n        config\r\n      );\r\n      setStudent(data);\r\n      setFormData({\r\n        name: \"\",\r\n        otherName: \"\",\r\n        id: \"\",\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n        selectedCountry: \"\",\r\n        provinces: \"\",\r\n        language: \"\",\r\n        password: \"\",\r\n        confirmpassword: \"\",\r\n        gender: \"\",\r\n      });\r\n      setPic(\"\");\r\n      setShowPaypal(false);\r\n      setSubdivisions([]);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast({\r\n        title: \"Error occurred!\",\r\n        description: error.response.data.message || \"Something went wrong.\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const countryOptions = Object.entries(countries).map(([code, country]) => ({\r\n    value: country.name,\r\n    label: country.name,\r\n  }));\r\n  const languageOptions = Object.keys(languages).map((code) => ({\r\n    code,\r\n    name: languages[code].name,\r\n  }));\r\n  useEffect(() => {\r\n    if (!formData.selectedCountry) {\r\n      return;\r\n    }\r\n    const fetchSubdivisions = async () => {\r\n      const states = getStatesOfCountry(formData.selectedCountry);\r\n      setSubdivisions(states);\r\n    };\r\n\r\n    fetchSubdivisions();\r\n  }, [formData.selectedCountry]);\r\n\r\n  useEffect(() => {\r\n    if (!socket) {\r\n      return;\r\n    }\r\n    const handleManualRegister = async () => {\r\n      await handleSubmit();\r\n    };\r\n\r\n    socket.on(\"manualRegister\", handleManualRegister);\r\n\r\n    return () => {\r\n      socket.off(\"manualRegister\", handleManualRegister);\r\n    };\r\n  }, [socket]);\r\n\r\n  const handleShow = () => {\r\n    const {\r\n      name,\r\n      otherName,\r\n      selectedCountry,\r\n      provinces,\r\n      language,\r\n      password,\r\n      confirmpassword,\r\n      gender,\r\n    } = formData;\r\n\r\n    if (\r\n      !name ||\r\n      !otherName ||\r\n      !selectedCountry ||\r\n      !provinces ||\r\n      !language ||\r\n      !password ||\r\n      !confirmpassword ||\r\n      !gender ||\r\n      !pic\r\n    ) {\r\n      toast({\r\n        title: \"Please fill all the required fields.\",\r\n        status: \"warning\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Do Not Match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setShowPaypal(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!showPaypal && (\r\n        <Box\r\n          display=\"flex\"\r\n          flexDir=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          overflow=\"auto\"\r\n          width={{ base: \"100%\", md: \"80%\" }}\r\n          boxShadow=\"base\"\r\n          p=\"4\"\r\n          rounded=\"md\"\r\n          bg=\"white\"\r\n        >\r\n          <form style={{ width: \"100%\" }}>\r\n            <Text\r\n              fontSize={\"sm\"}\r\n              fontWeight={500}\r\n              bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n              px={6}\r\n              p={\"3\"}\r\n              m={1}\r\n              color={\"green.500\"}\r\n              rounded={\"full\"}\r\n            >\r\n              Register Students Manually\r\n            </Text>\r\n            {student && (\r\n              <Text textAlign={\"center\"}>\r\n                ⚠️Student Code: {student?.admission}, Name: {student?.name},\r\n                createdAt: {formatMessageTime(student?.createdAt)}{\" \"}\r\n              </Text>\r\n            )}\r\n            <FormControl id=\"name\" isRequired>\r\n              <FormLabel>First Name </FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Student's first name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"otherName\" isRequired>\r\n              <FormLabel>Last Name </FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"otherName\"\r\n                placeholder=\"Student's last name\"\r\n                value={formData.otherName}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"country\" isRequired>\r\n              <FormLabel>Country</FormLabel>\r\n              <Select\r\n                placeholder=\"Select your country\"\r\n                display={\"flex\"}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n                width={\"100%\"}\r\n                value={formData.selectedCountry}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, selectedCountry: e.target.value })\r\n                }\r\n              >\r\n                {countryOptions.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                    style={{ color: \"black\" }}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {formData.selectedCountry && subdivisions.length > 0 ? (\r\n              <FormControl id=\"provinces\" isRequired>\r\n                <FormLabel>County/Province</FormLabel>\r\n                <Select\r\n                  placeholder=\"Select your province\"\r\n                  display={\"flex\"}\r\n                  justifyContent={\"center\"}\r\n                  alignItems={\"center\"}\r\n                  width={\"100%\"}\r\n                  value={formData.provinces}\r\n                  onChange={(e) =>\r\n                    setFormData({ ...formData, provinces: e.target.value })\r\n                  }\r\n                >\r\n                  {subdivisions &&\r\n                    subdivisions.map((subdivision) => (\r\n                      <option\r\n                        key={subdivision.value}\r\n                        value={subdivision.value}\r\n                        style={{ color: \"black\" }}\r\n                      >\r\n                        {subdivision.name}\r\n                      </option>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n            ) : (\r\n              <FormControl id=\"province\" isRequired>\r\n                <FormLabel>County/Province/state</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Province\"\r\n                  value={formData.provinces}\r\n                  onChange={(e) =>\r\n                    setFormData({ ...formData, provinces: e.target.value })\r\n                  }\r\n                />\r\n              </FormControl>\r\n            )}\r\n            <FormControl id=\"language\" isRequired>\r\n              <FormLabel>Language</FormLabel>\r\n              <Select\r\n                placeholder=\"Select language\"\r\n                textColor={\"grey\"}\r\n                value={formData.language}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, language: e.target.value })\r\n                }\r\n              >\r\n                {languageOptions.map((option) => (\r\n                  <option key={option.code} value={option.code}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <FormControl id=\"id\">\r\n              <FormLabel>ID</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"id\"\r\n                placeholder=\"Student's ID (optional)\"\r\n                value={formData.id}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"phoneNumber\">\r\n              <FormLabel>Phone Number</FormLabel>\r\n              <Input\r\n                type=\"number\"\r\n                name=\"phoneNumber\"\r\n                placeholder=\"Student's phone number (optional)\"\r\n                value={formData.phoneNumber}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"email\">\r\n              <FormLabel>Email</FormLabel>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Student's email address (optional)\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"password\" isRequired>\r\n              <FormLabel>Password</FormLabel>\r\n              <InputGroup size=\"md\">\r\n                <Input\r\n                  type={show ? \"text\" : \"password\"}\r\n                  placeholder=\"Enter Password\"\r\n                  value={formData.password}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      password: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <InputRightElement width=\"4.5rem\">\r\n                  <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                    {show ? \"Hide\" : \"Show\"}\r\n                  </Button>\r\n                </InputRightElement>\r\n              </InputGroup>\r\n            </FormControl>\r\n            <FormControl id=\"confirmPassword\" isRequired>\r\n              <FormLabel>Confirm Password</FormLabel>\r\n              <InputGroup size=\"md\">\r\n                <Input\r\n                  type={show ? \"text\" : \"password\"}\r\n                  placeholder=\"Confirm password\"\r\n                  value={formData.confirmpassword}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      confirmpassword: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <InputRightElement width=\"4.5rem\">\r\n                  <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                    {show ? \"Hide\" : \"Show\"}\r\n                  </Button>\r\n                </InputRightElement>\r\n              </InputGroup>\r\n            </FormControl>\r\n            <RadioGroup\r\n              value={formData.gender}\r\n              onChange={(value) =>\r\n                setFormData({\r\n                  ...formData,\r\n                  gender: value,\r\n                })\r\n              }\r\n              isRequired\r\n            >\r\n              <Stack direction=\"row\">\r\n                <Radio value=\"male\">Male</Radio>\r\n                <Radio value=\"female\">Female</Radio>\r\n              </Stack>\r\n            </RadioGroup>\r\n\r\n            <UploadPicture\r\n              setPic={setPic}\r\n              setPicLoading={setPicLoading}\r\n              color={\"black\"}\r\n            />\r\n\r\n            <Button\r\n              onClick={() => handleShow()}\r\n              mt={4}\r\n              colorScheme=\"teal\"\r\n              isDisabled={!formData.name || !formData.otherName || picLoading}\r\n              isLoading={picLoading}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n      )}\r\n      {showPaypal && (\r\n        <Box\r\n          display=\"flex\"\r\n          flexDir={\"column\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          overflow={\"auto\"}\r\n          width={\"100%\"}\r\n          boxShadow=\"base\"\r\n          p=\"6\"\r\n          rounded=\"md\"\r\n          bg=\"white\"\r\n        >\r\n          {\" \"}\r\n          <PayPalScriptProvider\r\n            options={{\r\n              clientId:\r\n                \"AZ5Pdn0aioG6OzW6n4Q7W64LxkdOhS0wEIOAn_UmF5askK41E72ejdrsHPJoFIcg0atbN-WZG14fd6oc\",\r\n            }}\r\n          >\r\n            <PayPalButtons\r\n              createOrder={(data, actions) => {\r\n                const amount = 4.0;\r\n                return actions.order.create({\r\n                  purchase_units: [\r\n                    {\r\n                      amount: {\r\n                        currency_code: \"USD\",\r\n                        value: amount.toFixed(2),\r\n                      },\r\n                    },\r\n                  ],\r\n                });\r\n              }}\r\n              onApprove={async (data, actions) => {\r\n                await handleSubmit();\r\n                return actions.order.capture().then(function (details) {\r\n                  setShowPaypal(false);\r\n                  toast({\r\n                    title: \"Success\",\r\n                    status: \"success\",\r\n                    duration: 3000,\r\n                    isClosable: true,\r\n                    position: \"bottom\",\r\n                  });\r\n                });\r\n              }}\r\n              onCancel={() => {\r\n                setShowPaypal(false);\r\n                toast({\r\n                  title: \"Cancelled\",\r\n                  status: \"info\",\r\n                  isClosable: true,\r\n                  position: \"bottom\",\r\n                });\r\n              }}\r\n            />\r\n          </PayPalScriptProvider>\r\n          <Button\r\n            fontSize={\"small\"}\r\n            width={{ base: \"80%\", md: \"25%\" }}\r\n            backgroundColor={\"green.400\"}\r\n            color={\"white\"}\r\n            onClick={() => {\r\n              setShow(true);\r\n            }}\r\n            p={0}\r\n          >\r\n            <Image\r\n              height={5}\r\n              width={\"auto\"}\r\n              src={\r\n                \"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1694007922/mpesa_ppfs6p.png\"\r\n              }\r\n              alt={\"\"}\r\n              loading=\"lazy\"\r\n            />{\" \"}\r\n            Pay via Mpesa\r\n          </Button>\r\n          {show && (\r\n            <Box m={3} width={{ base: \"80%\", md: \"50%\" }}>\r\n              <Input\r\n                fontSize={\"small\"}\r\n                color={\"green.400\"}\r\n                fontWeight={\"bold\"}\r\n                placeholder=\"Enter Your Mpesa Phone Number\"\r\n                textAlign={\"center\"}\r\n                type=\"text\"\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                value={phone}\r\n                minLength={10}\r\n                maxLength={10}\r\n              />\r\n              <Divider p={2} />\r\n              <Button\r\n                width={\"100%\"}\r\n                onClick={() => {\r\n                  makePaymentMpesa(\"500\", phone, user, toast);\r\n                  setShow(false);\r\n                  toast({\r\n                    title: \"Wait as message is sent\",\r\n                    status: \"loading\",\r\n                    isClosable: true,\r\n                    position: \"bottom\",\r\n                    duration: 5000,\r\n                  });\r\n                }}\r\n                isDisabled={phone.length !== parseInt(10)}\r\n                colorScheme=\"green\"\r\n              >\r\n                Proceed\r\n              </Button>\r\n              <Text textAlign={\"center\"} justifyContent={\"center\"}>\r\n                You'll be sent a Message\r\n              </Text>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdmissionForm;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  FormLabel,\r\n  Heading,\r\n  Image,\r\n  Input,\r\n  Skeleton,\r\n  SkeletonCircle,\r\n  SkeletonText,\r\n  Stack,\r\n  Text,\r\n  Textarea,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport UpperNav from \"../miscellenious/upperNav\";\r\nimport axiosInstance from \"../components/config/axios\";\r\nimport axios from \"axios\";\r\nimport UserListItem from \"../miscellenious/Skeleton\";\r\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\r\nimport AdmissionForm from \"../miscellenious/AdmissionForm\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport { FaLock, FaLockOpen } from \"react-icons/fa\";\r\nimport {\r\n  makePaymentMpesa,\r\n  useConnectSocket,\r\n} from \"../components/config/chatlogics\";\r\n\r\nconst ProfilePage = ({ user }) => {\r\n  const navigate = useNavigate();\r\n  const [club, setClub] = useState();\r\n  const toast = useToast();\r\n  const [showFollowers, setShowFollowers] = useState(false);\r\n  const handleMembers = () => {\r\n    setShowFollowers(!showFollowers);\r\n  };\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [student, setStudent] = useState(null);\r\n  const [payment, setPayment] = useState(false);\r\n  const [register, setRegister] = useState(false);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [savePhoto, setSavePhoto] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [photoLoading, setPhotoLoading] = useState(false);\r\n  const [passportPhoto, setPassportPhoto] = useState(null);\r\n  const [studentId, setStudentId] = useState(\"\");\r\n  const adminId = \"6693a995f6295b8bd90d9301\";\r\n\r\n  const socket = useConnectSocket(user);\r\n  const [isSocketConnected, setIsSocketConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      setIsSocketConnected(socket.connected);\r\n\r\n      socket.on(\"connect\", () => {\r\n        setIsSocketConnected(true);\r\n      });\r\n\r\n      socket.on(\"disconnect\", () => {\r\n        setIsSocketConnected(false);\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    if (isSocketConnected) {\r\n      socket.on(\"Upgrade\", async () => {\r\n        await submitDetails();\r\n        toast({\r\n          title: \"Submitting details!\",\r\n          status: \"loading\",\r\n          duration: 5000,\r\n          position: \"bottom\",\r\n        });\r\n      });\r\n      return () => {\r\n        socket.off(\"Upgrade\");\r\n      };\r\n    }\r\n  });\r\n\r\n  const requestClub = useCallback(async () => {\r\n    if (!user.coach) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n\r\n    try {\r\n      const clubId = user.coach;\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      axiosInstance\r\n        .get(`/api/clubs/${clubId}`, config)\r\n        .then(async (response) => {\r\n          setClub(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          if (error.response && error.response.status === 401) {\r\n            toast({\r\n              title: \"Your session has expired\",\r\n              description: \"Logging out in less than 8 seconds\",\r\n              duration: 8000,\r\n              status: \"loading\",\r\n              position: \"bottom\",\r\n            });\r\n\r\n            setTimeout(() => {\r\n              localStorage.removeItem(\"userInfo\");\r\n              navigate(\"/\");\r\n            }, 8000);\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.error(\"Error fetching Club:\", error);\r\n      setLoading(false);\r\n    }\r\n  }, [user?.token, setClub, setLoading]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      requestClub();\r\n    } else {\r\n      navigate(\"/dashboard\");\r\n    }\r\n  }, [user, navigate]);\r\n  const handleAcceptDecline = async (provinceId, accept) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\r\n        `/api/province/accept/decline/${provinceId}?accept=${accept}`,\r\n        config\r\n      );\r\n\r\n      setUser((prevUser) => ({\r\n        ...prevUser,\r\n        provinceRequests: data.provinceRequests,\r\n      }));\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: \"Try again after sometime.\",\r\n        status: \"error\",\r\n      });\r\n    }\r\n  };\r\n  const handleAcceptDeclineNational = async (nationalId, accept) => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\r\n        `/api/national/accept/decline/${nationalId}?accept=${accept}`,\r\n        config\r\n      );\r\n\r\n      setUser((prevUser) => ({\r\n        ...prevUser,\r\n        nationalRequests: data.nationalRequests,\r\n      }));\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: \"Try again after sometime.\",\r\n        status: \"error\",\r\n      });\r\n    }\r\n  };\r\n  const handleSearch = async () => {\r\n    setPayment(false);\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePhotoChange = (event) => {\r\n    setPassportPhoto(event.target.files[0]);\r\n  };\r\n  const submitHandler = useCallback(\r\n    async (studentId) => {\r\n      if (!user) {\r\n        return;\r\n      }\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n\r\n        await axios.post(\r\n          `/api/submit/${user._id}?studentId=${studentId}`,\r\n          {\r\n            savePhoto,\r\n            details,\r\n          },\r\n          config\r\n        );\r\n        toast({\r\n          title: \"Submission successful!\",\r\n          description: \"Wait for your results under 24hrs\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n        toast({\r\n          title: \"Error occurred trying to send your work!\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    },\r\n    [toast, user, savePhoto, details]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (savePhoto || studentId) {\r\n      submitHandler(studentId);\r\n    }\r\n  }, [savePhoto, studentId]);\r\n\r\n  const submitDetails = () => {\r\n    if (passportPhoto) {\r\n      setPhotoLoading(true);\r\n\r\n      let data = new FormData();\r\n      data.append(\"file\", passportPhoto);\r\n      data.append(\"upload_preset\", \"worldsamma\");\r\n\r\n      fetch(\"https://api.cloudinary.com/v1_1/dsdlgmgwi/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setSavePhoto(data.url);\r\n          setPhotoLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setPhotoLoading(false);\r\n          toast({\r\n            title: \"Error Occurred uploading your passport photo.\",\r\n            description: \"Please try again later.\",\r\n            duration: 5000,\r\n            status: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display={\"flex\"}\r\n      width={\"100%\"}\r\n      minH={\"100vh\"}\r\n      justifyContent={\"start\"}\r\n      flexDir={\"column\"}\r\n      overflow={\"auto\"}\r\n      alignItems={\"center\"}\r\n      bg={\"whitesmoke\"}\r\n    >\r\n      <UpperNav />\r\n      <Box\r\n        display={\"flex\"}\r\n        flexDir={\"column\"}\r\n        width={{ base: \"100%\", md: \"80%\" }}\r\n        boxShadow=\"dark-lg\"\r\n        rounded=\"md\"\r\n        bg=\"whitesmoke\"\r\n        mt={20}\r\n        fontFamily=\"Arial, sans-serif\"\r\n        overflow=\"auto\"\r\n      >\r\n        <Box\r\n          display={\"flex\"}\r\n          flexWrap={\"wrap\"}\r\n          textAlign={\"start\"}\r\n          boxShadow=\"base\"\r\n          width={\"100%\"}\r\n          p=\"2\"\r\n          rounded=\"md\"\r\n          bg=\"whitesmoke\"\r\n        >\r\n          {\" \"}\r\n          <Image\r\n            src={user?.pic}\r\n            alt={`Profile*`}\r\n            borderRadius=\"full\"\r\n            boxSize={{ base: \"100px\", md: \"200px\" }}\r\n            border=\"4px solid white\"\r\n          />\r\n          <Box fontSize={\"md\"} fontFamily={\"monospace\"}>\r\n            {\" \"}\r\n            <Heading textAlign={\"center\"} mb={4} color={\"teal\"}>\r\n              Profile\r\n            </Heading>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Name:\r\n              </Text>\r\n              {user?.name} {user?.otherName}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Code:\r\n              </Text>{\" \"}\r\n              {user?.admission\r\n                ? user?.admission\r\n                : `Not enrolled: ${user?.belt}`}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Email:\r\n              </Text>{\" \"}\r\n              {user?.email}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Country:\r\n              </Text>{\" \"}\r\n              {user?.country}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Province:\r\n              </Text>{\" \"}\r\n              {user?.provinces}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Coach:\r\n              </Text>\r\n              {user?.coach ? \" ✔️\" : \"Not a coach\"}\r\n            </Box>\r\n            <Box display={\"flex\"} flexWrap={\"wrap\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Highest Level Attained:\r\n              </Text>{\" \"}\r\n              {user?.belt}\r\n            </Box>\r\n            {user?._id === adminId && (\r\n              <Box display={\"flex\"} flexWrap={\"wrap\"}>\r\n                <Button\r\n                  colorScheme=\"teal\"\r\n                  onClick={() => navigate(\"/admin-work-slot\")}\r\n                  border={\"none\"}\r\n                  m={1}\r\n                >\r\n                  Admin Work Slot\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>{\" \"}\r\n        <Text width={\"100%\"} textAlign={\"center\"} p={\"3\"}>\r\n          Access all features in one place\r\n        </Text>\r\n        <Box\r\n          display={\"flex\"}\r\n          flexWrap={\"wrap\"}\r\n          width={\"100%\"}\r\n          p={\"3\"}\r\n          fontSize={\"small\"}\r\n        >\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            border={\"1px solid grey\"}\r\n            borderRadius={\"5px\"}\r\n            p={\"1\"}\r\n            m={\"1\"}\r\n          >\r\n            <GoDotFill />\r\n            <Text p={\"1\"}>Live stream competitions</Text>\r\n            <FaLockOpen style={{ color: \"green\" }} />\r\n          </Box>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            border={\"1px solid grey\"}\r\n            borderRadius={\"5px\"}\r\n            p={\"1\"}\r\n            m={\"1\"}\r\n          >\r\n            <GoDotFill />\r\n            <Text p={\"1\"}>Become a coach = 50%+ Revenue</Text>\r\n            {user?.coach ? (\r\n              <FaLockOpen style={{ color: \"green\" }} />\r\n            ) : (\r\n              <FaLock />\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            border={\"1px solid grey\"}\r\n            borderRadius={\"5px\"}\r\n            p={\"1\"}\r\n            m={\"1\"}\r\n          >\r\n            <GoDotFill />\r\n            <Text p={\"1\"}>Become a provincial coach = 70%+ Revenue</Text>\r\n            {user?.coach ? (\r\n              <FaLockOpen style={{ color: \"green\" }} />\r\n            ) : (\r\n              <FaLock />\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            border={\"1px solid grey\"}\r\n            borderRadius={\"5px\"}\r\n            p={\"1\"}\r\n            m={\"1\"}\r\n          >\r\n            <GoDotFill />\r\n            <Text p={\"1\"}>Become a national coach = 90%+ Revenue</Text>\r\n            {user?.coach ? (\r\n              <FaLockOpen style={{ color: \"green\" }} />\r\n            ) : (\r\n              <FaLock />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        {user?.coach && (\r\n          <>\r\n            <Box\r\n              display=\"flex\"\r\n              flexDir=\"column\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              width={\"100%\"}\r\n              minH={\"200px\"}\r\n              overflow={\"auto\"}\r\n            >\r\n              {loading ? (\r\n                <Stack width={\"100%\"}>\r\n                  <Skeleton height=\"20px\" />\r\n                  <Skeleton height=\"20px\" />\r\n                  <Skeleton height=\"20px\" />\r\n                </Stack>\r\n              ) : (\r\n                <Box\r\n                  display=\"flex\"\r\n                  flexDir=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  overflow=\"auto\"\r\n                  width={{ base: \"100%\", md: \"60%\" }}\r\n                  boxShadow=\"base\"\r\n                  mt={2}\r\n                  p=\"4\"\r\n                  rounded=\"md\"\r\n                  bg=\"whitesmoke\"\r\n                >\r\n                  <Heading mb={2}>Club Details</Heading>\r\n                  <Text\r\n                    fontSize={\"sm\"}\r\n                    fontWeight={500}\r\n                    bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n                    p={2}\r\n                    px={3}\r\n                    color={\"green.500\"}\r\n                    rounded={\"full\"}\r\n                    margin={1}\r\n                    width={\"90%\"}\r\n                  >\r\n                    Status (*\r\n                    {club && club.registered ? \"Registered\" : \"Not registered\"})\r\n                  </Text>\r\n                  <Text>Club Name: {club?.name}</Text>\r\n                  <Text>Club Code: {club?.code}</Text>\r\n                  <Button\r\n                    background={\"transparent\"}\r\n                    _hover={{ background: \"transparent\", color: \"green\" }}\r\n                    onClick={handleMembers}\r\n                    fontStyle={\"italic\"}\r\n                  >\r\n                    Members: {club?.members.length}\r\n                  </Button>\r\n                  <Text>Followers: {club?.followers.length}</Text>\r\n                  <Text>Received Likes: {club?.likes.length}</Text>\r\n                </Box>\r\n              )}\r\n\r\n              {showFollowers && (\r\n                <Box\r\n                  display={\"flex\"}\r\n                  flexDir=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  background={\"white\"}\r\n                  overflow={\"auto\"}\r\n                  boxShadow=\"base\"\r\n                  p=\"6\"\r\n                  mt={2}\r\n                  rounded=\"md\"\r\n                  bg=\"whitesmoke\"\r\n                  width={{ base: \"100%\", md: \"60%\" }}\r\n                >\r\n                  <Heading mb={2}>Members List</Heading>\r\n                  {club.members.length > 0 &&\r\n                    club.members.map((member, index) => (\r\n                      <Text fontSize={\"small\"} key={member._id}>\r\n                        {index + 1}. Name: {member.name} Adm: {member.admission}\r\n                      </Text>\r\n                    ))}\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </>\r\n        )}\r\n        {user?.coach && (\r\n          <Box\r\n            display=\"flex\"\r\n            flexDir={\"column\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            overflow={\"auto\"}\r\n            width={\"100%\"}\r\n            boxShadow=\"base\"\r\n            p=\"6\"\r\n            rounded=\"md\"\r\n            bg=\"whitesmoke\"\r\n          >\r\n            <Box textAlign={\"center\"} width={\"100%\"} mb={\"4\"}>\r\n              <Button\r\n                background={\"purple.400\"}\r\n                onClick={() => setRegister(!register)}\r\n              >\r\n                Register Students Manually\r\n              </Button>\r\n              {register && `↓`}\r\n            </Box>\r\n            {register && (\r\n              <Box\r\n                display=\"flex\"\r\n                flexDir=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                overflow=\"auto\"\r\n                width=\"100%\"\r\n                boxShadow=\"base\"\r\n                p=\"4\"\r\n                rounded=\"md\"\r\n                background=\"whitesmoke\"\r\n              >\r\n                {\" \"}\r\n                <AdmissionForm />\r\n              </Box>\r\n            )}\r\n            <Text\r\n              fontSize={\"sm\"}\r\n              fontWeight={500}\r\n              bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n              px={6}\r\n              p={\"3\"}\r\n              mb={\"4\"}\r\n              color={\"green.500\"}\r\n              rounded={\"full\"}\r\n            >\r\n              Coach's assisted student rank upgrading\r\n            </Text>\r\n            {!details || !passportPhoto}\r\n            <Box\r\n              display=\"flex\"\r\n              pb={2}\r\n              width={{ base: \"100%\", md: \"60%\" }}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n            >\r\n              <Input\r\n                placeholder=\"Search by name, email, or admission\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                fontSize={\"small\"}\r\n              />\r\n              <Button borderRadius={20} onClick={handleSearch}>\r\n                🔍Search\r\n              </Button>\r\n            </Box>\r\n            <Text>Or</Text>\r\n            {!student && (\r\n              <Box\r\n                display=\"flex\"\r\n                pb={2}\r\n                width={{ base: \"100%\", md: \"60%\" }}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n              >\r\n                <Textarea\r\n                  placeholder=\"Enter student details\"\r\n                  mr={2}\r\n                  value={details}\r\n                  onChange={(e) => setDetails(e.target.value)}\r\n                  fontSize={\"small\"}\r\n                />\r\n                <FormLabel>Picture</FormLabel>\r\n                <Input\r\n                  type=\"file\"\r\n                  accept=\"image/*\" // Only accept image files\r\n                  borderRadius={20}\r\n                  fontSize={\"small\"}\r\n                  onChange={handlePhotoChange}\r\n                  isDisabled={photoLoading}\r\n                />\r\n              </Box>\r\n            )}\r\n            <Box\r\n              display={\"flex\"}\r\n              flexDir={\"column\"}\r\n              overflow={\"auto\"}\r\n              width={\"100%\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n              overflowY={\"auto\"}\r\n            >\r\n              <Box\r\n                display={payment ? \"none\" : \"flex\"}\r\n                flexDir={\"column\"}\r\n                width={\"100%\"}\r\n                maxH={\"300px\"}\r\n                overflow={\"auto\"}\r\n              >\r\n                {loading ? (\r\n                  <Box\r\n                    display={\"flex\"}\r\n                    width={\"100%\"}\r\n                    padding=\"6\"\r\n                    boxShadow=\"lg\"\r\n                    bg=\"whitesmoke\"\r\n                  >\r\n                    <SkeletonCircle size=\"10\" />\r\n                    <SkeletonText\r\n                      mt=\"4\"\r\n                      noOfLines={4}\r\n                      spacing=\"4\"\r\n                      skeletonHeight=\"2\"\r\n                    />\r\n                  </Box>\r\n                ) : (\r\n                  searchResult?.map((user) => (\r\n                    <UserListItem\r\n                      key={user._id}\r\n                      user={user}\r\n                      handleFunction={() => {\r\n                        setStudent({\r\n                          id: user._id,\r\n                          name: user.name,\r\n                          email: user.email,\r\n                          pic: user.pic,\r\n                        });\r\n                        setPayment(true);\r\n                      }}\r\n                    />\r\n                  ))\r\n                )}\r\n              </Box>\r\n              {(payment || (details && passportPhoto)) && (\r\n                <Box p={\"6\"}>\r\n                  <Text\r\n                    textAlign={\"center\"}\r\n                    fontSize={\"sm\"}\r\n                    fontWeight={500}\r\n                    bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n                    px={3}\r\n                    p=\"2.5\"\r\n                    mb={\"4\"}\r\n                    color={\"purple.500\"}\r\n                    rounded={\"full\"}\r\n                  >\r\n                    Upgrading: {student?.name} {student?.email} {details}\r\n                    ($5 Fee)\r\n                  </Text>{\" \"}\r\n                  <PayPalScriptProvider\r\n                    options={{\r\n                      clientId:\r\n                        \"AZAdYFR_SbadcgOcCLYn9ajkReJTZmOCnEeAvQ3xPYAE5BMYFBHi4vDeILfNwBO-hh-8wfyGC9lNeB1I\",\r\n                    }}\r\n                  >\r\n                    <PayPalButtons\r\n                      createOrder={(data, actions) => {\r\n                        const amount = 5.0;\r\n                        return actions.order.create({\r\n                          purchase_units: [\r\n                            {\r\n                              amount: {\r\n                                currency_code: \"USD\",\r\n                                value: amount.toFixed(2),\r\n                              },\r\n                            },\r\n                          ],\r\n                        });\r\n                      }}\r\n                      onApprove={async (data, actions) => {\r\n                        await submitDetails();\r\n                        await setStudentId(student._id);\r\n                        return actions.order.capture().then(function (details) {\r\n                          toast({\r\n                            title: \"Success\",\r\n                            description:\r\n                              \"Wait for WSF to send certificate to particulars.\",\r\n                            status: \"success\",\r\n                            duration: 3000,\r\n                            isClosable: true,\r\n                            position: \"bottom\",\r\n                          });\r\n                        });\r\n                      }}\r\n                      onCancel={() => {\r\n                        setPayment(false);\r\n                        toast({\r\n                          title: \"Cancelled\",\r\n                          status: \"info\",\r\n                          isClosable: true,\r\n                          position: \"bottom\",\r\n                        });\r\n                      }}\r\n                    />\r\n                  </PayPalScriptProvider>\r\n                  <Button\r\n                    fontSize={\"small\"}\r\n                    width={\"100%\"}\r\n                    bg={useColorModeValue(\"green.100\", \"green.900\")}\r\n                    onClick={() => {\r\n                      setShow(true);\r\n                    }}\r\n                    p={0}\r\n                  >\r\n                    <Image\r\n                      height={5}\r\n                      width={\"auto\"}\r\n                      src={\r\n                        \"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1694007922/mpesa_ppfs6p.png\"\r\n                      }\r\n                      alt={\"\"}\r\n                      loading=\"lazy\"\r\n                    />{\" \"}\r\n                    Pay via Mpesa\r\n                  </Button>\r\n                  {show && (\r\n                    <Box padding={\"6\"}>\r\n                      <Text\r\n                        textAlign={\"center\"}\r\n                        justifyContent={\"center\"}\r\n                        fontSize={\"xl\"}\r\n                      >\r\n                        Enter Your Mpesa Phone Number (KSH 450/=)\r\n                      </Text>\r\n                      <Input\r\n                        fontSize={\"small\"}\r\n                        color={\"green.400\"}\r\n                        fontWeight={\"bold\"}\r\n                        placeholder=\"Enter phone number\"\r\n                        textAlign={\"center\"}\r\n                        type=\"number\"\r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n                        value={phoneNumber}\r\n                        minLength={10}\r\n                        maxLength={10}\r\n                      />\r\n                      <Divider p={2} />\r\n                      <Button\r\n                        width={\"100%\"}\r\n                        onClick={() => {\r\n                          makePaymentMpesa(\"450\", phoneNumber, user, toast);\r\n                          setShow(false);\r\n                          toast({\r\n                            title: \"Wait as message is sent\",\r\n                            status: \"loading\",\r\n                            isClosable: true,\r\n                            position: \"bottom\",\r\n                            duration: 5000,\r\n                          });\r\n                        }}\r\n                        isDisabled={phoneNumber.length !== parseInt(10)}\r\n                        colorScheme=\"green\"\r\n                      >\r\n                        Proceed\r\n                      </Button>\r\n                      <Text textAlign={\"center\"} justifyContent={\"center\"}>\r\n                        You'll be sent a Message\r\n                      </Text>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        {user?.provinceRequests?.length > 0 && (\r\n          <Box\r\n            textAlign={\"start\"}\r\n            fontSize={\"medium\"}\r\n            fontWeight={\"bold\"}\r\n            background={\"white\"}\r\n            overflow={\"auto\"}\r\n            boxShadow=\"base\"\r\n            p=\"4\"\r\n            height={\"200px\"}\r\n            rounded=\"md\"\r\n            bg=\"whitesmoke\"\r\n            width={\"100%\"}\r\n          >\r\n            <Heading mb={4}>Province Requests</Heading>\r\n            {user?.provinceRequests.map((member, index) => (\r\n              <Text\r\n                display={\"flex\"}\r\n                justifyContent={\"space-between\"}\r\n                alignItems={\"center\"}\r\n                key={member._id}\r\n                width={\"100%\"}\r\n              >\r\n                <Text\r\n                  p={1}\r\n                  fontStyle={\"italic\"}\r\n                  width={\"100%\"}\r\n                  fontSize={\"x-small\"}\r\n                >\r\n                  {\" \"}\r\n                  {index + 1}.{member.provincialCoach?.name} Adm:\r\n                  {member.provincialCoach?.admission} Approvals:{\" \"}\r\n                  {member.approvals?.length}\r\n                </Text>\r\n                <Button\r\n                  borderRadius={20}\r\n                  background={\"#A020F0\"}\r\n                  color={\"white\"}\r\n                  _hover={{ color: \"black\" }}\r\n                  fontSize={\"x-small\"}\r\n                  onClick={() => handleAcceptDecline(member._id, true)}\r\n                >\r\n                  Approve✔️\r\n                </Button>\r\n                <Button\r\n                  borderRadius={20}\r\n                  fontSize={\"x-small\"}\r\n                  color={\"white\"}\r\n                  _hover={{ color: \"black\" }}\r\n                  background={\"#A020F0\"}\r\n                  m={1}\r\n                  onClick={() => handleAcceptDecline(member._id, false)}\r\n                >\r\n                  Decline\r\n                </Button>\r\n              </Text>\r\n            ))}\r\n          </Box>\r\n        )}\r\n        {user?.nationalRequests?.length > 0 && (\r\n          <Box\r\n            textAlign={\"start\"}\r\n            fontSize={\"medium\"}\r\n            fontWeight={\"bold\"}\r\n            background={\"white\"}\r\n            overflow={\"auto\"}\r\n            boxShadow=\"base\"\r\n            p=\"4\"\r\n            height={\"200px\"}\r\n            rounded=\"md\"\r\n            bg=\"whitesmoke\"\r\n            width={\"100%\"}\r\n          >\r\n            <Heading mb={4}>National Requests</Heading>\r\n            {user?.nationalRequests.map((member, index) => (\r\n              <Box\r\n                display={\"flex\"}\r\n                justifyContent={\"space-between\"}\r\n                alignItems={\"center\"}\r\n                key={member._id}\r\n                width={\"100%\"}\r\n              >\r\n                <Text\r\n                  p={1}\r\n                  fontStyle={\"italic\"}\r\n                  width={\"100%\"}\r\n                  fontSize={\"x-small\"}\r\n                >\r\n                  {\" \"}\r\n                  {index + 1}.{member.nationalCoach.name} Adm:\r\n                  {member.nationalCoach.admission}\r\n                </Text>\r\n                <Button\r\n                  borderRadius={20}\r\n                  background={\"#A020F0\"}\r\n                  color={\"white\"}\r\n                  _hover={{ color: \"black\" }}\r\n                  fontSize={\"x-small\"}\r\n                  onClick={() => handleAcceptDeclineNational(member._id, true)}\r\n                >\r\n                  Approve✔️\r\n                </Button>\r\n                <Button\r\n                  borderRadius={20}\r\n                  fontSize={\"x-small\"}\r\n                  color={\"white\"}\r\n                  _hover={{ color: \"black\" }}\r\n                  background={\"#A020F0\"}\r\n                  m={1}\r\n                  onClick={() => handleAcceptDeclineNational(member._id, false)}\r\n                >\r\n                  Decline\r\n                </Button>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["axiosInstance","axios","create","interceptors","response","use","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","_x","apply","arguments","error","Promise","reject","UserFormValidation","z","object","name","string","min","max","otherName","email","gender","enum","password","confirmPassword","refine","val","ctx","parent","message","passport","regex","selectedCountry","provinces","optional","language","pic","url","useConnectSocket","user","_useState","useState","_useState2","_slicedToArray","socket","setSocket","socketRef","useRef","useEffect","token","current","userId","_id","newSocket","io","query","on","console","log","disconnect","makePaymentMpesa","_x3","_x4","_x5","_x6","_makePaymentMpesa","_callee2","amount","phoneNumber","toast","config","_yield$axios$post","_context2","headers","Authorization","concat","post","sent","data","title","status","duration","position","t0","donationsMpesa","_x7","_x8","_x9","_donationsMpesa","_callee3","_yield$axios$post2","_context3","timestamp","messageTime","Date","timeDifference","seconds","Math","floor","minutes","hours","days","toLocaleDateString","hour","minute","month","day","year","setPicLoading","color","setPic","useToast","_jsxs","FormControl","id","children","_jsx","FormLabel","textColor","fontSize","Input","type","p","placeholder","accept","onChange","event","file","target","files","FormData","append","fetch","method","body","then","res","json","toString","catch","err","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","clubRequests","setClubRequests","_useState3","_useState4","loading","setLoading","ChatState","navigate","useNavigate","fetchClubRequests","useCallback","_yield$axios$get","get","declineRequest","_ref2","clubId","_yield$axios$get2","_Fragment","Button","backgroundColor","_hover","onClick","border","RiTeamLine","length","Text","bottom","right","transform","bg","borderRadius","width","height","Modal","ModalOverlay","backdropFilter","ModalContent","ModalHeader","textAlign","ModalCloseButton","ModalBody","display","justifyContent","alignItems","flexDir","maxH","map","club","index","Box","background","Spinner","size","ModalFooter","textDecor","_ChatState","notification","setNotification","displayValue","useBreakpointValue","base","md","textVisibility","w","paddingBottom","boxShadow","zIndex","top","Image","src","logo7","visibility","variant","px","userSelect","Requests","Menu","MenuButton","BellIcon","m","Badge","MenuList","pl","notif","MenuItem","filter","n","sender","admission","as","Avatar","cursor","IconButton","icon","TiThMenuOutline","Drawer","placement","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","CloseButton","DrawerBody","padding","isDisabled","localStorage","removeItem","handleFunction","py","mb","mr","confirmpassword","formData","setFormData","showPaypal","setShowPaypal","_useState5","_useState6","show","setShow","_useState7","_useState8","subdivisions","setSubdivisions","_useState9","_useState10","student","setStudent","_useState11","_useState12","phone","setPhone","_useState13","_useState14","_useState15","_useState16","picLoading","handleClick","handleChange","e","_e$target","value","prevData","_objectSpread","_defineProperty","states","getStatesOfCountry","handleSubmit","preventDefault","description","isClosable","countryOptions","Object","entries","countries","_ref3","country","label","languageOptions","keys","languages","code","fetchSubdivisions","_ref4","handleManualRegister","_ref5","off","overflow","rounded","style","fontWeight","useColorModeValue","formatMessageTime","createdAt","isRequired","Select","option","subdivision","InputGroup","InputRightElement","h","RadioGroup","Stack","direction","Radio","UploadPicture","handleShow","mt","colorScheme","isLoading","PayPalScriptProvider","options","clientId","PayPalButtons","createOrder","actions","order","purchase_units","currency_code","toFixed","onApprove","_ref6","_callee4","_context4","capture","details","_x2","onCancel","alt","minLength","maxLength","Divider","parseInt","_user$provinceRequest","_user$nationalRequest","setClub","showFollowers","setShowFollowers","search","setSearch","searchResult","setSearchResult","payment","setPayment","register","setRegister","_useState17","_useState18","setPhoneNumber","_useState19","_useState20","_useState21","_useState22","savePhoto","setSavePhoto","_useState23","_useState24","setDetails","_useState25","_useState26","photoLoading","setPhotoLoading","_useState27","_useState28","passportPhoto","setPassportPhoto","_useState29","_useState30","studentId","setStudentId","_useState31","_useState32","isSocketConnected","setIsSocketConnected","connected","submitDetails","requestClub","coach","setTimeout","handleAcceptDecline","provinceId","setUser","prevUser","provinceRequests","handleAcceptDeclineNational","_callee5","nationalId","_context5","nationalRequests","handleSearch","_ref7","_callee6","_yield$axios$get3","_context6","submitHandler","_ref8","_callee7","_context7","minH","UpperNav","fontFamily","flexWrap","boxSize","Heading","belt","GoDotFill","FaLockOpen","FaLock","Skeleton","margin","registered","fontStyle","members","followers","likes","member","AdmissionForm","pb","Textarea","overflowY","SkeletonCircle","SkeletonText","noOfLines","spacing","skeletonHeight","UserListItem","_ref9","_callee8","_context8","_member$provincialCoa","_member$provincialCoa2","_member$approvals","provincialCoach","approvals","nationalCoach"],"sourceRoot":""}