{"version":3,"file":"static/js/820.62c761a2.chunk.js","mappings":"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","sources":["components/config/axios.js","components/config/chatlogics.js","components/config/formatTime.js","miscellenious/PicLogic.js","miscellenious/Requests.js","miscellenious/Password.jsx","miscellenious/upperNav.js","miscellenious/Skeleton.js","miscellenious/AdmissionForm.js","pages/ProfilePage.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create();\r\naxiosInstance.interceptors.response.use(\r\n  async (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { z } from \"zod\";\r\n\r\nexport const UserFormValidation = z.object({\r\n  name: z\r\n    .string()\r\n    .min(2, \"Name must be at least 2 characters\")\r\n    .max(50, \"Name must be at most 50 characters\"),\r\n  otherName: z\r\n    .string()\r\n    .min(2, \"Other name must be at least 2 characters\")\r\n    .max(50, \"Other name must be at most 50 characters\"),\r\n  email: z.string().email(\"Invalid email address\"),\r\n  gender: z.enum([\"male\", \"female\", \"other\"]),\r\n  password: z\r\n    .string()\r\n    .min(4, \"Password must be at least 8 characters long\")\r\n    .max(100, \"Password must be at most 100 characters\"),\r\n  confirmPassword: z\r\n    .string()\r\n    .min(4, \"Confirm password must be at least 8 characters long\")\r\n    .max(100, \"Confirm password must be at most 100 characters\")\r\n    .refine((val, ctx) => val === ctx.parent.password, {\r\n      message: \"Passwords do not match\",\r\n    }),\r\n  passport: z.string().regex(/^\\d{8,15}$/, \"Invalid passport/ID number\"),\r\n  selectedCountry: z.string().min(2, \"Country is required\"),\r\n  provinces: z.string().optional(),\r\n  language: z.string().min(2, \"Language is required\"),\r\n  pic: z.string().url(\"Profile picture is required\"),\r\n});\r\n\r\nexport const isSameSenderMargin = (messages, m, i, userId) => {\r\n  const isCurrentUserSender = m.sender?.$oid === userId;\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender?.$oid === m.sender?.$oid &&\r\n    !isCurrentUserSender\r\n  ) {\r\n    return 33;\r\n  } else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender?.$oid !== m.sender?.$oid &&\r\n      !isCurrentUserSender) ||\r\n    (i === messages.length - 1 && !isCurrentUserSender)\r\n  ) {\r\n    return 0;\r\n  } else {\r\n    return \"auto\";\r\n  }\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1]?.sender?._id !== m.sender?._id ||\r\n      messages[i + 1]?.sender?._id === undefined) &&\r\n    messages[i]?.sender?._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  const lastMessageSenderId = messages[messages.length - 1].sender?.$oid;\r\n  return (\r\n    i === messages.length - 1 &&\r\n    lastMessageSenderId !== userId &&\r\n    lastMessageSenderId\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender?.$oid === m.sender?.$oid;\r\n};\r\n\r\nexport const getSenderName = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n};\r\nexport const getSenderId = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1]._id : users[0]._id;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, user) => {\r\n  return user[0]._id === loggedUser._id ? user[1] : user[0];\r\n};\r\n\r\nexport async function getUserById(userId, token) {\r\n  if (!userId && !token) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/user/getuserid/${userId}`, config);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function useConnectSocket(user) {\r\n  const [socket, setSocket] = useState(null);\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!user || !user.token) {\r\n      return;\r\n    }\r\n\r\n    // Check if the socket already exists\r\n    if (socketRef.current) {\r\n      setSocket(socketRef.current);\r\n      return;\r\n    }\r\n\r\n    const userId = user._id;\r\n    const newSocket = io(\"/\", {\r\n      query: { token: user.token, userId },\r\n    });\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"connected\");\r\n      setSocket(newSocket); // Set socket state after connection\r\n    });\r\n\r\n    newSocket.on(\"disconnect\", (reason) => {\r\n      console.log(\"Socket.IO disconnected due to:\", reason);\r\n      if (reason === \"io server disconnect\") {\r\n        // Handle server-side disconnections\r\n        newSocket.connect();\r\n      }\r\n    });\r\n\r\n    newSocket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      console.log(`Reconnection attempt ${attemptNumber}`);\r\n    });\r\n\r\n    newSocket.on(\"error\", (error) => {\r\n      console.error(\"Socket.IO error:\", error);\r\n    });\r\n\r\n    // Update socketRef with the new socket instance\r\n    socketRef.current = newSocket;\r\n\r\n    // Clean up function to disconnect socket when the component unmounts\r\n    return () => {\r\n      if (newSocket) {\r\n        newSocket.disconnect();\r\n      }\r\n      socketRef.current = null;\r\n    };\r\n  }, [user]); // Only rerun if user changes\r\n\r\n  return socket;\r\n}\r\n\r\nexport async function makePaymentMpesa(amount, phoneNumber, user, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/makepaymentmpesa/${user._id}?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {}\r\n}\r\n\r\nexport async function donationsMpesa(amount, phoneNumber, toast) {\r\n  if (!phoneNumber) {\r\n    return;\r\n  }\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/paycheck/donationsmpesa?amount=${amount}`,\r\n      { phoneNumber },\r\n      config\r\n    );\r\n\r\n    if (data) {\r\n      toast({\r\n        title: \"You have been prompt to finish your subscription process\",\r\n        status: \"info\",\r\n        duration: 1000,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function handleApprove(accountType, type, user, setUser) {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/paycheck/${user._id}/${type}/${accountType}`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    const userData = await {\r\n      ...user,\r\n      accountType: data.accountType,\r\n      subscription: data.subscription,\r\n      day: data.day,\r\n    };\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(userData));\r\n    setUser(userData);\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw new Error(\"Error occurred\", error);\r\n  }\r\n}\r\n","const formatMessageTime = (timestamp) => {\r\n  const messageTime = new Date(timestamp);\r\n  const currentTime = new Date();\r\n\r\n  const timeDifference = currentTime - messageTime;\r\n  const seconds = Math.floor(timeDifference / 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  const hours = Math.floor(minutes / 60);\r\n  const days = Math.floor(hours / 24);\r\n\r\n  if (seconds < 60) {\r\n    return \"Just now\";\r\n  } else if (minutes < 60) {\r\n    return `${minutes} minute${minutes === 1 ? \"\" : \"s\"} ago`;\r\n  } else if (hours < 24) {\r\n    return `${hours} hour${hours === 1 ? \"\" : \"s\"} ago`;\r\n  } else if (days === 1) {\r\n    return \"Yesterday\";\r\n  } else if (days < 7) {\r\n    return `${days} day${days === 1 ? \"\" : \"s\"} ago`;\r\n  } else {\r\n    const options = {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n    };\r\n    return messageTime.toLocaleDateString(\"en-US\", options);\r\n  }\r\n};\r\nexport default formatMessageTime;\r\n","import React, { useState } from \"react\";\r\nimport { FormControl, FormLabel, Input, useToast } from \"@chakra-ui/react\";\r\n\r\nconst UploadPicture = ({ setPicLoading, color, setPic }) => {\r\n  const toast = useToast();\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    setPicLoading(true);\r\n\r\n    if (!file) {\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (file.type === \"image/jpeg\" || file.type === \"image/png\") {\r\n      let data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"upload_preset\", \"WorldSamma\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dsdlgmgwi/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          setPicLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setPicLoading(false);\r\n        });\r\n    } else {\r\n      setPicLoading(false);\r\n\r\n      toast({\r\n        title: \"Invalid file type\",\r\n        status: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl id=\"pic\">\r\n      <FormLabel textColor={color} fontSize=\"small\">Upload your Passport Photo</FormLabel>\r\n      <Input\r\n        type=\"file\"\r\n        p={1.5}\r\n        textColor={color}\r\n        fontSize=\"small\"\r\n        placeholder=\"Select a passport photo\"\r\n        accept=\"image/*\"\r\n        onChange={handleFileChange}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default UploadPicture;\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  Button,\r\n  Text,\r\n  Box,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RiTeamLine } from \"react-icons/ri\";\r\n\r\nconst Requests = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [clubRequests, setClubRequests] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { user } = ChatState();\r\n  const navigate = useNavigate();\r\n\r\n  const fetchClubRequests = useCallback(async () => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/github/something/${user._id}`,\r\n        config\r\n      );\r\n      setClubRequests(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching club requests:\", error);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchClubRequests();\r\n    }\r\n  }, [user, fetchClubRequests]);\r\n  const declineRequest = async (clubId) => {\r\n    if (!user || !clubId) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/clubs/decline/request/${clubId}/${user._id}`,\r\n        config\r\n      );\r\n      setClubRequests(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(\"Error fetching club requests/decline:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        backgroundColor={\"white\"}\r\n        _hover={{ backgroundColor: \"transparent\" }}\r\n        onClick={onOpen}\r\n        border={\"none\"}\r\n      >\r\n        <RiTeamLine fontSize={\"20px\"} border={\"none\"} />\r\n        {clubRequests && clubRequests.length > 0 && (\r\n          <Text\r\n            position=\"absolute\"\r\n            bottom=\"70%\"\r\n            right=\"70%\"\r\n            transform=\"translate(50%, 0)\"\r\n            bg=\"red.500\"\r\n            borderRadius=\"50%\"\r\n            width=\"2px\"\r\n            height=\"2px\"\r\n            p={1.5}\r\n          ></Text>\r\n        )}\r\n        <Text />\r\n      </Button>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose} isCentered size={\"sm\"}>\r\n        <ModalOverlay\r\n          bg=\"blackAlpha.300\"\r\n          backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n        />\r\n        <ModalContent>\r\n          <ModalHeader textAlign={\"center\"}>Clubs Requests</ModalHeader>\r\n          <ModalCloseButton border={\"none\"} />\r\n          <ModalBody\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            flexDir={\"column\"}\r\n            maxH={\"300px\"}\r\n          >\r\n            {clubRequests && clubRequests.length > 0 ? (\r\n              clubRequests.map((club, index) => (\r\n                <Box\r\n                  display={\"flex\"}\r\n                  justifyContent={\"space-between\"}\r\n                  alignItems={\"center\"}\r\n                  width={\"100%\"}\r\n                  key={index}\r\n                >\r\n                  <Button\r\n                    key={club._id}\r\n                    justifyContent={\"space-between\"}\r\n                    onClick={() => navigate(`/showclub/${club._id}`)}\r\n                    border={\"none\"}\r\n                  >\r\n                    {index + 1}. Club Name: {club.name}\r\n                  </Button>\r\n                  <Button\r\n                    background={\"#f05e56\"}\r\n                    onClick={() => declineRequest(club._id)}\r\n                    border={\"none\"}\r\n                  >\r\n                    {loading ? <Spinner size={\"small\"} /> : `Decline`}\r\n                  </Button>\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <>\r\n                <Text>All club requests have been replied to.</Text>\r\n              </>\r\n            )}\r\n          </ModalBody>\r\n\r\n          <ModalFooter fontSize={\"small\"} textDecor={\"underline\"}>\r\n            These requests were made by club coaches.\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default Requests;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalCloseButton,\r\n  Button,\r\n  HStack,\r\n  PinInput,\r\n  PinInputField,\r\n  Text,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const PasskeyModal = ({ isOpen, onClose }) => {\r\n  const [passkey, setPasskey] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const validatePasskey = () => {\r\n    if (passkey === process.env.REACT_APP_ADMIN_PASSKEY) {\r\n      navigate(\"/admin\");\r\n      onClose(); // Close the modal after successful validation\r\n    } else {\r\n      setError(\"Invalid passkey. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader textAlign=\"center\">Admin Access Verification</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <VStack spacing={4} align=\"center\">\r\n            <Text>To access the admin page, please enter the passkey.</Text>\r\n            <HStack>\r\n              <PinInput\r\n                value={passkey}\r\n                onChange={(value) => {\r\n                  setPasskey(value);\r\n                  setError(\"\"); // Clear error on input change\r\n                }}\r\n                type=\"number\"\r\n                autoFocus\r\n              >\r\n                <PinInputField />\r\n                <PinInputField />\r\n                <PinInputField />\r\n                <PinInputField />\r\n                <PinInputField />\r\n                <PinInputField />\r\n              </PinInput>\r\n            </HStack>\r\n            {error && <Text color=\"red.500\">{error}</Text>}\r\n          </VStack>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button colorScheme=\"blue\" onClick={validatePasskey} width=\"full\">\r\n            Enter Admin Passkey\r\n          </Button>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Badge,\r\n  Image,\r\n  useBreakpointValue,\r\n  IconButton,\r\n  CloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { TiThMenuOutline } from \"react-icons/ti\";\r\nimport { BellIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport Requests from \"./Requests\";\r\nimport logo7 from \"../assets/images/final.jpeg\";\r\nimport { PiSignOutLight } from \"react-icons/pi\";\r\nimport { PasskeyModal } from \"./Password\";\r\nimport { useState } from \"react\";\r\nimport { RiAdminLine } from \"react-icons/ri\";\r\nimport { MdLiveTv } from \"react-icons/md\";\r\n\r\nfunction UpperNav() {\r\n  const { user, notification, setNotification } = ChatState();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const navigate = useNavigate();\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    setNotification([]);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const displayValue = useBreakpointValue({ base: \"none\", md: \"flex\" });\r\n\r\n  const textVisibility = useBreakpointValue({\r\n    base: \"hidden\",\r\n    md: \"visible\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p={3}\r\n        paddingBottom={2}\r\n        boxShadow=\"2xl\"\r\n        zIndex={10}\r\n        top={0}\r\n        position={\"fixed\"}\r\n      >\r\n        <Image src={logo7} height={12} />\r\n        <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n          <Button\r\n            backgroundColor={\"transparent\"}\r\n            border={\"none\"}\r\n            display={displayValue}\r\n            visibility={textVisibility}\r\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\r\n            onClick={() => {\r\n              navigate(\"/dashboard\");\r\n            }}\r\n          >\r\n            My Programs\r\n          </Button>\r\n          <Button\r\n            variant=\"ghost\"\r\n            display={{ base: \"none\", md: \"flex\" }}\r\n            border={\"none\"}\r\n            onClick={onOpen}\r\n            _hover={{ backgroundColor: \"transparent\", color: \"green.400\" }}\r\n          >\r\n            <Text px={4} userSelect={\"none\"}>\r\n              Discover\r\n            </Text>\r\n          </Button>\r\n          <Requests />\r\n        </Box>\r\n\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1} position=\"relative\" border={\"none\"}>\r\n              <BellIcon fontSize=\"2xl\" p={0} m={0} />\r\n              {notification.length > 0 && (\r\n                <Badge\r\n                  variant=\"subtle\"\r\n                  position=\"absolute\"\r\n                  top=\"-3px\"\r\n                  right=\"-3px\"\r\n                  backgroundColor={\"red\"}\r\n                  zIndex={1}\r\n                  borderRadius={\"50%\"}\r\n                  color=\"white\"\r\n                >\r\n                  {notification.length}\r\n                </Badge>\r\n              )}\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                  p={\"4\"}\r\n                >\r\n                  {`New message from ${\r\n                    notif.sender ? notif.sender.name : \"Coach\"\r\n                  } ADM: ${notif.sender ? notif.sender.admission : \" \"}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton\r\n              as={Button}\r\n              bg=\"white\"\r\n              border={\"none\"}\r\n              _hover={{ backgroundColor: \"transparent\" }}\r\n              onClick={onOpen}\r\n            >\r\n              {displayValue === \"flex\" ? (\r\n                <Avatar\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={user?.name}\r\n                  src={user?.pic}\r\n                />\r\n              ) : (\r\n                <IconButton\r\n                  backgroundColor={\"transparent\"}\r\n                  border={\"none\"}\r\n                  icon={<TiThMenuOutline />}\r\n                />\r\n              )}\r\n            </MenuButton>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <PasskeyModal isOpen={modal} onClose={() => setModal(false)} />\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay\r\n          bg=\"blackAlpha.300\"\r\n          backdropFilter=\"blur(10px) hue-rotate(90deg)\"\r\n        />\r\n        <DrawerContent>\r\n          <DrawerHeader\r\n            borderBottomWidth=\"1px\"\r\n            display={\"flex\"}\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            Dashboard\r\n            <CloseButton onClick={onClose} border={\"none\"} />\r\n          </DrawerHeader>\r\n          <DrawerBody\r\n            display={\"flex\"}\r\n            flexDir={\"column\"}\r\n            justifyContent={\"start\"}\r\n            width={\"100%\"}\r\n            padding={3}\r\n          >\r\n            <Button\r\n              display={\"flex\"}\r\n              justifyContent={\"left\"}\r\n              alignItems={\"center\"}\r\n              border={\"none\"}\r\n              fontSize={\"medium\"}\r\n              background={\"white\"}\r\n              _hover={{ backgroundColor: \"transparent\", color: \"green\" }}\r\n              onClick={() => navigate(\"/profile\")}\r\n            >\r\n              <Avatar\r\n                size=\"sm\"\r\n                cursor=\"pointer\"\r\n                name={user?.name}\r\n                src={user?.pic}\r\n              />\r\n              <Text p={2} m={1}>\r\n                Profile\r\n              </Text>\r\n            </Button>\r\n            <Button\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              background={\"white\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/dashboard\");\r\n                onClose();\r\n              }}\r\n            >\r\n              My Programs\r\n            </Button>\r\n            <Button\r\n              justifyContent={\"start\"}\r\n              background={\"white\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/clubs\");\r\n                onClose();\r\n              }}\r\n            >\r\n              Clubs\r\n            </Button>\r\n            <Button\r\n              justifyContent={\"left\"}\r\n              background={\"white\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              isDisabled={!user?.provinces}\r\n              onClick={() => {\r\n                navigate(\"/province\");\r\n                onClose();\r\n              }}\r\n            >\r\n              Provincial level\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/national\");\r\n                onClose();\r\n              }}\r\n            >\r\n              National level\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/championships\");\r\n                onClose();\r\n              }}\r\n            >\r\n              International Championship\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              isDisabled\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                navigate(\"/stream\");\r\n                onClose();\r\n              }}\r\n            >\r\n              <MdLiveTv /> &nbsp; Streams\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={() => {\r\n                setModal(true);\r\n                onClose();\r\n              }}\r\n            >\r\n              <RiAdminLine /> &nbsp; Admin\r\n            </Button>\r\n            <Button\r\n              background={\"white\"}\r\n              justifyContent={\"left\"}\r\n              border={\"none\"}\r\n              _hover={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"blackAlpha.600\",\r\n              }}\r\n              onClick={logoutHandler}\r\n            >\r\n              <PiSignOutLight /> &nbsp; Sign out\r\n            </Button>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpperNav;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\n\r\nconst UserListItem = ({ handleFunction, user }) => {\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38B2AC\",\r\n        color: \"white\",\r\n      }}\r\n      width=\"100%\"\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Email : </b>\r\n          {user.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  Image,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { getStatesOfCountry } from \"../assets/state\";\r\nimport { countries, languages } from \"countries-list\";\r\nimport formatMessageTime from \"../components/config/formatTime\";\r\nimport {\r\n  makePaymentMpesa,\r\n  useConnectSocket,\r\n} from \"../components/config/chatlogics\";\r\nimport { ChatState } from \"../components/Context/ChatProvider\";\r\nimport UploadPicture from \"./PicLogic\";\r\n\r\nconst AdmissionForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    otherName: \"\",\r\n    id: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n    selectedCountry: \"\",\r\n    provinces: \"\",\r\n    language: \"\",\r\n    password: \"\",\r\n    confirmpassword: \"\",\r\n    gender: \"\",\r\n  });\r\n  const [showPaypal, setShowPaypal] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [subdivisions, setSubdivisions] = useState([]);\r\n  const [student, setStudent] = useState(null);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [pic, setPic] = useState(\"\");\r\n  const { user } = ChatState();\r\n  const [picLoading, setPicLoading] = useState(false);\r\n  const toast = useToast();\r\n  const socket = useConnectSocket(user?.token);\r\n\r\n  const handleClick = () => setShow(!show);\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"Event:\", e);\r\n    if (!e || !e.target) {\r\n      console.log(\"Event or target is undefined.\");\r\n      return;\r\n    }\r\n\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n    if (name === \"selectedCountry\") {\r\n      const states = getStatesOfCountry(value);\r\n      setSubdivisions(states);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user/admission\",\r\n        {\r\n          ...formData,\r\n          pic: pic,\r\n        },\r\n        config\r\n      );\r\n      setStudent(data);\r\n      setFormData({\r\n        name: \"\",\r\n        otherName: \"\",\r\n        id: \"\",\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n        selectedCountry: \"\",\r\n        provinces: \"\",\r\n        language: \"\",\r\n        password: \"\",\r\n        confirmpassword: \"\",\r\n        gender: \"\",\r\n      });\r\n      setPic(\"\");\r\n      setShowPaypal(false);\r\n      setSubdivisions([]);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast({\r\n        title: \"Error occurred!\",\r\n        description: error.response.data.message || \"Something went wrong.\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const countryOptions = Object.entries(countries).map(([code, country]) => ({\r\n    value: country.name,\r\n    label: country.name,\r\n  }));\r\n  const languageOptions = Object.keys(languages).map((code) => ({\r\n    code,\r\n    name: languages[code].name,\r\n  }));\r\n  useEffect(() => {\r\n    if (!formData.selectedCountry) {\r\n      return;\r\n    }\r\n    const fetchSubdivisions = async () => {\r\n      const states = getStatesOfCountry(formData.selectedCountry);\r\n      setSubdivisions(states);\r\n    };\r\n\r\n    fetchSubdivisions();\r\n  }, [formData.selectedCountry]);\r\n\r\n  useEffect(() => {\r\n    if (!socket) {\r\n      return;\r\n    }\r\n    const handleManualRegister = async () => {\r\n      await handleSubmit();\r\n    };\r\n\r\n    socket.on(\"manualRegister\", handleManualRegister);\r\n\r\n    return () => {\r\n      socket.off(\"manualRegister\", handleManualRegister);\r\n    };\r\n  }, [socket]);\r\n\r\n  const handleShow = () => {\r\n    const {\r\n      name,\r\n      otherName,\r\n      selectedCountry,\r\n      provinces,\r\n      language,\r\n      password,\r\n      confirmpassword,\r\n      gender,\r\n    } = formData;\r\n\r\n    if (\r\n      !name ||\r\n      !otherName ||\r\n      !selectedCountry ||\r\n      !provinces ||\r\n      !language ||\r\n      !password ||\r\n      !confirmpassword ||\r\n      !gender ||\r\n      !pic\r\n    ) {\r\n      toast({\r\n        title: \"Please fill all the required fields.\",\r\n        status: \"warning\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Do Not Match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setShowPaypal(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!showPaypal && (\r\n        <Box\r\n          display=\"flex\"\r\n          flexDir=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          overflow=\"auto\"\r\n          width={{ base: \"100%\", md: \"80%\" }}\r\n          boxShadow=\"base\"\r\n          p=\"4\"\r\n          rounded=\"md\"\r\n          bg=\"white\"\r\n        >\r\n          <form style={{ width: \"100%\" }}>\r\n            <Text\r\n              fontSize={\"sm\"}\r\n              fontWeight={500}\r\n              bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n              px={6}\r\n              p={\"3\"}\r\n              m={1}\r\n              color={\"green.500\"}\r\n              rounded={\"full\"}\r\n            >\r\n              Register Students Manually\r\n            </Text>\r\n            {student && (\r\n              <Text textAlign={\"center\"}>\r\n                ⚠️Student Code: {student?.admission}, Name: {student?.name},\r\n                createdAt: {formatMessageTime(student?.createdAt)}{\" \"}\r\n              </Text>\r\n            )}\r\n            <FormControl id=\"name\" isRequired>\r\n              <FormLabel>First Name </FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Student's first name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"otherName\" isRequired>\r\n              <FormLabel>Last Name </FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"otherName\"\r\n                placeholder=\"Student's last name\"\r\n                value={formData.otherName}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"country\" isRequired>\r\n              <FormLabel>Country</FormLabel>\r\n              <Select\r\n                placeholder=\"Select your country\"\r\n                display={\"flex\"}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n                width={\"100%\"}\r\n                value={formData.selectedCountry}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, selectedCountry: e.target.value })\r\n                }\r\n              >\r\n                {countryOptions.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                    style={{ color: \"black\" }}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {formData.selectedCountry && subdivisions.length > 0 ? (\r\n              <FormControl id=\"provinces\" isRequired>\r\n                <FormLabel>County/Province</FormLabel>\r\n                <Select\r\n                  placeholder=\"Select your province\"\r\n                  display={\"flex\"}\r\n                  justifyContent={\"center\"}\r\n                  alignItems={\"center\"}\r\n                  width={\"100%\"}\r\n                  value={formData.provinces}\r\n                  onChange={(e) =>\r\n                    setFormData({ ...formData, provinces: e.target.value })\r\n                  }\r\n                >\r\n                  {subdivisions &&\r\n                    subdivisions.map((subdivision) => (\r\n                      <option\r\n                        key={subdivision.value}\r\n                        value={subdivision.value}\r\n                        style={{ color: \"black\" }}\r\n                      >\r\n                        {subdivision.name}\r\n                      </option>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n            ) : (\r\n              <FormControl id=\"province\" isRequired>\r\n                <FormLabel>County/Province/state</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Province\"\r\n                  value={formData.provinces}\r\n                  onChange={(e) =>\r\n                    setFormData({ ...formData, provinces: e.target.value })\r\n                  }\r\n                />\r\n              </FormControl>\r\n            )}\r\n            <FormControl id=\"language\" isRequired>\r\n              <FormLabel>Language</FormLabel>\r\n              <Select\r\n                placeholder=\"Select language\"\r\n                textColor={\"grey\"}\r\n                value={formData.language}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, language: e.target.value })\r\n                }\r\n              >\r\n                {languageOptions.map((option) => (\r\n                  <option key={option.code} value={option.code}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <FormControl id=\"id\">\r\n              <FormLabel>ID</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"id\"\r\n                placeholder=\"Student's ID (optional)\"\r\n                value={formData.id}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"phoneNumber\">\r\n              <FormLabel>Phone Number</FormLabel>\r\n              <Input\r\n                type=\"number\"\r\n                name=\"phoneNumber\"\r\n                placeholder=\"Student's phone number (optional)\"\r\n                value={formData.phoneNumber}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"email\">\r\n              <FormLabel>Email</FormLabel>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Student's email address (optional)\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"password\" isRequired>\r\n              <FormLabel>Password</FormLabel>\r\n              <InputGroup size=\"md\">\r\n                <Input\r\n                  type={show ? \"text\" : \"password\"}\r\n                  placeholder=\"Enter Password\"\r\n                  value={formData.password}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      password: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <InputRightElement width=\"4.5rem\">\r\n                  <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                    {show ? \"Hide\" : \"Show\"}\r\n                  </Button>\r\n                </InputRightElement>\r\n              </InputGroup>\r\n            </FormControl>\r\n            <FormControl id=\"confirmPassword\" isRequired>\r\n              <FormLabel>Confirm Password</FormLabel>\r\n              <InputGroup size=\"md\">\r\n                <Input\r\n                  type={show ? \"text\" : \"password\"}\r\n                  placeholder=\"Confirm password\"\r\n                  value={formData.confirmpassword}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      confirmpassword: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <InputRightElement width=\"4.5rem\">\r\n                  <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                    {show ? \"Hide\" : \"Show\"}\r\n                  </Button>\r\n                </InputRightElement>\r\n              </InputGroup>\r\n            </FormControl>\r\n            <RadioGroup\r\n              value={formData.gender}\r\n              onChange={(value) =>\r\n                setFormData({\r\n                  ...formData,\r\n                  gender: value,\r\n                })\r\n              }\r\n              isRequired\r\n            >\r\n              <Stack direction=\"row\">\r\n                <Radio value=\"male\">Male</Radio>\r\n                <Radio value=\"female\">Female</Radio>\r\n              </Stack>\r\n            </RadioGroup>\r\n\r\n            <UploadPicture\r\n              setPic={setPic}\r\n              setPicLoading={setPicLoading}\r\n              color={\"black\"}\r\n            />\r\n\r\n            <Button\r\n              onClick={() => handleShow()}\r\n              mt={4}\r\n              colorScheme=\"teal\"\r\n              isDisabled={!formData.name || !formData.otherName || picLoading}\r\n              isLoading={picLoading}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n      )}\r\n      {showPaypal && (\r\n        <Box\r\n          display=\"flex\"\r\n          flexDir={\"column\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          overflow={\"auto\"}\r\n          width={\"100%\"}\r\n          boxShadow=\"base\"\r\n          p=\"6\"\r\n          rounded=\"md\"\r\n          bg=\"white\"\r\n        >\r\n          {\" \"}\r\n          <PayPalScriptProvider\r\n            options={{\r\n              clientId:\r\n                \"AZ5Pdn0aioG6OzW6n4Q7W64LxkdOhS0wEIOAn_UmF5askK41E72ejdrsHPJoFIcg0atbN-WZG14fd6oc\",\r\n            }}\r\n          >\r\n            <PayPalButtons\r\n              createOrder={(data, actions) => {\r\n                const amount = 4.0;\r\n                return actions.order.create({\r\n                  purchase_units: [\r\n                    {\r\n                      amount: {\r\n                        currency_code: \"USD\",\r\n                        value: amount.toFixed(2),\r\n                      },\r\n                    },\r\n                  ],\r\n                });\r\n              }}\r\n              onApprove={async (data, actions) => {\r\n                await handleSubmit();\r\n                return actions.order.capture().then(function (details) {\r\n                  setShowPaypal(false);\r\n                  toast({\r\n                    title: \"Success\",\r\n                    status: \"success\",\r\n                    duration: 3000,\r\n                    isClosable: true,\r\n                    position: \"bottom\",\r\n                  });\r\n                });\r\n              }}\r\n              onCancel={() => {\r\n                setShowPaypal(false);\r\n                toast({\r\n                  title: \"Cancelled\",\r\n                  status: \"info\",\r\n                  isClosable: true,\r\n                  position: \"bottom\",\r\n                });\r\n              }}\r\n            />\r\n          </PayPalScriptProvider>\r\n          <Button\r\n            fontSize={\"small\"}\r\n            width={{ base: \"80%\", md: \"25%\" }}\r\n            backgroundColor={\"green.400\"}\r\n            color={\"white\"}\r\n            onClick={() => {\r\n              setShow(true);\r\n            }}\r\n            p={0}\r\n          >\r\n            <Image\r\n              height={5}\r\n              width={\"auto\"}\r\n              src={\r\n                \"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1694007922/mpesa_ppfs6p.png\"\r\n              }\r\n              alt={\"\"}\r\n              loading=\"lazy\"\r\n            />{\" \"}\r\n            Pay via Mpesa\r\n          </Button>\r\n          {show && (\r\n            <Box m={3} width={{ base: \"80%\", md: \"50%\" }}>\r\n              <Input\r\n                fontSize={\"small\"}\r\n                color={\"green.400\"}\r\n                fontWeight={\"bold\"}\r\n                placeholder=\"Enter Your Mpesa Phone Number\"\r\n                textAlign={\"center\"}\r\n                type=\"text\"\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                value={phone}\r\n                minLength={10}\r\n                maxLength={10}\r\n              />\r\n              <Divider p={2} />\r\n              <Button\r\n                width={\"100%\"}\r\n                onClick={() => {\r\n                  makePaymentMpesa(\"500\", phone, user, toast);\r\n                  setShow(false);\r\n                  toast({\r\n                    title: \"Wait as message is sent\",\r\n                    status: \"loading\",\r\n                    isClosable: true,\r\n                    position: \"bottom\",\r\n                    duration: 5000,\r\n                  });\r\n                }}\r\n                isDisabled={phone.length !== parseInt(10)}\r\n                colorScheme=\"green\"\r\n              >\r\n                Proceed\r\n              </Button>\r\n              <Text textAlign={\"center\"} justifyContent={\"center\"}>\r\n                You'll be sent a Message\r\n              </Text>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdmissionForm;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  FormLabel,\r\n  Heading,\r\n  Image,\r\n  Input,\r\n  Skeleton,\r\n  SkeletonCircle,\r\n  SkeletonText,\r\n  Stack,\r\n  Text,\r\n  Textarea,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport UpperNav from \"../miscellenious/upperNav\";\r\nimport axiosInstance from \"../components/config/axios\";\r\nimport axios from \"axios\";\r\nimport UserListItem from \"../miscellenious/Skeleton\";\r\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\r\nimport AdmissionForm from \"../miscellenious/AdmissionForm\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport { FaLock, FaLockOpen } from \"react-icons/fa\";\r\nimport {\r\n  makePaymentMpesa,\r\n  useConnectSocket,\r\n} from \"../components/config/chatlogics\";\r\n\r\nconst ProfilePage = ({ user }) => {\r\n  const navigate = useNavigate();\r\n  const [club, setClub] = useState();\r\n  const toast = useToast();\r\n  const [showFollowers, setShowFollowers] = useState(false);\r\n  const handleMembers = () => {\r\n    setShowFollowers(!showFollowers);\r\n  };\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [student, setStudent] = useState(null);\r\n  const [payment, setPayment] = useState(false);\r\n  const [register, setRegister] = useState(false);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [savePhoto, setSavePhoto] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [photoLoading, setPhotoLoading] = useState(false);\r\n  const [passportPhoto, setPassportPhoto] = useState(null);\r\n  const [studentId, setStudentId] = useState(\"\");\r\n  const adminId = \"6693a995f6295b8bd90d9301\";\r\n\r\n  const socket = useConnectSocket(user);\r\n  const [isSocketConnected, setIsSocketConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      setIsSocketConnected(socket.connected);\r\n\r\n      socket.on(\"connect\", () => {\r\n        setIsSocketConnected(true);\r\n      });\r\n\r\n      socket.on(\"disconnect\", () => {\r\n        setIsSocketConnected(false);\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    if (isSocketConnected) {\r\n      socket.on(\"Upgrade\", async () => {\r\n        await submitDetails();\r\n        toast({\r\n          title: \"Submitting details!\",\r\n          status: \"loading\",\r\n          duration: 5000,\r\n          position: \"bottom\",\r\n        });\r\n      });\r\n      return () => {\r\n        socket.off(\"Upgrade\");\r\n      };\r\n    }\r\n  });\r\n\r\n  const requestClub = useCallback(async () => {\r\n    if (!user.coach) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n\r\n    try {\r\n      const clubId = user.coach;\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      axiosInstance\r\n        .get(`/api/clubs/${clubId}`, config)\r\n        .then(async (response) => {\r\n          setClub(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          if (error.response && error.response.status === 401) {\r\n            toast({\r\n              title: \"Your session has expired\",\r\n              description: \"Logging out in less than 8 seconds\",\r\n              duration: 8000,\r\n              status: \"loading\",\r\n              position: \"bottom\",\r\n            });\r\n\r\n            setTimeout(() => {\r\n              localStorage.removeItem(\"userInfo\");\r\n              navigate(\"/\");\r\n            }, 8000);\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.error(\"Error fetching Club:\", error);\r\n      setLoading(false);\r\n    }\r\n  }, [user?.token, setClub, setLoading]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      requestClub();\r\n    } else {\r\n      navigate(\"/dashboard\");\r\n    }\r\n  }, [user, navigate]);\r\n  const handleAcceptDecline = async (provinceId, accept) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\r\n        `/api/province/accept/decline/${provinceId}?accept=${accept}`,\r\n        config\r\n      );\r\n\r\n      setUser((prevUser) => ({\r\n        ...prevUser,\r\n        provinceRequests: data.provinceRequests,\r\n      }));\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: \"Try again after sometime.\",\r\n        status: \"error\",\r\n      });\r\n    }\r\n  };\r\n  const handleAcceptDeclineNational = async (nationalId, accept) => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\r\n        `/api/national/accept/decline/${nationalId}?accept=${accept}`,\r\n        config\r\n      );\r\n\r\n      setUser((prevUser) => ({\r\n        ...prevUser,\r\n        nationalRequests: data.nationalRequests,\r\n      }));\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: \"Try again after sometime.\",\r\n        status: \"error\",\r\n      });\r\n    }\r\n  };\r\n  const handleSearch = async () => {\r\n    setPayment(false);\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePhotoChange = (event) => {\r\n    setPassportPhoto(event.target.files[0]);\r\n  };\r\n  const submitHandler = useCallback(\r\n    async (studentId) => {\r\n      if (!user) {\r\n        return;\r\n      }\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n\r\n        await axios.post(\r\n          `/api/submit/${user._id}?studentId=${studentId}`,\r\n          {\r\n            savePhoto,\r\n            details,\r\n          },\r\n          config\r\n        );\r\n        toast({\r\n          title: \"Submission successful!\",\r\n          description: \"Wait for your results under 24hrs\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n        toast({\r\n          title: \"Error occurred trying to send your work!\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    },\r\n    [toast, user, savePhoto, details]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (savePhoto || studentId) {\r\n      submitHandler(studentId);\r\n    }\r\n  }, [savePhoto, studentId]);\r\n\r\n  const submitDetails = () => {\r\n    if (passportPhoto) {\r\n      setPhotoLoading(true);\r\n\r\n      let data = new FormData();\r\n      data.append(\"file\", passportPhoto);\r\n      data.append(\"upload_preset\", \"worldsamma\");\r\n\r\n      fetch(\"https://api.cloudinary.com/v1_1/dsdlgmgwi/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setSavePhoto(data.url);\r\n          setPhotoLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setPhotoLoading(false);\r\n          toast({\r\n            title: \"Error Occurred uploading your passport photo.\",\r\n            description: \"Please try again later.\",\r\n            duration: 5000,\r\n            status: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display={\"flex\"}\r\n      width={\"100%\"}\r\n      minH={\"100vh\"}\r\n      justifyContent={\"start\"}\r\n      flexDir={\"column\"}\r\n      overflow={\"auto\"}\r\n      alignItems={\"center\"}\r\n      bg={\"whitesmoke\"}\r\n    >\r\n      <UpperNav />\r\n      <Box\r\n        display={\"flex\"}\r\n        flexDir={\"column\"}\r\n        width={{ base: \"100%\", md: \"80%\" }}\r\n        bg=\"whitesmoke\"\r\n        mt={20}\r\n        fontFamily=\"Arial, sans-serif\"\r\n        overflow=\"auto\"\r\n      >\r\n        <Box\r\n          display={\"flex\"}\r\n          flexWrap={\"wrap\"}\r\n          textAlign={\"start\"}\r\n          boxShadow=\"base\"\r\n          width={\"100%\"}\r\n          p=\"2\"\r\n          rounded=\"md\"\r\n          bg=\"whitesmoke\"\r\n        >\r\n          {\" \"}\r\n          <Image\r\n            src={user?.pic}\r\n            alt={`Profile*`}\r\n            borderRadius=\"full\"\r\n            boxSize={{ base: \"100px\", md: \"200px\" }}\r\n            border=\"4px solid white\"\r\n          />\r\n          <Box fontSize={\"md\"}>\r\n            {\" \"}\r\n            <Heading textAlign={\"center\"} mb={4} color={\"teal\"}>\r\n              Profile\r\n            </Heading>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Name:\r\n              </Text>\r\n              {user?.name} {user?.otherName}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Code:\r\n              </Text>{\" \"}\r\n              {user?.admission\r\n                ? user?.admission\r\n                : `Not enrolled: ${user?.belt}`}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Email:\r\n              </Text>{\" \"}\r\n              {user?.email}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Country:\r\n              </Text>{\" \"}\r\n              {user?.country}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Province:\r\n              </Text>{\" \"}\r\n              {user?.provinces}\r\n            </Box>\r\n            <Box display={\"flex\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Coach:\r\n              </Text>\r\n              {user?.coach ? \" ✔️\" : \"Not a coach\"}\r\n            </Box>\r\n            <Box display={\"flex\"} flexWrap={\"wrap\"}>\r\n              <Text fontWeight={\"bold\"} px={1}>\r\n                Highest Level Attained:\r\n              </Text>{\" \"}\r\n              {user?.belt}\r\n            </Box>\r\n            {user?._id === adminId && (\r\n              <Box display={\"flex\"} flexWrap={\"wrap\"}>\r\n                <Button\r\n                  colorScheme=\"teal\"\r\n                  onClick={() => navigate(\"/admin-work-slot\")}\r\n                  border={\"none\"}\r\n                  m={1}\r\n                >\r\n                  Admin Work Slot\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>{\" \"}\r\n        <Text width={\"100%\"} textAlign={\"center\"} p={\"3\"}>\r\n          Access all features in one place\r\n        </Text>\r\n        <Box\r\n          display={\"flex\"}\r\n          flexWrap={\"wrap\"}\r\n          width={\"100%\"}\r\n          p={\"3\"}\r\n          fontSize={\"small\"}\r\n        >\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            border={\"1px solid grey\"}\r\n            borderRadius={\"5px\"}\r\n            p={\"1\"}\r\n            m={\"1\"}\r\n          >\r\n            <GoDotFill />\r\n            <Text p={\"1\"}>Live stream competitions</Text>\r\n            <FaLockOpen style={{ color: \"green\" }} />\r\n          </Box>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            border={\"1px solid grey\"}\r\n            borderRadius={\"5px\"}\r\n            p={\"1\"}\r\n            m={\"1\"}\r\n          >\r\n            <GoDotFill />\r\n            <Text p={\"1\"}>Become a coach = 50%+ Revenue</Text>\r\n            {user?.coach ? (\r\n              <FaLockOpen style={{ color: \"green\" }} />\r\n            ) : (\r\n              <FaLock />\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            border={\"1px solid grey\"}\r\n            borderRadius={\"5px\"}\r\n            p={\"1\"}\r\n            m={\"1\"}\r\n          >\r\n            <GoDotFill />\r\n            <Text p={\"1\"}>Become a provincial coach = 70%+ Revenue</Text>\r\n            {user?.coach ? (\r\n              <FaLockOpen style={{ color: \"green\" }} />\r\n            ) : (\r\n              <FaLock />\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            border={\"1px solid grey\"}\r\n            borderRadius={\"5px\"}\r\n            p={\"1\"}\r\n            m={\"1\"}\r\n          >\r\n            <GoDotFill />\r\n            <Text p={\"1\"}>Become a national coach = 90%+ Revenue</Text>\r\n            {user?.coach ? (\r\n              <FaLockOpen style={{ color: \"green\" }} />\r\n            ) : (\r\n              <FaLock />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        {user?.coach && (\r\n          <>\r\n            <Box\r\n              display=\"flex\"\r\n              flexDir=\"column\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              width={\"100%\"}\r\n              minH={\"200px\"}\r\n              overflow={\"auto\"}\r\n            >\r\n              {loading ? (\r\n                <Stack width={\"100%\"}>\r\n                  <Skeleton height=\"20px\" />\r\n                  <Skeleton height=\"20px\" />\r\n                  <Skeleton height=\"20px\" />\r\n                </Stack>\r\n              ) : (\r\n                <Box\r\n                  display=\"flex\"\r\n                  flexDir=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  overflow=\"auto\"\r\n                  width={{ base: \"100%\", md: \"60%\" }}\r\n                  boxShadow=\"base\"\r\n                  mt={2}\r\n                  p=\"4\"\r\n                  rounded=\"md\"\r\n                  bg=\"whitesmoke\"\r\n                >\r\n                  <Heading mb={2}>Club Details</Heading>\r\n                  <Text\r\n                    fontSize={\"sm\"}\r\n                    fontWeight={500}\r\n                    bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n                    p={2}\r\n                    px={3}\r\n                    color={\"green.500\"}\r\n                    rounded={\"full\"}\r\n                    margin={1}\r\n                    width={\"90%\"}\r\n                  >\r\n                    Status (*\r\n                    {club && club.registered ? \"Registered\" : \"Not registered\"})\r\n                  </Text>\r\n                  <Text>Club Name: {club?.name}</Text>\r\n                  <Text>Club Code: {club?.code}</Text>\r\n                  <Button\r\n                    background={\"transparent\"}\r\n                    _hover={{ background: \"transparent\", color: \"green\" }}\r\n                    onClick={handleMembers}\r\n                    fontStyle={\"italic\"}\r\n                  >\r\n                    Members: {club?.members.length}\r\n                  </Button>\r\n                  <Text>Followers: {club?.followers.length}</Text>\r\n                  <Text>Received Likes: {club?.likes.length}</Text>\r\n                </Box>\r\n              )}\r\n\r\n              {showFollowers && (\r\n                <Box\r\n                  display={\"flex\"}\r\n                  flexDir=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  background={\"white\"}\r\n                  overflow={\"auto\"}\r\n                  boxShadow=\"base\"\r\n                  p=\"6\"\r\n                  mt={2}\r\n                  rounded=\"md\"\r\n                  bg=\"whitesmoke\"\r\n                  width={{ base: \"100%\", md: \"60%\" }}\r\n                >\r\n                  <Heading mb={2}>Members List</Heading>\r\n                  {club.members.length > 0 &&\r\n                    club.members.map((member, index) => (\r\n                      <Text fontSize={\"small\"} key={member._id}>\r\n                        {index + 1}. Name: {member.name} Adm: {member.admission}\r\n                      </Text>\r\n                    ))}\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </>\r\n        )}\r\n        {user?.coach && (\r\n          <Box\r\n            display=\"flex\"\r\n            flexDir={\"column\"}\r\n            justifyContent={\"center\"}\r\n            alignItems={\"center\"}\r\n            overflow={\"auto\"}\r\n            width={\"100%\"}\r\n            boxShadow=\"base\"\r\n            p=\"6\"\r\n            rounded=\"md\"\r\n            bg=\"whitesmoke\"\r\n          >\r\n            <Box textAlign={\"center\"} width={\"100%\"} mb={\"4\"}>\r\n              <Button\r\n                background={\"purple.400\"}\r\n                onClick={() => setRegister(!register)}\r\n              >\r\n                Register Students Manually\r\n              </Button>\r\n              {register && `↓`}\r\n            </Box>\r\n            {register && (\r\n              <Box\r\n                display=\"flex\"\r\n                flexDir=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                overflow=\"auto\"\r\n                width=\"100%\"\r\n                boxShadow=\"base\"\r\n                p=\"4\"\r\n                rounded=\"md\"\r\n                background=\"whitesmoke\"\r\n              >\r\n                {\" \"}\r\n                <AdmissionForm />\r\n              </Box>\r\n            )}\r\n            <Text\r\n              fontSize={\"sm\"}\r\n              fontWeight={500}\r\n              bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n              px={6}\r\n              p={\"3\"}\r\n              mb={\"4\"}\r\n              color={\"green.500\"}\r\n              rounded={\"full\"}\r\n            >\r\n              Coach's assisted student rank upgrading\r\n            </Text>\r\n            {!details || !passportPhoto}\r\n            <Box\r\n              display=\"flex\"\r\n              pb={2}\r\n              width={{ base: \"100%\", md: \"60%\" }}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n            >\r\n              <Input\r\n                placeholder=\"Search by name, email, or admission\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                fontSize={\"small\"}\r\n              />\r\n              <Button borderRadius={20} onClick={handleSearch}>\r\n                🔍Search\r\n              </Button>\r\n            </Box>\r\n            <Text>Or</Text>\r\n            {!student && (\r\n              <Box\r\n                display=\"flex\"\r\n                pb={2}\r\n                width={{ base: \"100%\", md: \"60%\" }}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n              >\r\n                <Textarea\r\n                  placeholder=\"Enter student details\"\r\n                  mr={2}\r\n                  value={details}\r\n                  onChange={(e) => setDetails(e.target.value)}\r\n                  fontSize={\"small\"}\r\n                />\r\n                <FormLabel>Picture</FormLabel>\r\n                <Input\r\n                  type=\"file\"\r\n                  accept=\"image/*\" // Only accept image files\r\n                  borderRadius={20}\r\n                  fontSize={\"small\"}\r\n                  onChange={handlePhotoChange}\r\n                  isDisabled={photoLoading}\r\n                />\r\n              </Box>\r\n            )}\r\n            <Box\r\n              display={\"flex\"}\r\n              flexDir={\"column\"}\r\n              overflow={\"auto\"}\r\n              width={\"100%\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n              overflowY={\"auto\"}\r\n            >\r\n              <Box\r\n                display={payment ? \"none\" : \"flex\"}\r\n                flexDir={\"column\"}\r\n                width={\"100%\"}\r\n                maxH={\"300px\"}\r\n                overflow={\"auto\"}\r\n              >\r\n                {loading ? (\r\n                  <Box\r\n                    display={\"flex\"}\r\n                    width={\"100%\"}\r\n                    padding=\"6\"\r\n                    boxShadow=\"lg\"\r\n                    bg=\"whitesmoke\"\r\n                  >\r\n                    <SkeletonCircle size=\"10\" />\r\n                    <SkeletonText\r\n                      mt=\"4\"\r\n                      noOfLines={4}\r\n                      spacing=\"4\"\r\n                      skeletonHeight=\"2\"\r\n                    />\r\n                  </Box>\r\n                ) : (\r\n                  searchResult?.map((user) => (\r\n                    <UserListItem\r\n                      key={user._id}\r\n                      user={user}\r\n                      handleFunction={() => {\r\n                        setStudent({\r\n                          id: user._id,\r\n                          name: user.name,\r\n                          email: user.email,\r\n                          pic: user.pic,\r\n                        });\r\n                        setPayment(true);\r\n                      }}\r\n                    />\r\n                  ))\r\n                )}\r\n              </Box>\r\n              {(payment || (details && passportPhoto)) && (\r\n                <Box p={\"6\"}>\r\n                  <Text\r\n                    textAlign={\"center\"}\r\n                    fontSize={\"sm\"}\r\n                    fontWeight={500}\r\n                    bg={useColorModeValue(\"green.50\", \"green.900\")}\r\n                    px={3}\r\n                    p=\"2.5\"\r\n                    mb={\"4\"}\r\n                    color={\"purple.500\"}\r\n                    rounded={\"full\"}\r\n                  >\r\n                    Upgrading: {student?.name} {student?.email} {details}\r\n                    ($5 Fee)\r\n                  </Text>{\" \"}\r\n                  <PayPalScriptProvider\r\n                    options={{\r\n                      clientId:\r\n                        \"AZAdYFR_SbadcgOcCLYn9ajkReJTZmOCnEeAvQ3xPYAE5BMYFBHi4vDeILfNwBO-hh-8wfyGC9lNeB1I\",\r\n                    }}\r\n                  >\r\n                    <PayPalButtons\r\n                      createOrder={(data, actions) => {\r\n                        const amount = 5.0;\r\n                        return actions.order.create({\r\n                          purchase_units: [\r\n                            {\r\n                              amount: {\r\n                                currency_code: \"USD\",\r\n                                value: amount.toFixed(2),\r\n                              },\r\n                            },\r\n                          ],\r\n                        });\r\n                      }}\r\n                      onApprove={async (data, actions) => {\r\n                        await submitDetails();\r\n                        await setStudentId(student._id);\r\n                        return actions.order.capture().then(function (details) {\r\n                          toast({\r\n                            title: \"Success\",\r\n                            description:\r\n                              \"Wait for WSF to send certificate to particulars.\",\r\n                            status: \"success\",\r\n                            duration: 3000,\r\n                            isClosable: true,\r\n                            position: \"bottom\",\r\n                          });\r\n                        });\r\n                      }}\r\n                      onCancel={() => {\r\n                        setPayment(false);\r\n                        toast({\r\n                          title: \"Cancelled\",\r\n                          status: \"info\",\r\n                          isClosable: true,\r\n                          position: \"bottom\",\r\n                        });\r\n                      }}\r\n                    />\r\n                  </PayPalScriptProvider>\r\n                  <Button\r\n                    fontSize={\"small\"}\r\n                    width={\"100%\"}\r\n                    bg={useColorModeValue(\"green.100\", \"green.900\")}\r\n                    onClick={() => {\r\n                      setShow(true);\r\n                    }}\r\n                    p={0}\r\n                  >\r\n                    <Image\r\n                      height={5}\r\n                      width={\"auto\"}\r\n                      src={\r\n                        \"https://res.cloudinary.com/dvc7i8g1a/image/upload/v1694007922/mpesa_ppfs6p.png\"\r\n                      }\r\n                      alt={\"\"}\r\n                      loading=\"lazy\"\r\n                    />{\" \"}\r\n                    Pay via Mpesa\r\n                  </Button>\r\n                  {show && (\r\n                    <Box padding={\"6\"}>\r\n                      <Text\r\n                        textAlign={\"center\"}\r\n                        justifyContent={\"center\"}\r\n                        fontSize={\"xl\"}\r\n                      >\r\n                        Enter Your Mpesa Phone Number (KSH 450/=)\r\n                      </Text>\r\n                      <Input\r\n                        fontSize={\"small\"}\r\n                        color={\"green.400\"}\r\n                        fontWeight={\"bold\"}\r\n                        placeholder=\"Enter phone number\"\r\n                        textAlign={\"center\"}\r\n                        type=\"number\"\r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n                        value={phoneNumber}\r\n                        minLength={10}\r\n                        maxLength={10}\r\n                      />\r\n                      <Divider p={2} />\r\n                      <Button\r\n                        width={\"100%\"}\r\n                        onClick={() => {\r\n                          makePaymentMpesa(\"450\", phoneNumber, user, toast);\r\n                          setShow(false);\r\n                          toast({\r\n                            title: \"Wait as message is sent\",\r\n                            status: \"loading\",\r\n                            isClosable: true,\r\n                            position: \"bottom\",\r\n                            duration: 5000,\r\n                          });\r\n                        }}\r\n                        isDisabled={phoneNumber.length !== parseInt(10)}\r\n                        colorScheme=\"green\"\r\n                      >\r\n                        Proceed\r\n                      </Button>\r\n                      <Text textAlign={\"center\"} justifyContent={\"center\"}>\r\n                        You'll be sent a Message\r\n                      </Text>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        {user?.provinceRequests?.length > 0 && (\r\n          <Box\r\n            textAlign={\"start\"}\r\n            fontSize={\"medium\"}\r\n            fontWeight={\"bold\"}\r\n            background={\"white\"}\r\n            overflow={\"auto\"}\r\n            boxShadow=\"base\"\r\n            p=\"4\"\r\n            height={\"200px\"}\r\n            rounded=\"md\"\r\n            bg=\"whitesmoke\"\r\n            width={\"100%\"}\r\n          >\r\n            <Heading mb={4}>Province Requests</Heading>\r\n            {user?.provinceRequests.map((member, index) => (\r\n              <Text\r\n                display={\"flex\"}\r\n                justifyContent={\"space-between\"}\r\n                alignItems={\"center\"}\r\n                key={member._id}\r\n                width={\"100%\"}\r\n              >\r\n                <Text\r\n                  p={1}\r\n                  fontStyle={\"italic\"}\r\n                  width={\"100%\"}\r\n                  fontSize={\"x-small\"}\r\n                >\r\n                  {\" \"}\r\n                  {index + 1}.{member.provincialCoach?.name} Adm:\r\n                  {member.provincialCoach?.admission} Approvals:{\" \"}\r\n                  {member.approvals?.length}\r\n                </Text>\r\n                <Button\r\n                  borderRadius={20}\r\n                  background={\"#A020F0\"}\r\n                  color={\"white\"}\r\n                  _hover={{ color: \"black\" }}\r\n                  fontSize={\"x-small\"}\r\n                  onClick={() => handleAcceptDecline(member._id, true)}\r\n                >\r\n                  Approve✔️\r\n                </Button>\r\n                <Button\r\n                  borderRadius={20}\r\n                  fontSize={\"x-small\"}\r\n                  color={\"white\"}\r\n                  _hover={{ color: \"black\" }}\r\n                  background={\"#A020F0\"}\r\n                  m={1}\r\n                  onClick={() => handleAcceptDecline(member._id, false)}\r\n                >\r\n                  Decline\r\n                </Button>\r\n              </Text>\r\n            ))}\r\n          </Box>\r\n        )}\r\n        {user?.nationalRequests?.length > 0 && (\r\n          <Box\r\n            textAlign={\"start\"}\r\n            fontSize={\"medium\"}\r\n            fontWeight={\"bold\"}\r\n            background={\"white\"}\r\n            overflow={\"auto\"}\r\n            boxShadow=\"base\"\r\n            p=\"4\"\r\n            height={\"200px\"}\r\n            rounded=\"md\"\r\n            bg=\"whitesmoke\"\r\n            width={\"100%\"}\r\n          >\r\n            <Heading mb={4}>National Requests</Heading>\r\n            {user?.nationalRequests.map((member, index) => (\r\n              <Box\r\n                display={\"flex\"}\r\n                justifyContent={\"space-between\"}\r\n                alignItems={\"center\"}\r\n                key={member._id}\r\n                width={\"100%\"}\r\n              >\r\n                <Text\r\n                  p={1}\r\n                  fontStyle={\"italic\"}\r\n                  width={\"100%\"}\r\n                  fontSize={\"x-small\"}\r\n                >\r\n                  {\" \"}\r\n                  {index + 1}.{member.nationalCoach.name} Adm:\r\n                  {member.nationalCoach.admission}\r\n                </Text>\r\n                <Button\r\n                  borderRadius={20}\r\n                  background={\"#A020F0\"}\r\n                  color={\"white\"}\r\n                  _hover={{ color: \"black\" }}\r\n                  fontSize={\"x-small\"}\r\n                  onClick={() => handleAcceptDeclineNational(member._id, true)}\r\n                >\r\n                  Approve✔️\r\n                </Button>\r\n                <Button\r\n                  borderRadius={20}\r\n                  fontSize={\"x-small\"}\r\n                  color={\"white\"}\r\n                  _hover={{ color: \"black\" }}\r\n                  background={\"#A020F0\"}\r\n                  m={1}\r\n                  onClick={() => handleAcceptDeclineNational(member._id, false)}\r\n                >\r\n                  Decline\r\n                </Button>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["axiosInstance","axios","create","interceptors","response","use","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","_x","apply","arguments","error","Promise","reject","UserFormValidation","z","object","name","string","min","max","otherName","email","gender","enum","password","confirmPassword","refine","val","ctx","parent","message","passport","regex","selectedCountry","provinces","optional","language","pic","url","useConnectSocket","user","_useState","useState","_useState2","_slicedToArray","socket","setSocket","socketRef","useRef","useEffect","token","current","userId","_id","newSocket","io","query","on","console","log","reason","connect","attemptNumber","concat","disconnect","makePaymentMpesa","_x3","_x4","_x5","_x6","_makePaymentMpesa","_callee2","amount","phoneNumber","toast","config","_yield$axios$post","_context2","headers","Authorization","post","sent","data","title","status","duration","position","t0","donationsMpesa","_x7","_x8","_x9","_donationsMpesa","_callee3","_yield$axios$post2","_context3","timestamp","messageTime","Date","timeDifference","seconds","Math","floor","minutes","hours","days","toLocaleDateString","hour","minute","month","day","year","setPicLoading","color","setPic","useToast","_jsxs","FormControl","id","children","_jsx","FormLabel","textColor","fontSize","Input","type","p","placeholder","accept","onChange","event","file","target","files","FormData","append","fetch","method","body","then","res","json","toString","catch","err","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","clubRequests","setClubRequests","_useState3","_useState4","loading","setLoading","ChatState","navigate","useNavigate","fetchClubRequests","useCallback","_yield$axios$get","get","declineRequest","_ref2","clubId","_yield$axios$get2","_Fragment","Button","backgroundColor","_hover","onClick","border","RiTeamLine","length","Text","bottom","right","transform","bg","borderRadius","width","height","Modal","isCentered","size","ModalOverlay","backdropFilter","ModalContent","ModalHeader","textAlign","ModalCloseButton","ModalBody","display","justifyContent","alignItems","flexDir","maxH","map","club","index","Box","background","Spinner","ModalFooter","textDecor","PasskeyModal","passkey","setPasskey","setError","VStack","spacing","align","HStack","PinInput","value","autoFocus","PinInputField","colorScheme","process","_ChatState","notification","setNotification","modal","setModal","displayValue","useBreakpointValue","base","md","textVisibility","w","paddingBottom","boxShadow","zIndex","top","Image","src","logo7","visibility","variant","px","userSelect","Requests","Menu","MenuButton","BellIcon","m","Badge","MenuList","pl","notif","MenuItem","filter","n","sender","admission","as","Avatar","cursor","IconButton","icon","TiThMenuOutline","Drawer","placement","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","CloseButton","DrawerBody","padding","isDisabled","MdLiveTv","RiAdminLine","localStorage","removeItem","PiSignOutLight","handleFunction","py","mb","mr","confirmpassword","formData","setFormData","showPaypal","setShowPaypal","_useState5","_useState6","show","setShow","_useState7","_useState8","subdivisions","setSubdivisions","_useState9","_useState10","student","setStudent","_useState11","_useState12","phone","setPhone","_useState13","_useState14","_useState15","_useState16","picLoading","handleClick","handleChange","e","_e$target","prevData","_objectSpread","_defineProperty","states","getStatesOfCountry","handleSubmit","preventDefault","description","isClosable","countryOptions","Object","entries","countries","_ref3","country","label","languageOptions","keys","languages","code","fetchSubdivisions","_ref4","handleManualRegister","_ref5","off","overflow","rounded","style","fontWeight","useColorModeValue","formatMessageTime","createdAt","isRequired","Select","option","subdivision","InputGroup","InputRightElement","h","RadioGroup","Stack","direction","Radio","UploadPicture","handleShow","mt","isLoading","PayPalScriptProvider","options","clientId","PayPalButtons","createOrder","actions","order","purchase_units","currency_code","toFixed","onApprove","_ref6","_callee4","_context4","capture","details","_x2","onCancel","alt","minLength","maxLength","Divider","parseInt","_user$provinceRequest","_user$nationalRequest","setClub","showFollowers","setShowFollowers","search","setSearch","searchResult","setSearchResult","payment","setPayment","register","setRegister","_useState17","_useState18","setPhoneNumber","_useState19","_useState20","_useState21","_useState22","savePhoto","setSavePhoto","_useState23","_useState24","setDetails","_useState25","_useState26","photoLoading","setPhotoLoading","_useState27","_useState28","passportPhoto","setPassportPhoto","_useState29","_useState30","studentId","setStudentId","_useState31","_useState32","isSocketConnected","setIsSocketConnected","connected","submitDetails","requestClub","coach","setTimeout","handleAcceptDecline","provinceId","setUser","prevUser","provinceRequests","handleAcceptDeclineNational","_callee5","nationalId","_context5","nationalRequests","handleSearch","_ref7","_callee6","_yield$axios$get3","_context6","submitHandler","_ref8","_callee7","_context7","minH","UpperNav","fontFamily","flexWrap","boxSize","Heading","belt","GoDotFill","FaLockOpen","FaLock","Skeleton","margin","registered","fontStyle","members","followers","likes","member","AdmissionForm","pb","Textarea","overflowY","SkeletonCircle","SkeletonText","noOfLines","skeletonHeight","UserListItem","_ref9","_callee8","_context8","_member$provincialCoa","_member$provincialCoa2","_member$approvals","provincialCoach","approvals","nationalCoach"],"sourceRoot":""}