# First stage: build dependencies and compile Janus
FROM ubuntu:20.04 AS build-stage

ENV DEBIAN_FRONTEND=noninteractive

# Split installation into smaller chunks to reduce memory usage
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential libmicrohttpd-dev libjansson-dev libssl-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libsrtp2-dev libsofia-sip-ua-dev libglib2.0-dev libopus-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libogg-dev libcurl4-openssl-dev liblua5.3-dev libconfig-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    pkg-config gengetopt libtool automake git wget ffmpeg tzdata ca-certificates && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libnice-dev zlib1g-dev libwebsockets-dev libgstreamer1.0-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Compile usrsctp
RUN git clone https://github.com/sctplab/usrsctp.git /opt/usrsctp && \
    cd /opt/usrsctp && \
    git checkout 0.9.5.0 && \
    ./bootstrap && \
    ./configure && \
    make && make install && \
    ldconfig && \
    cd .. && rm -rf /opt/usrsctp

# Compile Janus Gateway
RUN git clone --depth 1 https://github.com/meetecho/janus-gateway.git /opt/janus-gateway && \
    cd /opt/janus-gateway && \
    sh autogen.sh && \
    ./configure --enable-websockets --enable-data-channels --disable-rabbitmq --disable-mqtt --disable-docs && \
    make && make install && make configs

# Second stage: copy binaries and set up final image
FROM ubuntu:20.04

# Copy the necessary binaries from the build stage
COPY --from=build-stage /usr/local /usr/local
COPY --from=build-stage /opt/janus-gateway /opt/janus-gateway

# Copy only necessary headers for Janus Gateway
RUN mkdir -p /usr/local/janus && \
    cp /opt/janus-gateway/{.,plugins}/*.h /usr/local/janus

# Expose necessary ports
EXPOSE 8088 8089 8188 8189

# Start Janus
CMD ["janus", "-F", "/usr/local/etc/janus"]
