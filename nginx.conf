daemon off;
error_log /dev/stdout info;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4000;

        application stream {
    live on;
    hls on;
    hls_path /opt/data/hls;
    hls_cleanup on;  # Automatically delete old .ts files
    hls_fragment 2s;
    hls_playlist_length 10s;
}

    }
}

http {
    root /usr/share/nginx/html;
    sendfile off;
    tcp_nopush on;
    server_tokens off;
    access_log /dev/stdout combined;

    server {
        listen 80;
        server_name test.worldsamma.org;

        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
         listen 443 ssl;
         server_name test.worldsamma.org;

         ssl_certificate /etc/nginx/certificates/fullchain.pem;
         ssl_certificate_key /etc/nginx/certificates/privkey.pem;
         ssl_protocols TLSv1.2 TLSv1.3;
         ssl_ciphers HIGH:!aNULL:!MD5;

         # Serve frontend files at root
        location / {
         try_files $uri /index.html;  # React routing will handle the rest
        }

         # Proxy for backend API
        location /api/ {
         proxy_pass http://backend:8080;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "upgrade";
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket proxying to Janus
        location /ws/ {
         proxy_pass http://janus:8188;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "upgrade";
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header Origin $http_origin;  # Allows WebSocket origin
         proxy_set_header Sec-WebSocket-Protocol "janus-protocol"; 
         proxy_set_header X-Forwarded-Proto $scheme;  # Ensure it forwards the protocol correctly
         proxy_read_timeout 3600;
        }

         location /stream/ {
             proxy_pass rtmp://nginx:1935;  # Forward RTMPS requests to the RTMP server
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto $scheme;
           }

        # Janus HTTP API
        location /janus {
            proxy_pass http://janus:8088;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Live stream files
        location /live {
            alias /opt/data/hls;
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        location /crossdomain.xml {
            default_type text/xml;
            expires 24h;
        }
    }
}

daemon off;
error_log /dev/stdout info;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 443 ssl;  # Listen on port 443 for RTMPS
        ssl_certificate /etc/nginx/certificates/fullchain.pem;
        ssl_certificate_key /etc/nginx/certificates/privkey.pem;
        chunk_size 4000;

        application stream {
             live on;
             hls on;
             hls_path /opt/data/hls;
             hls_fragment 2s;
             hls_playlist_length 10s;

            #exec ffmpeg -i rtmp://nginx:1935/stream/$name \
              #-c:v libx264 -preset veryfast -r 30 -g 60 -b:v 2500k -maxrate 2500k -bufsize 5000k -s 1280x720 \
              #-c:a aac -b:a 128k -f flv rtmp://a.rtmp.youtube.com/live2/YOUR_YOUTUBE_STREAM_KEY;
            
            #exec ffmpeg -i rtmp://nginx:1935/stream/$name \
              #-vf "scale=720:1280,format=yuv420p" -c:v libx264 -preset veryfast -r 30 -g 60 -b:v 2000k -maxrate 2000k -bufsize 4000k \
              #-c:a aac -b:a 128k \
              #-f flv rtmps://live-upload.instagram.com:443/rtmp/IG_STREAM_KEY \
              #-f flv rtmps://stream.tiktok.com/live/your-tiktok-stream-key;
            
            #exec ffmpeg -i rtmp://nginx:1935/stream/$name \
              #-c:v libx264 -preset veryfast -r 30 -g 60 -b:v 4000k -maxrate 4000k -bufsize 8000k -s 1280x720 \
              #-c:a aac -b:a 128k \
              #-f flv rtmps://live-api-s.facebook.com:443/rtmp/FB_STREAM_KEY;
        }
    }
}

http {
    root /usr/share/nginx/html;
    sendfile off;
    tcp_nopush on;
    server_tokens off;
    access_log /dev/stdout combined;

    server {
        listen 80;
        server_name test.worldsamma.org;

        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
         listen 443 ssl;
         server_name test.worldsamma.org;

         ssl_certificate /etc/nginx/certificates/fullchain.pem;
         ssl_certificate_key /etc/nginx/certificates/privkey.pem;
         ssl_protocols TLSv1.2 TLSv1.3;
         ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:EECDH+AESGCM:!ADH:!AECDH:!MD5';
         ssl_prefer_server_ciphers on;

         # Serve frontend files at root
        location / {
         try_files $uri /index.html;  # React routing will handle the rest
        }

         # Proxy for backend API
        location /api/ {
         proxy_pass http://backend:8080;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "upgrade";
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket proxying to Janus
        location /ws/ {
         proxy_pass http://janus:8188;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "upgrade";
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header Origin $http_origin;  # Allows WebSocket origin
         proxy_set_header X-Forwarded-Proto $scheme;  # Ensure it forwards the protocol correctly
         proxy_read_timeout 3600;
        }

        # Janus HTTP API
        location /janus {
            proxy_pass http://janus:8088;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Live stream files
        location /live {
            alias /opt/data/hls;
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        location /crossdomain.xml {
            default_type text/xml;
            expires 24h;
        }
    }
}
